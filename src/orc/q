File \orangec\include\assert.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\bios.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\complex.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\conio.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\ctype.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\dir.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\direct.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\dos.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\dpmi.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\errno.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\exception
extern bool _RTL_FUNC uncaught_exception();
  _RTL_CLASS class exception     
    _RTL_FUNC exception () __NOTHROW
    _RTL_FUNC exception (const exception&) __NOTHROW 
    _RTL_FUNC exception& operator= (const exception& e)  __NOTHROW
    _RTL_FUNC virtual ~exception ()  __NOTHROW;
  _RTL_CLASS class bad_exception : public exception     
    _RTL_FUNC bad_exception () __NOTHROW : exception( )
    _RTL_FUNC bad_exception(const bad_exception&) __NOTHROW
    _RTL_FUNC bad_exception& operator=(const bad_exception&) __NOTHROW
    _RTL_FUNC virtual ~bad_exception ()  __NOTHROW;
File \orangec\include\excpt.h
 * Support for operating system level structured exception handling.
 * The type of function that is expected as an exception handler to be
 * A macro which installs the supplied exception handler.
 * exception handler. Should be used only in conjunction with the above
File \orangec\include\fcntl.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\fenv.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\float.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
    /* use affine infinity, mask underflow and precision exceptions */
    SIGFPE signal error types (for integer & float exceptions).
#define ILL_EXECUTION 20   /* Illegal operation exception  */
#define ILL_BREAKPOINT 23  /* Breakpoint exception */
#define ILL_SINGLE_STEP 24 /* Singlestep exception */
File \orangec\include\functional
    : public exception
#include <exception>
    : public exception
File \orangec\include\future
    void set_exception(exception_ptr p);
    void set_exception_at_thread_exit(exception_ptr p);
    void set_exception(exception_ptr p);
    void set_exception_at_thread_exit(exception_ptr p);
    void set_exception(exception_ptr p);
    void set_exception_at_thread_exit(exception_ptr p);
#include <exception>
    exception_ptr __exception_;
        {return (__state_ & __constructed) || (__exception_ != nullptr);}
    void set_exception(exception_ptr __p);
    void set_exception_at_thread_exit(exception_ptr __p);
    if (this->__exception_ != nullptr)
        rethrow_exception(this->__exception_);
    if (this->__exception_ != nullptr)
        rethrow_exception(this->__exception_);
    if (this->__exception_ != nullptr)
        rethrow_exception(this->__exception_);
        this->set_exception(current_exception());
        this->set_exception(current_exception());
        this->set_exception(current_exception());
        this->set_exception(current_exception());
    void set_exception(exception_ptr __p);
    void set_exception_at_thread_exit(exception_ptr __p);
            __state_->set_exception(make_exception_ptr(
promise<_Rp>::set_exception(exception_ptr __p)
    __state_->set_exception(__p);
promise<_Rp>::set_exception_at_thread_exit(exception_ptr __p)
    __state_->set_exception_at_thread_exit(__p);
    void set_exception(exception_ptr __p);
    void set_exception_at_thread_exit(exception_ptr __p);
            __state_->set_exception(make_exception_ptr(
promise<_Rp&>::set_exception(exception_ptr __p)
    __state_->set_exception(__p);
promise<_Rp&>::set_exception_at_thread_exit(exception_ptr __p)
    __state_->set_exception_at_thread_exit(__p);
    void set_exception(exception_ptr __p);
    void set_exception_at_thread_exit(exception_ptr __p);
        __p_.set_exception(current_exception());
        __p_.set_exception_at_thread_exit(current_exception());
        __p_.set_exception(current_exception());
        __p_.set_exception_at_thread_exit(current_exception());
File \orangec\include\i86.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\inttypes.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\io.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\ios
    iostate exceptions() const;
    void exceptions(iostate except);
    _LIBCPP_INLINE_VISIBILITY iostate exceptions() const;
    _LIBCPP_INLINE_VISIBILITY void exceptions(iostate __iostate);
    iostate         __exceptions_;
ios_base::exceptions() const
    return __exceptions_;
ios_base::exceptions(iostate __iostate)
    __exceptions_ = __iostate;
    _LIBCPP_ALWAYS_INLINE iostate exceptions() const {return ios_base::exceptions();}
    _LIBCPP_ALWAYS_INLINE void exceptions(iostate __iostate) {ios_base::exceptions(__iostate);}
        exceptions(__rhs.exceptions());
File \orangec\include\iso646.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\libgen.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\libp.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\limits.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\llp.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\locale.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\locking.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\malloc.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\math.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
    struct _exception
    struct _exceptionl
    int _RTL_FUNC _matherr(struct _exception* __e);
    int _matherrl(struct _exceptionl* __e);
File \orangec\include\memory
    : public std::exception
    : public std::exception
File \orangec\include\memory.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\new
    : public exception
#include <exception>
    : public exception
File \orangec\include\ostream
                      && !uncaught_exception())
File \orangec\include\process.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\regex.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\search.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\setjmp.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\share.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\signal.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stat.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdalign.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdarg.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdatomic.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdbool.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stddef.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdexcept
class xxx_error : public exception // at least indirectly
#include <exception>
    : public exception
    : public exception
File \orangec\include\stdint.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdio.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdlib.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\stdnoreturn.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\string.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\strings.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\structur.h
    DWORD Xer;			/* Fixed point exception register */
File \orangec\include\tchar.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\tgmath.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\threads.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\time.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\timeb.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\uchar.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\unistd.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\utime.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\vector
    // but if an exception is thrown after that the annotation has to be undone.
File \orangec\include\wchar.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\wctype.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\_defs.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\_locale.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
File \orangec\include\_rtti.h
 *     As a special exception, if other files instantiate templates or
 *     This exception does not invalidate any other reasons why a work
#define VTAB_XT_OFFS  12  /* VTAB offset - pointer to exception data offset */
    THROWREC *throwRecord;  // exception specification
        int ebpoffs; /* symbol offset from exception block */
    struct _xctab *next; /* link to next exception higher function */
    void *_xceptfunc; /* windows exception handler */
File \orangec\include\__config
#define cxx_exceptions 1
#if !(__has_feature(cxx_exceptions))
File \orangec\include\__functional_03
    : public exception
File \orangec\include\__functional_base
#include <exception>
File \orangec\include\__tree
All nodes (with the exception of end_node), even the node referred to as
