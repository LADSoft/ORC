;File RCFile.cpp
;Compiler version 6.0.43.1
	section code align=2        class=CODE use32
	section data align=4        class=DATA use32
	section bss  align=4        class=BSS use32
	section const  align=8        class=CONST use32
	section string  align=2        class=STRING use32
	section tls  align=8 class=TLS use32
	section cstartup align=2 class=INITDATA use32
	section crundown align=2 class=EXITDATA use32
section code
	section vsc@$xt@9exception virtual
@$xt@9exception:
	dd	@$@std@exception@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	065h
	db	078h
	db	063h
	db	065h
	db	070h
	db	074h
	db	069h
	db	06fh
	db	06eh
	db	00h
	dd	00h
section code
	section vsc@$xt@18__libcpp_refstring virtual
@$xt@18__libcpp_refstring:
	dd	@std@__1@__libcpp_refstring@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	072h
	db	065h
	db	066h
	db	073h
	db	074h
	db	072h
	db	069h
	db	06eh
	db	067h
	db	00h
	dd	00h
section code
	section vsc@$xt@11logic_error virtual
@$xt@11logic_error:
	dd	@$@std@logic_error@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	06ch
	db	06fh
	db	067h
	db	069h
	db	063h
	db	05fh
	db	065h
	db	072h
	db	072h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@9exception+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@12length_error virtual
@$xt@12length_error:
	dd	@$@std@length_error@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	06ch
	db	065h
	db	06eh
	db	067h
	db	074h
	db	068h
	db	05fh
	db	065h
	db	072h
	db	072h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@11logic_error+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@12out_of_range virtual
@$xt@12out_of_range:
	dd	@$@std@out_of_range@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	06fh
	db	075h
	db	074h
	db	05fh
	db	06fh
	db	066h
	db	05fh
	db	072h
	db	061h
	db	06eh
	db	067h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@11logic_error+0
	dd	00h
	dd	00h
section code
[global	@RCFile@CvtString$qrx#basic_string$C#char_traits$C~#allocator$C~~]
@RCFile@CvtString$qrx#basic_string$C#char_traits$C~#allocator$C~~:
; Line 49:	std::string RCFile::CvtString(const std::wstring& str) 
; Line 50:	{ 
	add	esp,0fffffc00h
	push	ebx
	push	esi
L_3:
	mov	ebx,dword [esp+04h+0408h]
	mov	eax,dword [esp+0ch+0408h]
; Line 51:	    char buf[1024], *q = buf; 
	lea	esi,[esp-0400h+0408h]
; Line 52:	    const wchar_t* p = str.c_str(); 
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@c_str$xqv]
	pop	ecx
	mov	ecx,eax
	cmp	word [ecx],byte 00h
	je	short	L_7
L_6:
; Line 54:	        *q++ = *p++; 
	mov	ecx,eax
	mov	cl,byte [ecx]
	mov	edx,esi
	mov	byte [edx],cl
	add	eax,byte 02h
	inc	esi
L_8:
; Line 53:	    while (*p) 
	mov	ecx,eax
	cmp	word [ecx],byte 00h
	jne	short	L_6
L_7:
; Line 55:	    *q = 0; 
	mov	byte [esi],00h
; Line 56:	    return buf; 
	lea	eax,[esp-0400h+0408h]
	push	eax
	push	ebx
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	eax,dword [esp+04h+0408h]
; Line 57:	} 
L_4:
	pop	esi
	pop	ebx
	add	esp,0400h
	ret
[global	@RCFile@CvtString$qrx#basic_string$c#char_traits$c~#allocator$c~~]
@RCFile@CvtString$qrx#basic_string$c#char_traits$c~#allocator$c~~:
; Line 58:	std::wstring RCFile::CvtString(const std::string& str) 
; Line 59:	{ 
	add	esp,0fffff800h
	push	ebx
	push	esi
L_18:
	mov	ebx,dword [esp+04h+0808h]
	mov	eax,dword [esp+0ch+0808h]
; Line 60:	    wchar_t buf[1024], *q = buf; 
	lea	esi,[esp-0800h+0808h]
; Line 61:	    const char* p = str.c_str(); 
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@c_str$xqv]
	pop	ecx
	mov	ecx,eax
	cmp	byte [ecx],byte 00h
	je	short	L_22
L_21:
; Line 63:	        *q++ = *p++; 
	mov	ecx,eax
	movsx	ecx,byte [ecx]
	mov	edx,esi
	mov	word [edx],cx
	inc	eax
	add	esi,byte 02h
L_23:
; Line 62:	    while (*p) 
	mov	ecx,eax
	cmp	byte [ecx],byte 00h
	jne	short	L_21
L_22:
; Line 64:	    *q = 0; 
	mov	word [esi],00h
; Line 65:	    return buf; 
	lea	eax,[esp-0800h+0808h]
	push	eax
	push	ebx
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxC]
	pop	ecx
	pop	ecx
	mov	eax,dword [esp+04h+0808h]
; Line 66:	} 
L_19:
	pop	esi
	pop	ebx
	add	esp,0800h
	ret
[global	@RCFile@IsKeyword$qv]
@RCFile@IsKeyword$qv:
; Line 67:	bool RCFile::IsKeyword() 
; Line 68:	{ 
	add	esp,byte 0ffffffe8h
L_33:
	mov	eax,dword [esp+04h+018h]
; Line 69:	    bool rv = GetToken() && GetToken()->IsKeyword(); 
	mov	ecx,eax
	add	ecx,byte 08h
	mov	ecx,dword [ecx+0ch]
L_69:
L_54:
	and	ecx,ecx
	je	short	L_40
	mov	ecx,eax
	add	ecx,byte 08h
	mov	ecx,dword [ecx+0ch]
L_101:
L_86:
	push	ecx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_133:
L_118:
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	and	al,al
	jne	short	L_38
L_40:
	xor	eax,eax
	jmp	short	L_39
L_38:
	mov	eax,01h
L_39:
	and	eax,eax
	setne	al
; Line 70:	    return rv; 
; Line 71:	} 
L_34:
	add	esp,byte 018h
	ret
[global	@RCFile@GetTokenId$qv]
@RCFile@GetTokenId$qv:
; Line 72:	kw RCFile::GetTokenId() 
; Line 73:	{ 
	add	esp,byte 0ffffffech
	push	ebx
	push	esi
L_141:
	mov	esi,dword [esp+04h+01ch]
; Line 74:	    kw rv = (kw) 0; 
	xor	ebx,ebx
; Line 75:	    if (IsKeyword()) 
	mov	eax,esi
	push	eax
	call	@RCFile@IsKeyword$qv
	pop	ecx
	and	al,al
	je	short	L_144
; Line 76:	    { 
; Line 77:	        rv = GetToken()->GetKeyword(); 
	mov	eax,esi
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_181:
L_166:
	push	eax
	mov	eax,esi
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_213:
L_198:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	mov	ebx,eax
; Line 78:	        NextToken(); 
	mov	eax,esi
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_230:
L_144:
; Line 79:	    } 
; Line 80:	    return rv; 
	mov	eax,ebx
; Line 81:	} 
L_142:
	pop	esi
	pop	ebx
	add	esp,byte 014h
	ret
[global	@RCFile@IsNumber$qv]
@RCFile@IsNumber$qv:
; Line 82:	bool RCFile::IsNumber() 
; Line 83:	{ 
	add	esp,0ffffff78h
	push	ebx
L_236:
	mov	ebx,dword [esp+04h+08ch]
; Line 84:	    bool rv = 
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_272:
L_257:
	and	eax,eax
	je	near	L_243
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_304:
L_289:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_336:
L_321:
	mov	eax,dword [eax]
	call	dword [eax]
	pop	ecx
	and	al,al
	jne	near	L_241
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_369:
L_354:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_401:
L_386:
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	and	al,al
	je	near	L_340
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_433:
L_418:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_465:
L_450:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 01h
	je	near	L_241
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_497:
L_482:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_529:
L_514:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 03h
	je	short	L_241
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_561:
L_546:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_593:
L_578:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 04h
	je	short	L_241
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_625:
L_610:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_657:
L_642:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 05h
	je	short	L_241
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_689:
L_674:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_721:
L_706:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 06h
	je	short	L_241
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_753:
L_738:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_785:
L_770:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 019h
	je	short	L_241
L_340:
L_243:
	xor	eax,eax
	jmp	short	L_242
L_241:
	mov	eax,01h
L_242:
	and	eax,eax
	setne	al
; Line 89:	                                      GetToken()->GetKeyword() == kw::bcompl || GetToken()->GetKeyword() == kw::comma))); 
; Line 90:	    return rv; 
; Line 91:	} 
L_237:
	pop	ebx
	add	esp,088h
	ret
[global	@RCFile@GetNumber$qv]
@RCFile@GetNumber$qv:
; Line 92:	unsigned RCFile::GetNumber() 
; Line 93:	{ 
	add	esp,byte 0ffffffech
	push	ebx
L_793:
	mov	ebx,dword [esp+04h+018h]
; Line 94:	    if (GetToken()->GetKeyword() == kw::comma) 
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_831:
L_816:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_863:
L_848:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 019h
	jne	short	L_796
; Line 95:	        return 0; 
	xor	eax,eax
	jmp	short	L_794
L_796:
; Line 96:	    return expr.Eval(); 
	mov	eax,ebx
	add	eax,byte 018h
	push	eax
	call	@Expression@conditional$qv
	pop	ecx
L_880:
; Line 97:	} 
L_794:
	pop	ebx
	add	esp,byte 014h
	ret
[global	@RCFile@IsString$qv]
@RCFile@IsString$qv:
; Line 98:	bool RCFile::IsString() 
; Line 99:	{ 
	add	esp,byte 0ffffffe8h
L_886:
	mov	eax,dword [esp+04h+018h]
; Line 100:	    bool rv = GetToken() && GetToken()->IsString(); 
	mov	ecx,eax
	add	ecx,byte 08h
	mov	ecx,dword [ecx+0ch]
L_922:
L_907:
	and	ecx,ecx
	je	short	L_893
	mov	ecx,eax
	add	ecx,byte 08h
	mov	ecx,dword [ecx+0ch]
L_954:
L_939:
	push	ecx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_986:
L_971:
	mov	eax,dword [eax]
	call	dword [eax+010h]
	pop	ecx
	and	al,al
	jne	short	L_891
L_893:
	xor	eax,eax
	jmp	short	L_892
L_891:
	mov	eax,01h
L_892:
	and	eax,eax
	setne	al
; Line 101:	    return rv; 
; Line 102:	} 
L_887:
	add	esp,byte 018h
	ret
	section vsc@$xt@13runtime_error virtual
@$xt@13runtime_error:
	dd	@$@std@runtime_error@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	072h
	db	075h
	db	06eh
	db	074h
	db	069h
	db	06dh
	db	065h
	db	05fh
	db	065h
	db	072h
	db	072h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@9exception+0
	dd	00h
	dd	00h
section code
[global	@RCFile@GetString$qv]
@RCFile@GetString$qv:
; Line 103:	std::wstring RCFile::GetString() 
; Line 104:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,0ffffff78h
	push	ebx
	push	esi
L_996:
	mov	ebx,dword [ebp+08h]
	mov	esi,dword [ebp+0ch]
	push	dword @$xc@RCFile@GetString$qv
	lea	eax,[ebp-054h]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_1020:
; Line 105:	    std::wstring rv; 
	lea	eax,[ebp-018h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-054h+014h],01h
; Line 106:	    if (IsString()) 
	mov	eax,esi
	push	eax
	call	@RCFile@IsString$qv
	pop	ecx
	and	al,al
	je	short	L_999
; Line 107:	    { 
	mov	eax,esi
	push	eax
	call	@RCFile@IsString$qv
	pop	ecx
	and	al,al
	je	near	L_1013
L_1003:
; Line 109:	        { 
; Line 110:	            rv += GetToken()->GetString(); 
	mov	eax,esi
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1052:
L_1037:
	push	eax
	lea	eax,[ebp-088h]
	push	eax
	mov	eax,esi
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1084:
L_1069:
	mov	eax,dword [eax]
	call	dword [eax+024h]
	pop	ecx
	pop	ecx
	push	eax
	lea	eax,[ebp-018h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basadd$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 111:	            NextToken(); 
	mov	eax,esi
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_1101:
L_1005:
; Line 108:	        while (IsString()) 
	mov	eax,esi
	push	eax
	call	@RCFile@IsString$qv
	pop	ecx
	and	al,al
	jne	short	L_1003
L_1004:
; Line 112:	        } 
	jmp	short	L_1013
L_999:
; Line 113:	    } 
; Line 114:	    else 
; Line 115:	    { 
; Line 116:	        throw std::runtime_error("String expected"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_995
	lea	eax,[ebp-070h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-054h+014h],02h
	push	eax
	lea	eax,[ebp-054h]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-054h+014h],03h
	lea	eax,[ebp-070h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_1013:
; Line 117:	    } 
; Line 118:	    return rv; 
	lea	eax,[ebp-018h]
	push	eax
	push	ebx
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-054h+014h],04h
	mov	eax,dword [ebp+08h]
; Line 119:	} 
L_997:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@GetString$qv virtual
@$xc@RCFile@GetString$qv:
	dd	00h
	dd	0ffffffach
	dd	0400h
	dd	@$xt@#basic_string$C#char_traits$C~#allocator$C~~+0
	dd	0ffffffe8h
	dd	01h
	dd	00h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0ffffff90h
	dd	02h
	dd	03h
	dd	00h
section code
[global	@RCFile@IsIdentifier$qv]
@RCFile@IsIdentifier$qv:
; Line 120:	bool RCFile::IsIdentifier() 
; Line 121:	{ 
	add	esp,byte 0ffffffe8h
L_1107:
	mov	eax,dword [esp+04h+018h]
; Line 122:	    bool rv = GetToken() && GetToken()->IsIdentifier(); 
	mov	ecx,eax
	add	ecx,byte 08h
	mov	ecx,dword [ecx+0ch]
L_1143:
L_1128:
	and	ecx,ecx
	je	short	L_1114
	mov	ecx,eax
	add	ecx,byte 08h
	mov	ecx,dword [ecx+0ch]
L_1175:
L_1160:
	push	ecx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1207:
L_1192:
	mov	eax,dword [eax]
	call	dword [eax+014h]
	pop	ecx
	and	al,al
	jne	short	L_1112
L_1114:
	xor	eax,eax
	jmp	short	L_1113
L_1112:
	mov	eax,01h
L_1113:
	and	eax,eax
	setne	al
; Line 123:	    return rv; 
; Line 124:	} 
L_1108:
	add	esp,byte 018h
	ret
[global	@RCFile@GetId$qv]
@RCFile@GetId$qv:
; Line 125:	std::wstring RCFile::GetId() 
; Line 126:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,0ffffff70h
	push	ebx
	push	esi
	push	edi
L_1216:
	mov	eax,dword [ebp+08h]
	mov	dword [ebp-08h],eax
	mov	eax,dword [ebp+0ch]
	mov	dword [ebp-04h],eax
	push	dword @$xc@RCFile@GetId$qv
	lea	eax,[ebp-05ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_1239:
; Line 127:	    std::wstring rv; 
	lea	eax,[ebp-020h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-05ch+014h],01h
; Line 128:	    if (IsIdentifier()) 
	mov	eax,dword [ebp-04h]
	push	eax
	call	@RCFile@IsIdentifier$qv
	pop	ecx
	and	al,al
	je	near	L_1219
; Line 129:	    { 
; Line 130:	        rv = CvtString(GetToken()->GetId()); 
	mov	eax,dword [ebp-04h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1271:
L_1256:
	push	eax
	mov	eax,dword [ebp-04h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1303:
L_1288:
	mov	eax,dword [eax]
	call	dword [eax+03ch]
	pop	ecx
	push	eax
	mov	eax,dword [ebp-04h]
	push	eax
	lea	eax,[ebp-090h]
	push	eax
	call	@RCFile@CvtString$qrx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
	mov	dword [ebp-05ch+014h],02h
	push	eax
	lea	eax,[ebp-020h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	xor	ebx,ebx
	lea	eax,[ebp-020h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@size$xqv]
	pop	ecx
	cmp	ebx,eax
	jnc	short	L_1225
L_1223:
; Line 132:	            rv[i] = toupper(rv[i]); 
	mov	edi,ebx
	push	edi
	lea	eax,[ebp-020h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$barray$qui]
	pop	ecx
	pop	ecx
	movzx	eax,word [eax]
	push	eax
	call	dword [_toupper]
	pop	ecx
	mov	esi,eax
	push	edi
	lea	eax,[ebp-020h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$barray$qui]
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	eax,esi
	mov	word [ecx],ax
L_1226:
	inc	ebx
; Line 131:	        for (int i = 0; i < rv.size(); i++) 
L_1224:
	lea	eax,[ebp-020h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@size$xqv]
	pop	ecx
	cmp	ebx,eax
	jc	short	L_1223
L_1225:
; Line 133:	        NextToken(); 
	mov	eax,dword [ebp-04h]
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_1320:
	mov	dword [ebp-05ch+014h],03h
	lea	eax,[ebp-090h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
	jmp	short	L_1232
L_1219:
; Line 134:	    } 
; Line 135:	    else 
; Line 136:	    { 
; Line 137:	        throw std::runtime_error("identifier expected"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1215
	lea	eax,[ebp-078h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-05ch+014h],04h
	push	eax
	lea	eax,[ebp-05ch]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-05ch+014h],05h
	lea	eax,[ebp-078h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_1232:
; Line 138:	    } 
; Line 139:	    return rv; 
	lea	eax,[ebp-020h]
	push	eax
	mov	eax,dword [ebp-08h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-05ch+014h],06h
	mov	eax,dword [ebp+08h]
; Line 140:	} 
L_1217:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@GetId$qv virtual
@$xc@RCFile@GetId$qv:
	dd	00h
	dd	0ffffffa4h
	dd	0400h
	dd	@$xt@#basic_string$C#char_traits$C~#allocator$C~~+0
	dd	0ffffffe0h
	dd	01h
	dd	00h
	dd	0400h
	dd	@$xt@#basic_string$C#char_traits$C~#allocator$C~~+0
	dd	0ffffff70h
	dd	02h
	dd	03h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0ffffff88h
	dd	04h
	dd	05h
	dd	00h
section code
[global	@RCFile@NeedEol$qv]
@RCFile@NeedEol$qv:
; Line 141:	void RCFile::NeedEol() 
; Line 142:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb4h
	push	ebx
L_1327:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@RCFile@NeedEol$qv
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_1335:
; Line 143:	    if (!AtEol()) 
	mov	eax,ebx
	add	eax,byte 08h
	mov	al,byte [eax+04h]
L_1367:
L_1352:
	and	al,al
	jne	short	L_1330
; Line 144:	        throw std::runtime_error("End of line expected"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1326
	lea	eax,[ebp-04ch]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],01h
	push	eax
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04ch]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_1330:
; Line 145:	} 
L_1328:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@NeedEol$qv virtual
@$xc@RCFile@NeedEol$qv:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0ffffffb4h
	dd	01h
	dd	02h
	dd	00h
section code
[global	@RCFile@SkipComma$qv]
@RCFile@SkipComma$qv:
; Line 146:	void RCFile::SkipComma() 
; Line 147:	{ 
	add	esp,byte 0ffffffech
	push	ebx
L_1374:
	mov	ebx,dword [esp+04h+018h]
; Line 148:	    if (IsKeyword() && GetToken()->GetKeyword() == kw::comma) 
	mov	eax,ebx
	push	eax
	call	@RCFile@IsKeyword$qv
	pop	ecx
	and	al,al
	je	short	L_1377
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1412:
L_1397:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1444:
L_1429:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 019h
	jne	short	L_1377
; Line 149:	        NextToken(); 
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_1461:
L_1377:
; Line 150:	} 
L_1375:
	pop	ebx
	add	esp,byte 014h
	ret
[global	@RCFile@NeedBegin$qv]
@RCFile@NeedBegin$qv:
; Line 151:	void RCFile::NeedBegin() 
; Line 152:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffff98h
	push	ebx
L_1468:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@RCFile@NeedBegin$qv
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_1478:
; Line 153:	    if (!IsKeyword() || (GetToken()->GetKeyword() != kw::openbr && GetToken()->GetKeyword() != kw::BEGIN)) 
	mov	eax,ebx
	push	eax
	call	@RCFile@IsKeyword$qv
	pop	ecx
	and	al,al
	je	short	L_1482
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1511:
L_1496:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1543:
L_1528:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 01ah
	je	short	L_1471
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1575:
L_1560:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1607:
L_1592:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 022h
	je	short	L_1471
L_1482:
; Line 154:	    { 
; Line 155:	        throw std::runtime_error("Begin expected"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1467
	lea	eax,[ebp-068h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],01h
	push	eax
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-068h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_1471:
; Line 156:	    } 
; Line 157:	    NextToken(); 
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_1624:
; Line 158:	} 
L_1469:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@NeedBegin$qv virtual
@$xc@RCFile@NeedBegin$qv:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0ffffff98h
	dd	01h
	dd	02h
	dd	00h
section code
[global	@RCFile@NeedEnd$qv]
@RCFile@NeedEnd$qv:
; Line 159:	void RCFile::NeedEnd() 
; Line 160:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffff98h
	push	ebx
L_1631:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@RCFile@NeedEnd$qv
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_1639:
; Line 161:	    if (!IsKeyword() || (GetToken()->GetKeyword() != kw::closebr && GetToken()->GetKeyword() != kw::END)) 
	mov	eax,ebx
	push	eax
	call	@RCFile@IsKeyword$qv
	pop	ecx
	and	al,al
	je	short	L_1643
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1672:
L_1657:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1704:
L_1689:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 01bh
	je	short	L_1634
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1736:
L_1721:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1768:
L_1753:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 034h
	je	short	L_1634
L_1643:
; Line 162:	        throw std::runtime_error("End expected"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1630
	lea	eax,[ebp-068h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],01h
	push	eax
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-068h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_1634:
; Line 163:	    NextToken(); 
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_1785:
; Line 164:	} 
L_1632:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@NeedEnd$qv virtual
@$xc@RCFile@NeedEnd$qv:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0ffffff98h
	dd	01h
	dd	02h
	dd	00h
section code
[global	@RCFile@GetFileName$qv]
@RCFile@GetFileName$qv:
; Line 165:	std::string RCFile::GetFileName() 
; Line 166:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,0fffffeb4h
	push	ebx
	push	esi
	push	edi
L_1793:
	mov	esi,dword [ebp+08h]
	mov	eax,dword [ebp+08h]
	mov	dword [ebp-04h],eax
	mov	ebx,dword [ebp+0ch]
	push	dword @$xc@RCFile@GetFileName$qv
	lea	eax,[ebp-070h]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_1818:
; Line 167:	    if (GetToken()->IsString()) 
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1850:
L_1835:
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1882:
L_1867:
	mov	eax,dword [eax]
	call	dword [eax+010h]
	pop	ecx
	and	al,al
	je	near	L_1796
; Line 168:	    { 
; Line 169:	        std::string rv = CvtString(GetToken()->GetRawString()); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1914:
L_1899:
	push	eax
	lea	eax,[ebp-0144h]
	push	eax
	mov	eax,ebx
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_1946:
L_1931:
	mov	eax,dword [eax]
	call	dword [eax+028h]
	pop	ecx
	pop	ecx
	push	eax
	mov	eax,ebx
	push	eax
	lea	eax,[ebp-012ch]
	push	eax
	call	@RCFile@CvtString$qrx#basic_string$C#char_traits$C~#allocator$C~~
	add	esp,byte 0ch
	mov	dword [ebp-070h+014h],01h
	push	eax
	lea	eax,[ebp-088h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],02h
; Line 170:	        NextToken(); 
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_1963:
; Line 171:	        rv = Utils::SearchForFile(includePath, rv); 
	lea	eax,[ebp-088h]
	push	eax
	mov	eax,ebx
	add	eax,byte 028h
	push	eax
	lea	eax,[ebp-0114h]
	push	eax
	call	@Utils@SearchForFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
	mov	dword [ebp-070h+014h],03h
	push	eax
	lea	eax,[ebp-088h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$basn$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
; Line 172:	        return rv; 
	lea	eax,[ebp-088h]
	push	eax
	push	esi
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],04h
	mov	ebx,dword [ebp+08h]
	mov	dword [ebp-070h+014h],05h
	lea	eax,[ebp-0114h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	dword [ebp-070h+014h],06h
	lea	eax,[ebp-012ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	eax,ebx
	jmp	near	L_1794
L_1796:
; Line 173:	    } 
; Line 174:	    else 
; Line 175:	    { 
; Line 176:	        std::string line = lexer.GetRestOfLine(); 
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	lea	eax,[ebp-0fch]
	push	eax
	call	@Lexer@GetRestOfLine$qv
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],09h
	push	eax
	lea	eax,[ebp-01ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],0ah
; Line 177:	        size_t s = line.find_first_not_of(" \t\v"); 
	push	byte 00h
	push	dword L_1791
	lea	eax,[ebp-01ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@find_first_not_of$xqpxcui]
	add	esp,byte 0ch
	mov	edi,eax
; Line 178:	        if (s == std::string::npos) 
	cmp	edi,byte 0ffffffffh
	jne	short	L_1805
; Line 179:	            throw std::runtime_error("Expected valid file name"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1792
	lea	eax,[ebp-014ch]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],0bh
	push	eax
	lea	eax,[ebp-070h]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-070h+014h],0ch
	lea	eax,[ebp-014ch]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_1805:
; Line 180:	        size_t e = line.find_first_of(" \t\v", s); 
	mov	eax,edi
	push	eax
	push	dword L_1791
	lea	eax,[ebp-01ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@find_first_of$xqpxcui]
	add	esp,byte 0ch
	mov	esi,eax
; Line 181:	        if (e == std::string::npos) 
	cmp	esi,byte 0ffffffffh
	jne	short	L_1810
; Line 182:	            e = line.size(); 
	lea	eax,[ebp-01ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@size$xqv]
	pop	ecx
	mov	esi,eax
L_1810:
; Line 183:	        std::string rv = line.substr(s, e - s); 
	mov	eax,esi
	sub	eax,edi
	push	eax
	push	edi
	lea	eax,[ebp-01ch]
	push	eax
	lea	eax,[ebp-0e4h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@substr$xquiui]
	add	esp,byte 010h
	mov	dword [ebp-070h+014h],0dh
	push	eax
	lea	eax,[ebp-034h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],0eh
; Line 184:	        line.erase(0, e); 
	push	esi
	push	byte 00h
	lea	eax,[ebp-01ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@erase$quiui]
	add	esp,byte 0ch
; Line 185:	        lexer.Reset(line); 
	mov	esi,ebx
	add	esi,byte 08h
; Line 48:	        tokenizer->Reset(line); 
	lea	eax,[ebp-01ch]
	push	eax
	mov	eax,dword [esi+08h]
	push	eax
	call	@Tokenizer@Reset$qrx#basic_string$c#char_traits$c~#allocator$c~~
	pop	ecx
	pop	ecx
; Line 49:	        NextToken(); 
	push	esi
	call	@Lexer@NextToken$qv
	pop	ecx
; Line 50:	    } 
L_1979:
; Line 186:	        rv = Utils::SearchForFile(includePath, rv); 
	lea	eax,[ebp-034h]
	push	eax
	mov	eax,ebx
	add	eax,byte 028h
	push	eax
	lea	eax,[ebp-0cch]
	push	eax
	call	@Utils@SearchForFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
	mov	dword [ebp-070h+014h],0fh
	push	eax
	lea	eax,[ebp-034h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$basn$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
; Line 187:	        return rv; 
	lea	eax,[ebp-034h]
	push	eax
	mov	eax,dword [ebp-04h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-070h+014h],010h
	mov	ebx,dword [ebp+08h]
	mov	dword [ebp-070h+014h],011h
	lea	eax,[ebp-0cch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	dword [ebp-070h+014h],012h
	lea	eax,[ebp-0e4h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	dword [ebp-070h+014h],013h
	lea	eax,[ebp-0fch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	dword [ebp-070h+014h],014h
	lea	eax,[ebp-01ch]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	eax,ebx
L_1801:
L_1794:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@GetFileName$qv virtual
@$xc@RCFile@GetFileName$qv:
	dd	00h
	dd	0ffffff90h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffff78h
	dd	02h
	dd	00h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0fffffed4h
	dd	01h
	dd	08h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0fffffeech
	dd	03h
	dd	07h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffffe4h
	dd	0ah
	dd	018h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffff04h
	dd	09h
	dd	017h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0fffffeb4h
	dd	0bh
	dd	0ch
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffffcch
	dd	0eh
	dd	00h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffff1ch
	dd	0dh
	dd	016h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffff34h
	dd	0fh
	dd	015h
	dd	00h
section code
[global	@RCFile@GetRes$qv]
@RCFile@GetRes$qv:
; Line 190:	Resource* RCFile::GetRes() 
; Line 191:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,0fffff874h
	push	ebx
	push	esi
	push	edi
L_1988:
	mov	eax,dword [ebp+08h]
	mov	dword [ebp-080h],eax
	push	dword @$xc@RCFile@GetRes$qv
	lea	eax,[ebp-0134h]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_2153:
; Line 192:	    kw type; 
; Line 193:	    int val = 0; 
	xor	eax,eax
	mov	dword [ebp-094h],eax
; Line 194:	    std::wstring name; 
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],01h
; Line 195:	    ResourceId id; 
	lea	ebx,[ebp-0c8h]
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],02h
	mov	dword [ebx+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_2170:
	mov	dword [ebp-0134h+014h],03h
; Line 196:	    bool done = false; 
; Line 197:	    Resource* rv = nullptr; 
	xor	esi,esi
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	al,byte [eax+05h]
L_2201:
L_2186:
	and	al,al
	jne	near	L_1992
L_1991:
; Line 199:	    { 
; Line 200:	        done = true; 
	mov	byte [ebp-090h],01h
; Line 201:	        if (!IsNumber() && GetToken()->IsKeyword()) 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@IsNumber$qv
	pop	ecx
	and	al,al
	jne	near	L_1997
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2233:
L_2218:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2265:
L_2250:
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	and	al,al
	je	near	L_1997
; Line 202:	        { 
; Line 203:	            type = GetToken()->GetKeyword(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2297:
L_2282:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2329:
L_2314:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	mov	dword [ebp-08ch],eax
; Line 204:	            name = GetToken()->GetString(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2361:
L_2346:
	push	eax
	lea	eax,[ebp-0714h]
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2393:
L_2378:
	mov	eax,dword [eax]
	call	dword [eax+024h]
	pop	ecx
	pop	ecx
	push	eax
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 205:	            if (type >= kw::ACCELERATORS) 
	cmp	dword [ebp-08ch],byte 01ch
	jl	near	L_2001
; Line 206:	            { 
; Line 207:	                if (type != kw::STRINGTABLE && type != kw::LANGUAGE) 
	cmp	dword [ebp-08ch],byte 060h
	je	near	L_2005
	cmp	dword [ebp-08ch],byte 046h
	je	near	L_2005
; Line 208:	                { 
; Line 209:	                    NextToken(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_2410:
; Line 210:	                    if (GetToken()->IsKeyword() && GetToken()->GetKeyword() >= kw::ACCELERATORS) 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2441:
L_2426:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2473:
L_2458:
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	and	al,al
	je	near	L_2009
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2505:
L_2490:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2537:
L_2522:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	cmp	eax,byte 01ch
	jl	short	L_2009
; Line 211:	                    { 
; Line 212:	                        id.SetName(name); 
	lea	eax,[ebp-0ach]
	push	eax
	lea	eax,[ebp-0c8h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
L_2554:
; Line 213:	                        type = GetToken()->GetKeyword(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2585:
L_2570:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2617:
L_2602:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	mov	dword [ebp-08ch],eax
; Line 214:	                        name = GetToken()->GetString(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2649:
L_2634:
	push	eax
	lea	eax,[ebp-076ch]
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2681:
L_2666:
	mov	eax,dword [eax]
	call	dword [eax+024h]
	pop	ecx
	pop	ecx
	push	eax
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	jmp	near	L_2014
L_2009:
; Line 215:	                    } 
; Line 216:	                    else if (GetToken()->IsIdentifier()) 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2713:
L_2698:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2745:
L_2730:
	mov	eax,dword [eax]
	call	dword [eax+014h]
	pop	ecx
	and	al,al
	je	near	L_2017
; Line 217:	                    { 
; Line 218:	                        id.SetName(name); 
	lea	eax,[ebp-0ach]
	push	eax
	lea	eax,[ebp-0c8h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
L_2762:
; Line 219:	                        type = (kw)-1; 
	mov	dword [ebp-08ch],0ffffffffh
; Line 220:	                        name = CvtString(GetToken()->GetId()); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2793:
L_2778:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2825:
L_2810:
	mov	eax,dword [eax]
	call	dword [eax+03ch]
	pop	ecx
	push	eax
	mov	eax,dword [ebp-080h]
	push	eax
	lea	eax,[ebp-0784h]
	push	eax
	call	@RCFile@CvtString$qrx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
	mov	dword [ebp-0134h+014h],04h
	push	eax
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],05h
	lea	eax,[ebp-0784h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
	jmp	short	L_2022
L_2017:
; Line 221:	                    } 
; Line 222:	                    else if (IsNumber()) 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@IsNumber$qv
	pop	ecx
	and	al,al
	je	short	L_2025
; Line 223:	                    { 
; Line 224:	                        type = (kw)-2; 
	mov	dword [ebp-08ch],0fffffffeh
; Line 225:	                        val = GetNumber(); 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@GetNumber$qv
	pop	ecx
	mov	dword [ebp-094h],eax
	jmp	short	L_2030
L_2025:
; Line 226:	                    } 
; Line 227:	                    else 
; Line 228:	                    { 
; Line 229:	                        throw std::runtime_error("Expected resource type"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1985
	lea	eax,[ebp-078ch]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],06h
	push	eax
	lea	eax,[ebp-0134h]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-0134h+014h],07h
	lea	eax,[ebp-078ch]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_2030:
L_2022:
L_2014:
; Line 230:	                    } 
; Line 231:	                    if (type != (kw)-2) 
	cmp	dword [ebp-08ch],byte 0fffffffeh
	je	short	L_2047
; Line 232:	                        NextToken(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_2842:
L_2041:
	jmp	short	L_2055
L_2005:
; Line 233:	                } 
; Line 234:	                else 
; Line 235:	                { 
; Line 236:	                    NextToken(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_2858:
L_2047:
; Line 237:	                } 
	jmp	near	L_2063
L_2001:
; Line 238:	            } 
; Line 239:	            else 
; Line 240:	            { 
; Line 241:	                throw std::runtime_error("Expected resource identifier"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1986
	lea	eax,[ebp-0734h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],08h
	push	eax
	lea	eax,[ebp-0134h]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-0134h+014h],09h
	lea	eax,[ebp-0734h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_2055:
; Line 242:	            } 
	jmp	near	L_2063
L_1997:
; Line 243:	        } 
; Line 244:	        else 
; Line 245:	        { 
; Line 246:	            id.ReadRC(*this); 
	push	byte 00h
	mov	eax,dword [ebp-080h]
	push	eax
	lea	eax,[ebp-0c8h]
	push	eax
	call	@ResourceId@ReadRC$qr6RCFile4bool
	add	esp,byte 0ch
; Line 247:	            if (GetToken()->IsKeyword()) 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2889:
L_2874:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2921:
L_2906:
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	and	al,al
	je	short	L_2067
; Line 248:	            { 
; Line 249:	                type = GetToken()->GetKeyword(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2953:
L_2938:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_2985:
L_2970:
	mov	eax,dword [eax]
	call	dword [eax+038h]
	pop	ecx
	mov	dword [ebp-08ch],eax
; Line 250:	                name = GetToken()->GetString(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_3017:
L_3002:
	push	eax
	lea	eax,[ebp-072ch]
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_3049:
L_3034:
	mov	eax,dword [eax]
	call	dword [eax+024h]
	pop	ecx
	pop	ecx
	push	eax
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	jmp	near	L_2072
L_2067:
; Line 251:	            } 
; Line 252:	            else if (GetToken()->IsIdentifier()) 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_3081:
L_3066:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_3113:
L_3098:
	mov	eax,dword [eax]
	call	dword [eax+014h]
	pop	ecx
	and	al,al
	je	short	L_2075
; Line 253:	            { 
; Line 254:	                type = (kw)-1; 
	mov	dword [ebp-08ch],0ffffffffh
; Line 255:	                name = CvtString(GetToken()->GetId()); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_3145:
L_3130:
	push	eax
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_3177:
L_3162:
	mov	eax,dword [eax]
	call	dword [eax+03ch]
	pop	ecx
	push	eax
	mov	eax,dword [ebp-080h]
	push	eax
	lea	eax,[ebp-074ch]
	push	eax
	call	@RCFile@CvtString$qrx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
	mov	dword [ebp-0134h+014h],0ah
	push	eax
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],0bh
	lea	eax,[ebp-074ch]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
	jmp	short	L_2080
L_2075:
; Line 256:	            } 
; Line 257:	            else if (IsNumber()) 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@IsNumber$qv
	pop	ecx
	and	al,al
	je	short	L_2083
; Line 258:	            { 
; Line 259:	                type = (kw)-2; 
	mov	dword [ebp-08ch],0fffffffeh
; Line 260:	                val = GetNumber(); 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@GetNumber$qv
	pop	ecx
	mov	dword [ebp-094h],eax
	jmp	short	L_2088
L_2083:
; Line 261:	            } 
; Line 262:	            else 
; Line 263:	            { 
; Line 264:	                throw std::runtime_error("Expected resource type"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1985
	lea	eax,[ebp-0754h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],0ch
	push	eax
	lea	eax,[ebp-0134h]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
	mov	dword [ebp-0134h+014h],0dh
	lea	eax,[ebp-0754h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_2088:
L_2080:
L_2072:
; Line 265:	            } 
; Line 266:	            if (type != (kw)-2) 
	cmp	dword [ebp-08ch],byte 0fffffffeh
	je	short	L_2099
; Line 267:	                NextToken(); 
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_3194:
L_2099:
L_2063:
; Line 268:	        } 
; Line 269:	        ResourceInfo info(language); 
	lea	eax,[ebp-0d8h]
	mov	ecx,dword [ebp-080h]
	mov	edx,dword [ecx+020h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],edx
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
; Line 42:	    ResourceInfo(int Language) : language(Language), memoryFlags(0), characteristics(0), version(0) {} 
L_3210:
	mov	dword [ebp-0134h+014h],0eh
; Line 270:	        info.SetFlags(ResourceInfo::Moveable | ResourceInfo::Discardable); 
	mov	eax,01010h
	mov	dword [ebp-0d8h],eax
L_3226:
; Line 271:	        rv = nullptr; 
	xor	esi,esi
; Line 272:	        switch (type) 
	mov	eax,dword [ebp-08ch]
	cmp	eax,byte 042h
	je	near	L_2127
	jg	short	L_5426
	cmp	eax,byte 02dh
	je	near	L_2122
	jg	short	L_5427
	cmp	eax,byte 01ch
	je	near	L_2120
	jg	short	L_5428
	cmp	eax,byte 0ffffffffh
	je	near	L_2110
	jg	near	L_2142
	cmp	eax,byte 0fffffffeh
	je	near	L_2119
	jmp	near	L_2142
L_5428:
	cmp	eax,byte 023h
	je	near	L_2121
	jmp	near	L_2142
L_5427:
	cmp	eax,byte 032h
	je	near	L_2125
	jg	short	L_5429
	cmp	eax,byte 030h
	je	near	L_2124
	jg	near	L_2142
	cmp	eax,byte 02fh
	je	near	L_2123
	jmp	near	L_2142
L_5429:
	cmp	eax,byte 03eh
	je	near	L_2126
	jmp	near	L_2142
L_5426:
	cmp	eax,byte 059h
	je	near	L_2130
	jg	short	L_5430
	cmp	eax,byte 04bh
	je	near	L_2129
	jg	short	L_5431
	cmp	eax,byte 04ah
	je	near	L_2128
	jg	near	L_2142
	cmp	eax,byte 046h
	je	near	L_2136
	jmp	near	L_2142
L_5431:
	cmp	eax,byte 04fh
	je	near	L_2132
	jmp	near	L_2142
L_5430:
	cmp	eax,byte 060h
	je	near	L_2133
	jg	short	L_5432
	cmp	eax,byte 05ah
	je	near	L_2139
	jmp	near	L_2142
L_5432:
	cmp	eax,byte 064h
	je	near	L_2131
	jmp	near	L_2142
; Line 273:	        { 
L_2110:
; Line 274:	            case (kw)-1: 
	xor	ebx,ebx
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@size$xqv]
	pop	ecx
	cmp	ebx,eax
	jnc	short	L_2113
L_2111:
; Line 276:	                    name[i] = toupper(name[i]); 
	mov	edi,ebx
	push	edi
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$barray$qui]
	pop	ecx
	pop	ecx
	movzx	eax,word [eax]
	push	eax
	call	dword [_toupper]
	pop	ecx
	mov	esi,eax
	push	edi
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$barray$qui]
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	eax,esi
	mov	word [ecx],ax
L_2114:
	inc	ebx
; Line 275:	                for (int i = 0; i < name.size(); i++) 
L_2112:
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@size$xqv]
	pop	ecx
	cmp	ebx,eax
	jc	short	L_2111
L_2113:
; Line 277:	                rv = new GenericResource(ResourceId(name), id, info); 
	push	byte 054h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-06ch],eax
	and	eax,eax
	je	near	L_3229
	mov	ebx,dword [ebp-06ch]
	lea	eax,[ebp-0ach]
	push	eax
	lea	eax,[ebp-06dch]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],0fh
	mov	dword [ebp-06dch+018h],0ffffffffh
; Line 37:	    ResourceId(const std::wstring& Name) : name(Name), id(-1) {} 
L_3258:
	mov	dword [ebp-0134h+014h],010h
	lea	ecx,[ebp-0d8h]
	mov	esi,ebx
	mov	edx,0ch+@Resource@_$vt
	mov	eax,esi
	mov	dword [eax],edx
	mov	eax,esi
	add	eax,byte 04h
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [eax+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [eax+0ch],ecx
L_3289:
	mov	dword [ebp-0134h+014h],011h
	mov	edi,esi
	add	edi,byte 014h
	mov	eax,edi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],012h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-06dch+018h]
	mov	dword [edi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-06dch]
	push	eax
	mov	eax,edi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3305:
	mov	dword [ebp-0134h+014h],013h
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],014h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3321:
	mov	dword [ebp-0134h+014h],015h
; Line 72:	    Resource(const ResourceId& ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_3274:
	mov	dword [ebp-0134h+014h],016h
	mov	ecx,0ch+@GenericResource@_$vt
	mov	eax,ebx
	mov	dword [eax],ecx
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [ebp-0534h],eax
	lea	eax,[ebp-0534h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	push	eax
	push	ebx
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],017h
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_3353:
	mov	dword [ebp-0134h+014h],018h
; Line 2493:	        } 
L_3338:
	mov	dword [ebp-0134h+014h],019h
; Line 42:	    } 
L_3243:
L_3229:
	mov	esi,dword [ebp-06ch]
; Line 278:	                break; 
	mov	dword [ebp-0134h+014h],01ah
	lea	eax,[ebp-06dch]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_3369:
	jmp	near	L_2107
L_3383:
L_2119:
; Line 279:	            case (kw)-2: 
; Line 280:	                rv = new GenericResource(ResourceId(val), id, info); 
	push	byte 054h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-068h],eax
	and	eax,eax
	je	near	L_3386
	mov	ebx,dword [ebp-068h]
	mov	esi,dword [ebp-094h]
	lea	eax,[ebp-06c0h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],01ch
	mov	dword [ebp-06c0h+018h],esi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_3415:
	mov	dword [ebp-0134h+014h],01dh
	lea	ecx,[ebp-0d8h]
	mov	esi,ebx
	mov	edx,0ch+@Resource@_$vt
	mov	eax,esi
	mov	dword [eax],edx
	mov	eax,esi
	add	eax,byte 04h
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [eax+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [eax+0ch],ecx
L_3446:
	mov	dword [ebp-0134h+014h],01eh
	mov	edi,esi
	add	edi,byte 014h
	mov	eax,edi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],01fh
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-06c0h+018h]
	mov	dword [edi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-06c0h]
	push	eax
	mov	eax,edi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3462:
	mov	dword [ebp-0134h+014h],020h
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],021h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3478:
	mov	dword [ebp-0134h+014h],022h
; Line 72:	    Resource(const ResourceId& ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_3431:
	mov	dword [ebp-0134h+014h],023h
	mov	ecx,0ch+@GenericResource@_$vt
	mov	eax,ebx
	mov	dword [eax],ecx
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [ebp-04dch],eax
	lea	eax,[ebp-04dch]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	push	eax
	push	ebx
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],024h
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_3510:
	mov	dword [ebp-0134h+014h],025h
; Line 2493:	        } 
L_3495:
	mov	dword [ebp-0134h+014h],026h
; Line 42:	    } 
L_3400:
L_3386:
	mov	esi,dword [ebp-068h]
; Line 281:	                break; 
	mov	dword [ebp-0134h+014h],027h
	lea	eax,[ebp-06c0h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_3526:
	jmp	near	L_2107
L_3540:
L_2120:
; Line 282:	            case kw::ACCELERATORS: 
; Line 283:	                rv = new Accelerators(id, info); 
	push	byte 078h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-04ch],eax
	and	eax,eax
	je	near	L_3543
	mov	eax,dword [ebp-04ch]
	mov	dword [ebp-024h],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-024h]
	mov	eax,09h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_3587:
	mov	dword [ebp-0134h+014h],029h
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],02ah
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_3603:
	mov	dword [ebp-0134h+014h],02bh
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],02ch
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3619:
	mov	dword [ebp-0134h+014h],02dh
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_3572:
	mov	dword [ebp-0134h+014h],02eh
	mov	ecx,0ch+@Accelerators@_$vt
	mov	eax,dword [ebp-024h]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-024h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],02fh
L_3636:
	mov	dword [ebp-0134h+014h],030h
; Line 54:	    Accelerators(const ResourceId& Id, const ResourceInfo& info) : Resource(eAccelerators, Id, info) {} 
L_3557:
L_3543:
	mov	esi,dword [ebp-04ch]
; Line 284:	                break; 
	jmp	near	L_2107
L_2121:
; Line 285:	            case kw::TBITMAP: 
; Line 286:	                rv = new Bitmap(id, info); 
	push	byte 054h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-060h],eax
	and	eax,eax
	je	near	L_3640
	mov	eax,dword [ebp-060h]
	mov	dword [ebp-02ch],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-02ch]
	mov	eax,02h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_3684:
	mov	dword [ebp-0134h+014h],031h
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],032h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_3700:
	mov	dword [ebp-0134h+014h],033h
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],034h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3716:
	mov	dword [ebp-0134h+014h],035h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_3669:
	mov	dword [ebp-0134h+014h],036h
	mov	ecx,0ch+@Bitmap@_$vt
	mov	eax,dword [ebp-02ch]
	mov	dword [eax],ecx
	mov	ebx,dword [ebp-02ch]
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [ebp-0458h],eax
	lea	eax,[ebp-0458h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	push	eax
	push	ebx
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],037h
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_3748:
	mov	dword [ebp-0134h+014h],038h
; Line 2493:	        } 
L_3733:
	mov	dword [ebp-0134h+014h],039h
; Line 38:	    Bitmap(const ResourceId& Id, const ResourceInfo& info) : Resource(eBitmap, Id, info), data(nullptr) {} 
L_3654:
L_3640:
	mov	esi,dword [ebp-060h]
; Line 287:	                break; 
	jmp	near	L_2107
L_2122:
; Line 288:	            case kw::CURSOR: 
; Line 289:	                rv = new GroupCursor(id, info); 
	push	byte 078h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-040h],eax
	and	eax,eax
	je	near	L_3753
	mov	eax,dword [ebp-040h]
	mov	dword [ebp-030h],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-030h]
	mov	eax,0ch
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_3797:
	mov	dword [ebp-0134h+014h],03ah
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],03bh
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_3813:
	mov	dword [ebp-0134h+014h],03ch
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],03dh
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3829:
	mov	dword [ebp-0134h+014h],03eh
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_3782:
	mov	dword [ebp-0134h+014h],03fh
	mov	ecx,0ch+@GroupCursor@_$vt
	mov	eax,dword [ebp-030h]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-030h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],040h
L_3846:
	mov	dword [ebp-0134h+014h],041h
; Line 56:	    GroupCursor(const ResourceId& Id, const ResourceInfo& info) : Resource(eGroupCursor, Id, info) {} 
L_3767:
L_3753:
	mov	esi,dword [ebp-040h]
; Line 290:	                break; 
	jmp	near	L_2107
L_2123:
; Line 291:	            case kw::DIALOG: 
; Line 292:	                rv = new Dialog(id, info, false); 
	push	dword 0110h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-074h],eax
	and	eax,eax
	je	near	L_3850
	mov	ebx,dword [ebp-074h]
	lea	ecx,[ebp-0d8h]
	xor	al,al
	mov	byte [ebp-088h],al
	mov	eax,ebx
	mov	dword [ebp-04h],eax
	mov	eax,05h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,dword [ebp-04h]
	mov	dword [edx],esi
	mov	edx,dword [ebp-04h]
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_3894:
	mov	dword [ebp-0134h+014h],042h
	mov	esi,dword [ebp-04h]
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],043h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_3910:
	mov	dword [ebp-0134h+014h],044h
	mov	esi,dword [ebp-04h]
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],045h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_3926:
	mov	dword [ebp-0134h+014h],046h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_3879:
	mov	dword [ebp-0134h+014h],047h
	mov	ecx,0ch+@Dialog@_$vt
	mov	eax,ebx
	mov	dword [eax],ecx
	mov	dword [ebx+04ch],00h
	mov	dword [ebx+050h],00h
	mov	dword [ebx+054h],00h
	mov	eax,ebx
	add	eax,byte 058h
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_3943:
	mov	dword [ebp-0134h+014h],048h
	mov	eax,ebx
	add	eax,byte 060h
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_3959:
	mov	dword [ebp-0134h+014h],049h
	mov	esi,ebx
	add	esi,byte 068h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],04ah
	mov	dword [esi+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_3975:
	mov	dword [ebp-0134h+014h],04bh
	mov	esi,ebx
	add	esi,dword 084h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],04ch
	mov	dword [esi+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_3991:
	mov	dword [ebp-0134h+014h],04dh
	mov	eax,ebx
	add	eax,dword 0a0h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],04eh
	mov	eax,ebx
	add	eax,dword 0b8h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],04fh
	mov	eax,ebx
	add	eax,dword 0d0h
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],050h
L_4007:
	mov	dword [ebp-0134h+014h],051h
	mov	al,byte [ebp-088h]
	mov	byte [ebx+0fch],al
	mov	dword [ebx+0100h],00h
	mov	dword [ebx+0104h],00h
	mov	dword [ebx+0108h],01h
	mov	dword [ebx+010ch],00h
; Line 104:	    } 
L_3864:
L_3850:
	mov	esi,dword [ebp-074h]
; Line 293:	                break; 
	jmp	near	L_2107
L_2124:
; Line 294:	            case kw::DIALOGEX: 
; Line 295:	                rv = new Dialog(id, info, true); 
	push	dword 0110h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-070h],eax
	and	eax,eax
	je	near	L_4011
	mov	ebx,dword [ebp-070h]
	lea	ecx,[ebp-0d8h]
	mov	byte [ebp-084h],01h
	mov	eax,ebx
	mov	dword [ebp-0ch],eax
	mov	eax,05h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,dword [ebp-0ch]
	mov	dword [edx],esi
	mov	edx,dword [ebp-0ch]
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4055:
	mov	dword [ebp-0134h+014h],052h
	mov	esi,dword [ebp-0ch]
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],053h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4071:
	mov	dword [ebp-0134h+014h],054h
	mov	esi,dword [ebp-0ch]
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],055h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4087:
	mov	dword [ebp-0134h+014h],056h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4040:
	mov	dword [ebp-0134h+014h],057h
	mov	ecx,0ch+@Dialog@_$vt
	mov	eax,ebx
	mov	dword [eax],ecx
	mov	dword [ebx+04ch],00h
	mov	dword [ebx+050h],00h
	mov	dword [ebx+054h],00h
	mov	eax,ebx
	add	eax,byte 058h
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_4104:
	mov	dword [ebp-0134h+014h],058h
	mov	eax,ebx
	add	eax,byte 060h
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_4120:
	mov	dword [ebp-0134h+014h],059h
	mov	esi,ebx
	add	esi,byte 068h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],05ah
	mov	dword [esi+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_4136:
	mov	dword [ebp-0134h+014h],05bh
	mov	esi,ebx
	add	esi,dword 084h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],05ch
	mov	dword [esi+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_4152:
	mov	dword [ebp-0134h+014h],05dh
	mov	eax,ebx
	add	eax,dword 0a0h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],05eh
	mov	eax,ebx
	add	eax,dword 0b8h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],05fh
	mov	eax,ebx
	add	eax,dword 0d0h
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],060h
L_4168:
	mov	dword [ebp-0134h+014h],061h
	mov	al,byte [ebp-084h]
	mov	byte [ebx+0fch],al
	mov	dword [ebx+0100h],00h
	mov	dword [ebx+0104h],00h
	mov	dword [ebx+0108h],01h
	mov	dword [ebx+010ch],00h
; Line 104:	    } 
L_4025:
L_4011:
	mov	esi,dword [ebp-070h]
; Line 296:	                break; 
	jmp	near	L_2107
L_2125:
; Line 297:	            case kw::DLGINCLUDE: 
; Line 298:	                rv = new DlgInclude(id, info); 
	push	byte 054h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-05ch],eax
	and	eax,eax
	je	near	L_4172
	mov	eax,dword [ebp-05ch]
	mov	dword [ebp-028h],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-028h]
	mov	eax,011h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4216:
	mov	dword [ebp-0134h+014h],062h
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],063h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4232:
	mov	dword [ebp-0134h+014h],064h
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],065h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4248:
	mov	dword [ebp-0134h+014h],066h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4201:
	mov	dword [ebp-0134h+014h],067h
	mov	ecx,0ch+@DlgInclude@_$vt
	mov	eax,dword [ebp-028h]
	mov	dword [eax],ecx
	mov	ebx,dword [ebp-028h]
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [ebp-0344h],eax
	lea	eax,[ebp-0344h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	push	eax
	push	ebx
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],068h
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_4280:
	mov	dword [ebp-0134h+014h],069h
; Line 2493:	        } 
L_4265:
	mov	dword [ebp-0134h+014h],06ah
; Line 38:	    DlgInclude(const ResourceId& Id, const ResourceInfo& info) : Resource(eDlgInclude, Id, info), data(nullptr) {} 
L_4186:
L_4172:
	mov	esi,dword [ebp-05ch]
; Line 299:	                break; 
	jmp	near	L_2107
L_2126:
; Line 300:	            case kw::FONT: 
; Line 301:	                rv = new Font(id, info); 
	push	byte 054h
	call	@$bnew$qui
	pop	ecx
	mov	esi,eax
	and	eax,eax
	je	near	L_2107
	lea	eax,[ebp-0d8h]
	push	eax
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,esi
	push	eax
	call	@Font@$bctr$qrx10ResourceIdrx12ResourceInfo
	add	esp,byte 0ch
L_4285:
; Line 302:	                break; 
	jmp	near	L_2107
L_2127:
; Line 303:	            case kw::ICON: 
; Line 304:	                rv = new GroupIcon(id, info); 
	push	byte 078h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-044h],eax
	and	eax,eax
	je	near	L_4286
	mov	eax,dword [ebp-044h]
	mov	dword [ebp-034h],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-034h]
	mov	eax,0eh
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4330:
	mov	dword [ebp-0134h+014h],06bh
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],06ch
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4346:
	mov	dword [ebp-0134h+014h],06dh
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],06eh
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4362:
	mov	dword [ebp-0134h+014h],06fh
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4315:
	mov	dword [ebp-0134h+014h],070h
	mov	ecx,0ch+@GroupIcon@_$vt
	mov	eax,dword [ebp-034h]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-034h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],071h
L_4379:
	mov	dword [ebp-0134h+014h],072h
; Line 87:	    GroupIcon(const ResourceId& Id, const ResourceInfo& info) : Resource(eGroupIcon, Id, info) {} 
L_4300:
L_4286:
	mov	esi,dword [ebp-044h]
; Line 305:	                break; 
	jmp	near	L_2107
L_2128:
; Line 306:	            case kw::MENU: 
; Line 307:	                rv = new Menu(id, info, false); 
	push	dword 080h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-050h],eax
	and	eax,eax
	je	near	L_4383
	mov	eax,dword [ebp-050h]
	mov	dword [ebp-018h],eax
	lea	ecx,[ebp-0d8h]
	xor	al,al
	mov	byte [ebp-07ch],al
	mov	ebx,dword [ebp-018h]
	mov	eax,04h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4427:
	mov	dword [ebp-0134h+014h],073h
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],074h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4443:
	mov	dword [ebp-0134h+014h],075h
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],076h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4459:
	mov	dword [ebp-0134h+014h],077h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4412:
	mov	dword [ebp-0134h+014h],078h
	mov	ecx,0ch+@Menu@_$vt
	mov	eax,dword [ebp-018h]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-018h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],079h
L_4476:
	mov	dword [ebp-0134h+014h],07ah
	mov	eax,dword [ebp-018h]
	mov	dword [eax+078h],00h
	mov	al,byte [ebp-07ch]
	mov	ecx,dword [ebp-018h]
	mov	byte [ecx+07ch],al
; Line 91:	    Menu(const ResourceId& Id, const ResourceInfo& info, bool Ext) : Resource(eMenu, Id, info), helpIndex(0), extended(Ext) {} 
L_4397:
L_4383:
	mov	esi,dword [ebp-050h]
; Line 308:	                break; 
	jmp	near	L_2107
L_2129:
; Line 309:	            case kw::MENUEX: 
; Line 310:	                rv = new Menu(id, info, true); 
	push	dword 080h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-058h],eax
	and	eax,eax
	je	near	L_4480
	mov	eax,dword [ebp-058h]
	mov	dword [ebp-01ch],eax
	lea	ecx,[ebp-0d8h]
	mov	byte [ebp-078h],01h
	mov	ebx,dword [ebp-01ch]
	mov	eax,04h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4524:
	mov	dword [ebp-0134h+014h],07bh
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],07ch
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4540:
	mov	dword [ebp-0134h+014h],07dh
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],07eh
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4556:
	mov	dword [ebp-0134h+014h],07fh
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4509:
	mov	dword [ebp-0134h+014h],080h
	mov	ecx,0ch+@Menu@_$vt
	mov	eax,dword [ebp-01ch]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-01ch]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],081h
L_4573:
	mov	dword [ebp-0134h+014h],082h
	mov	eax,dword [ebp-01ch]
	mov	dword [eax+078h],00h
	mov	al,byte [ebp-078h]
	mov	ecx,dword [ebp-01ch]
	mov	byte [ecx+07ch],al
; Line 91:	    Menu(const ResourceId& Id, const ResourceInfo& info, bool Ext) : Resource(eMenu, Id, info), helpIndex(0), extended(Ext) {} 
L_4494:
L_4480:
	mov	esi,dword [ebp-058h]
; Line 311:	                break; 
	jmp	near	L_2107
L_2130:
; Line 312:	            case kw::RCDATA: 
; Line 313:	                rv = new RCData(id, info); 
	push	byte 078h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-054h],eax
	and	eax,eax
	je	near	L_4577
	mov	eax,dword [ebp-054h]
	mov	dword [ebp-03ch],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-03ch]
	mov	eax,0ah
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4621:
	mov	dword [ebp-0134h+014h],083h
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],084h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4637:
	mov	dword [ebp-0134h+014h],085h
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],086h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4653:
	mov	dword [ebp-0134h+014h],087h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4606:
	mov	dword [ebp-0134h+014h],088h
	mov	ecx,0ch+@RCData@_$vt
	mov	eax,dword [ebp-03ch]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-03ch]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],089h
L_4670:
	mov	dword [ebp-0134h+014h],08ah
; Line 39:	    RCData(const ResourceId& Id, const ResourceInfo& info) : Resource(eRCData, Id, info) {} 
L_4591:
L_4577:
	mov	esi,dword [ebp-054h]
; Line 314:	                break; 
	jmp	near	L_2107
L_2131:
; Line 315:	            case kw::VERSIONINFO: 
; Line 316:	                rv = new VersionInfo(id, info); 
	push	dword 0a8h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-048h],eax
	and	eax,eax
	je	near	L_4674
	mov	ebx,dword [ebp-048h]
	lea	ecx,[ebp-0d8h]
	mov	eax,ebx
	mov	dword [ebp-08h],eax
	mov	eax,010h
	mov	esi,0ch+@Resource@_$vt
	mov	edx,dword [ebp-08h]
	mov	dword [edx],esi
	mov	edx,dword [ebp-08h]
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4718:
	mov	dword [ebp-0134h+014h],08bh
	mov	esi,dword [ebp-08h]
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],08ch
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4734:
	mov	dword [ebp-0134h+014h],08dh
	mov	esi,dword [ebp-08h]
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],08eh
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4750:
	mov	dword [ebp-0134h+014h],08fh
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4703:
	mov	dword [ebp-0134h+014h],090h
	mov	ecx,0ch+@VersionInfo@_$vt
	mov	eax,ebx
	mov	dword [eax],ecx
	mov	byte [ebx+04ch],00h
	mov	dword [ebx+050h],00h
	mov	dword [ebx+054h],00h
	mov	dword [ebx+058h],00h
	mov	dword [ebx+05ch],00h
	mov	dword [ebx+060h],00h
	mov	dword [ebx+064h],00h
	mov	dword [ebx+068h],00h
	mov	dword [ebx+06ch],00h
	mov	dword [ebx+070h],00h
	mov	dword [ebx+074h],00h
	mov	dword [ebx+078h],00h
	mov	eax,ebx
	add	eax,byte 07ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebp-0134h+014h],091h
L_4767:
	mov	dword [ebp-0134h+014h],092h
; Line 123:	    } 
L_4688:
L_4674:
	mov	esi,dword [ebp-048h]
; Line 317:	                break; 
	jmp	near	L_2107
L_2132:
; Line 318:	            case kw::MESSAGETABLE: 
; Line 319:	                rv = new MessageTable(id, info); 
	push	byte 054h
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-064h],eax
	and	eax,eax
	je	near	L_4771
	mov	eax,dword [ebp-064h]
	mov	dword [ebp-038h],eax
	lea	ecx,[ebp-0d8h]
	mov	ebx,dword [ebp-038h]
	mov	eax,0bh
	mov	esi,0ch+@Resource@_$vt
	mov	edx,ebx
	mov	dword [edx],esi
	mov	edx,ebx
	add	edx,byte 04h
	mov	esi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],esi
	mov	ecx,dword [ebp-0d8h+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [ebp-0d8h+08h]
	mov	dword [edx+08h],ecx
	mov	ecx,dword [ebp-0d8h+0ch]
	mov	dword [edx+0ch],ecx
L_4815:
	mov	dword [ebp-0134h+014h],093h
	mov	esi,ebx
	add	esi,byte 014h
	mov	edi,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],094h
	mov	dword [esi+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_4831:
	mov	dword [ebp-0134h+014h],095h
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],096h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0c8h+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0c8h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_4847:
	mov	dword [ebp-0134h+014h],097h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_4800:
	mov	dword [ebp-0134h+014h],098h
	mov	ecx,0ch+@MessageTable@_$vt
	mov	eax,dword [ebp-038h]
	mov	dword [eax],ecx
	mov	ebx,dword [ebp-038h]
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [ebp-01e0h],eax
	lea	eax,[ebp-01e0h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	push	eax
	push	ebx
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],099h
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_4879:
	mov	dword [ebp-0134h+014h],09ah
; Line 2493:	        } 
L_4864:
	mov	dword [ebp-0134h+014h],09bh
; Line 38:	    MessageTable(const ResourceId& Id, const ResourceInfo& info) : Resource(eMessageTable, Id, info), data(nullptr) {} 
L_4785:
L_4771:
	mov	esi,dword [ebp-064h]
; Line 320:	                break; 
	jmp	near	L_2107
L_2133:
; Line 321:	            case kw::STRINGTABLE: 
; Line 322:	            { 
	lea	eax,[ebp-0f8h]
	mov	ebx,eax
	lea	eax,[ebp-0d8h]
	push	eax
	lea	eax,[ebp-06fch]
	push	eax
	call	@std@__1@#make_unique$11StringTabler12ResourceInfo~$qrn1
	pop	ecx
	pop	ecx
	mov	edi,eax
	mov	dword [ebp-0134h+014h],09ch
	add	esp,byte 0fffffffch
	mov	esi,esp
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_4942:
L_4927:
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_4912:
	push	eax
	push	esi
	call	@std@__1@#default_delete$11StringTable~@$bctr$qRx#default_delete$n0~
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],09dh
; Line 2620:	        pointer __t = __ptr_.first(); 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_4975:
	mov	esi,dword [eax]
; Line 2621:	        __ptr_.first() = pointer(); 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_4991:
	mov	dword [eax],00h
; Line 2622:	        return __t; 
; Line 2623:	    } 
L_4960:
	push	esi
	push	ebx
	call	@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0#default_delete$n0~
	add	esp,byte 0ch
	mov	dword [ebp-0134h+014h],09eh
L_4897:
	mov	dword [ebp-0134h+014h],09fh
; Line 324:	                temp->ReadRC(*this); 
	mov	eax,dword [ebp-080h]
	push	eax
L_5039:
L_5024:
	mov	eax,dword [ebp-0f8h]
L_5009:
	push	eax
L_5087:
L_5072:
	mov	eax,dword [ebp-0f8h]
L_5057:
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	pop	ecx
; Line 325:	                rv = nullptr; 
	xor	esi,esi
; Line 326:	                done = false; 
	xor	al,al
	mov	byte [ebp-090h],al
	mov	dword [ebp-0134h+014h],0a0h
	xor	ebx,ebx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	lea	eax,[ebp-06fch]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_5140:
	mov	eax,dword [eax]
	mov	dword [ebp-0194h],eax
; Line 2628:	        __ptr_.first() = __p; 
	lea	eax,[ebp-06fch]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_5156:
	mov	dword [eax],ebx
; Line 2629:	        if (__tmp) 
	cmp	dword [ebp-0194h],byte 00h
	je	short	L_5108
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	eax,dword [ebp-0194h]
	push	eax
	lea	eax,[ebp-06fch]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_5172:
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_5108:
; Line 2631:	    } 
L_5125:
	lea	eax,[ebp-06fch+04h]
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bdtr$qv
	pop	ecx
L_5200:
L_5187:
L_5105:
	mov	dword [ebp-0134h+014h],0a1h
	lea	eax,[ebp-0f8h]
	mov	dword [ebp-020h],eax
	mov	ebx,dword [ebp-020h]
	xor	eax,eax
	mov	dword [ebp-014h],eax
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_5253:
	mov	edi,dword [eax]
; Line 2628:	        __ptr_.first() = __p; 
	mov	eax,dword [ebp-014h]
	mov	dword [ebp-010h],eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
	mov	ecx,eax
L_5269:
	mov	eax,dword [ebp-010h]
	mov	dword [ecx],eax
; Line 2629:	        if (__tmp) 
	and	edi,edi
	je	short	L_5221
; Line 2630:	            __ptr_.second()(__tmp); 
	push	edi
	mov	eax,ebx
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_5285:
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_5221:
; Line 2631:	    } 
L_5238:
	mov	eax,dword [ebp-020h]
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bdtr$qv
	pop	ecx
L_5313:
L_5300:
L_5218:
; Line 327:	            } 
; Line 328:	            break; 
	jmp	near	L_2107
L_2136:
; Line 329:	            case kw::LANGUAGE: 
; Line 330:	            { 
; Line 331:	                language = GetNumber(); 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@GetNumber$qv
	pop	ecx
	mov	ecx,eax
	mov	eax,dword [ebp-080h]
	mov	dword [eax+020h],ecx
; Line 332:	                SkipComma(); 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@SkipComma$qv
	pop	ecx
; Line 333:	                language |= GetNumber() << 10; 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@GetNumber$qv
	pop	ecx
	mov	ecx,eax
	shl	ecx,0ah
	mov	eax,dword [ebp-080h]
	or	ecx,dword [eax+020h]
	mov	eax,dword [ebp-080h]
	mov	dword [eax+020h],ecx
; Line 334:	                NeedEol(); 
	mov	eax,dword [ebp-080h]
	push	eax
	call	@RCFile@NeedEol$qv
	pop	ecx
; Line 335:	                done = false; 
	xor	al,al
	mov	byte [ebp-090h],al
; Line 336:	                break; 
	jmp	near	L_2107
L_2139:
; Line 337:	            } 
; Line 338:	            case kw::RCINCLUDE: 
; Line 339:	            { 
; Line 340:	                std::string name = GetFileName(); 
	mov	eax,dword [ebp-080h]
	push	eax
	lea	eax,[ebp-06f4h]
	push	eax
	call	@RCFile@GetFileName$qv
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],0a2h
	push	eax
	lea	eax,[ebp-0f0h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],0a3h
; Line 341:	                pp.IncludeFile(name); 
	mov	eax,dword [ebp-080h]
	mov	eax,dword [eax+04h]
	add	eax,dword 084h
	lea	ecx,[ebp-0f0h]
	push	ecx
	lea	ecx,[ebp-0f0h]
	push	ecx
	push	eax
	call	@ppInclude@pushFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
L_5346:
L_5331:
	mov	dword [ebp-0134h+014h],0a4h
	lea	eax,[ebp-06f4h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
	mov	dword [ebp-0134h+014h],0a5h
	lea	eax,[ebp-0f0h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
; Line 342:	            } 
; Line 343:	            break; 
	jmp	short	L_2107
L_2142:
; Line 344:	            default: 
; Line 345:	                throw std::runtime_error("Invalid resource type"); 
	push	dword @$xt@13runtime_error
	mov	eax,dword [@std@runtime_error@$bctr$qrx13runtime_error]
	push	eax
	push	byte 01h
	push	dword L_1987
	lea	eax,[ebp-06a4h]
	push	eax
	call	dword [@std@runtime_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-0134h+014h],0a6h
	push	eax
	lea	eax,[ebp-0134h]
	push	eax
	call	dword [@_ThrowException$qpvpvipvpv]
	add	esp,byte 014h
; Line 346:	                break; 
	mov	dword [ebp-0134h+014h],0a7h
	lea	eax,[ebp-06a4h]
	push	eax
	call	dword [@std@runtime_error@$bdtr$qv]
	pop	ecx
L_2107:
; Line 347:	        } 
; Line 348:	        if (rv) 
	and	esi,esi
	je	short	L_2145
; Line 349:	            rv->ReadRC(*this); 
	mov	eax,dword [ebp-080h]
	push	eax
	mov	eax,esi
	push	eax
	mov	eax,dword [eax]
	call	dword [eax+08h]
	pop	ecx
	pop	ecx
L_2145:
	mov	dword [ebp-0134h+014h],0a9h
L_5361:
L_1993:
; Line 198:	    while (!done && !AtEof()) 
	cmp	byte [ebp-090h],byte 00h
	jne	short	L_5364
	mov	eax,dword [ebp-080h]
	add	eax,byte 08h
	mov	al,byte [eax+05h]
L_5393:
L_5378:
	and	al,al
	je	near	L_1991
L_5364:
L_1992:
; Line 350:	    } 
; Line 351:	    return rv; 
	mov	dword [ebp-0134h+014h],0aah
	lea	eax,[ebp-0c8h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_5408:
	mov	dword [ebp-0134h+014h],0abh
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
	mov	eax,esi
; Line 352:	} 
L_5422:
L_1989:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xt@10ResourceId virtual
@$xt@10ResourceId:
	dd	@ResourceId@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	052h
	db	065h
	db	073h
	db	06fh
	db	075h
	db	072h
	db	063h
	db	065h
	db	049h
	db	064h
	db	00h
	dd	00h
section code
	section vsc@$xt@12ResourceInfo virtual
@$xt@12ResourceInfo:
	dd	@ResourceInfo@$bdtr$qv+0
	dd	010h
	dd	0400h
	db	052h
	db	065h
	db	073h
	db	06fh
	db	075h
	db	072h
	db	063h
	db	065h
	db	049h
	db	06eh
	db	066h
	db	06fh
	db	00h
	dd	00h
section code
	section vsc@$xt@8Resource virtual
@$xt@8Resource:
	dd	@Resource@$bdtr$qv+0
	dd	04ch
	dd	0400h
	db	052h
	db	065h
	db	073h
	db	06fh
	db	075h
	db	072h
	db	063h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#pair$xip11StringTable~ virtual
@$xt@#pair$xip11StringTable~:
	dd	@std@__1@#pair$xip11StringTable~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#pair$ip11StringTable~ virtual
@$xt@#pair$ip11StringTable~:
	dd	@std@__1@#pair$ip11StringTable~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#binary_function$ii4bool~ virtual
@$xt@#binary_function$ii4bool~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	062h
	db	069h
	db	06eh
	db	061h
	db	072h
	db	079h
	db	05fh
	db	066h
	db	075h
	db	06eh
	db	063h
	db	074h
	db	069h
	db	06fh
	db	06eh
	db	00h
	dd	00h
section code
	section vsc@$xt@#less$i~ virtual
@$xt@#less$i~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	06ch
	db	065h
	db	073h
	db	073h
	db	00h
	dd	0800h
	dd	@$xt@#binary_function$ii4bool~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#integral_constant$4bool3_Tp$1&~ virtual
@$xt@#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	06eh
	db	074h
	db	065h
	db	067h
	db	072h
	db	061h
	db	06ch
	db	05fh
	db	063h
	db	06fh
	db	06eh
	db	073h
	db	074h
	db	061h
	db	06eh
	db	074h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$#pair$xip11StringTable~~ virtual
@$xt@#allocator$#pair$xip11StringTable~~:
	dd	@std@__1@#allocator$#pair$xip11StringTable~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__value_type$ip11StringTable~ virtual
@$xt@#__value_type$ip11StringTable~:
	dd	@std@__1@#__value_type$ip11StringTable~@$bdtr$qv+0
	dd	08h
	dd	00h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	076h
	db	061h
	db	06ch
	db	075h
	db	065h
	db	05fh
	db	074h
	db	079h
	db	070h
	db	065h
	db	00h
section code
	section vsc@$xt@#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~ virtual
@$xt@#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~:
	dd	@std@__1@#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06dh
	db	061h
	db	070h
	db	05fh
	db	076h
	db	061h
	db	06ch
	db	075h
	db	065h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	061h
	db	072h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$#__value_type$ip11StringTable~~ virtual
@$xt@#allocator$#__value_type$ip11StringTable~~:
	dd	@std@__1@#allocator$#__value_type$ip11StringTable~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#integral_constant$4bool3_Tp$0&~ virtual
@$xt@#integral_constant$4bool3_Tp$0&~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	06eh
	db	074h
	db	065h
	db	067h
	db	072h
	db	061h
	db	06ch
	db	05fh
	db	063h
	db	06fh
	db	06eh
	db	073h
	db	074h
	db	061h
	db	06eh
	db	074h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$16_Tp@rebind@other~ virtual
@$xt@#allocator_traits$16_Tp@rebind@other~:
	dd	@std@__1@#allocator_traits$6_Alloc~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#__value_type$ip11StringTable~~~ virtual
@$xt@#allocator_traits$#allocator$#__value_type$ip11StringTable~~~:
	dd	@std@__1@#allocator_traits$#allocator$#__value_type$ip11StringTable~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__tree_end_node$p#__tree_node_base$pv~~ virtual
@$xt@#__tree_end_node$p#__tree_node_base$pv~~:
	dd	@std@__1@#__tree_end_node$p#__tree_node_base$pv~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	05fh
	db	065h
	db	06eh
	db	064h
	db	05fh
	db	06eh
	db	06fh
	db	064h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__tree_node_base$pv~ virtual
@$xt@#__tree_node_base$pv~:
	dd	@std@__1@#__tree_node_base$pv~@$bdtr$qv+0
	dd	010h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	05fh
	db	06eh
	db	06fh
	db	064h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__tree_end_node$p#__tree_node_base$pv~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__tree_node$#__value_type$ip11StringTable~pv~ virtual
@$xt@#__tree_node$#__value_type$ip11StringTable~pv~:
	dd	@std@__1@#__tree_node$#__value_type$ip11StringTable~pv~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	05fh
	db	06eh
	db	06fh
	db	064h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__tree_node_base$pv~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~ virtual
@$xt@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~:
	dd	@std@__1@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~ virtual
@$xt@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~:
	dd	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~ virtual
@$xt@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~:
	dd	@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~~ virtual
@$xt@#__compressed_pair$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~~:
	dd	@std@__1@#__compressed_pair$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#pointer_traits$p#__tree_node$#__value_type$ip11StringTable~pv~~ virtual
@$xt@#pointer_traits$p#__tree_node$#__value_type$ip11StringTable~pv~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	070h
	db	06fh
	db	069h
	db	06eh
	db	074h
	db	065h
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@18input_iterator_tag virtual
@$xt@18input_iterator_tag:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	06eh
	db	070h
	db	075h
	db	074h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	061h
	db	067h
	db	00h
	dd	00h
section code
	section vsc@$xt@20forward_iterator_tag virtual
@$xt@20forward_iterator_tag:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	066h
	db	06fh
	db	072h
	db	077h
	db	061h
	db	072h
	db	064h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	061h
	db	067h
	db	00h
	dd	0800h
	dd	@$xt@18input_iterator_tag+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@26bidirectional_iterator_tag virtual
@$xt@26bidirectional_iterator_tag:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	062h
	db	069h
	db	064h
	db	069h
	db	072h
	db	065h
	db	063h
	db	074h
	db	069h
	db	06fh
	db	06eh
	db	061h
	db	06ch
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	061h
	db	067h
	db	00h
	dd	0800h
	dd	@$xt@20forward_iterator_tag+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~ virtual
@$xt@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~:
	dd	@std@__1@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~ virtual
@$xt@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~:
	dd	@std@__1@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	05fh
	db	063h
	db	06fh
	db	06eh
	db	073h
	db	074h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~ virtual
@$xt@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~:
	dd	@std@__1@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv+0
	dd	05h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	05fh
	db	06eh
	db	06fh
	db	064h
	db	065h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~ virtual
@$xt@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~:
	dd	@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~ virtual
@$xt@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~:
	dd	@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~ virtual
@$xt@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~:
	dd	@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@$bdtr$qv+0
	dd	014h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	074h
	db	072h
	db	065h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#pair$xip11StringTable~~~ virtual
@$xt@#allocator_traits$#allocator$#pair$xip11StringTable~~~:
	dd	@std@__1@#allocator_traits$#allocator$#pair$xip11StringTable~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~ virtual
@$xt@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~:
	dd	@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06dh
	db	061h
	db	070h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~ virtual
@$xt@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~:
	dd	@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06dh
	db	061h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06eh
	db	073h
	db	074h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26bidirectional_iterator_tag#pair$xip11StringTable~ip#pair$xipn1~r#pair$xipn1~~ virtual
@$xt@#iterator$26bidirectional_iterator_tag#pair$xip11StringTable~ip#pair$xipn1~r#pair$xipn1~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~ virtual
@$xt@#reverse_iterator$#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~:
	dd	@std@__1@#reverse_iterator$#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26bidirectional_iterator_tag#pair$xip11StringTable~ip#pair$xipn1~r#pair$xipn1~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26bidirectional_iterator_tag#pair$xip11StringTable~ipx#pair$xipn1~rx#pair$xipn1~~ virtual
@$xt@#iterator$26bidirectional_iterator_tag#pair$xip11StringTable~ipx#pair$xipn1~rx#pair$xipn1~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~ virtual
@$xt@#reverse_iterator$#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~:
	dd	@std@__1@#reverse_iterator$#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26bidirectional_iterator_tag#pair$xip11StringTable~ipx#pair$xipn1~rx#pair$xipn1~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~ virtual
@$xt@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~:
	dd	@std@__1@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv+0
	dd	06h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06dh
	db	061h
	db	070h
	db	05fh
	db	06eh
	db	06fh
	db	064h
	db	065h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~ virtual
@$xt@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~:
	dd	@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~ virtual
@$xt@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~:
	dd	@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#map$ip11StringTable#less$i~#allocator$#pair$xipn0~~~ virtual
@$xt@#map$ip11StringTable#less$i~#allocator$#pair$xipn0~~~:
	dd	@std@__1@#map$ip11StringTable#less$i~#allocator$#pair$xipn0~~~@$bdtr$qv+0
	dd	014h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	06dh
	db	061h
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@11StringTable virtual
@$xt@11StringTable:
	dd	@StringTable@$bdtr$qv+0
	dd	01e0h
	dd	0400h
	db	053h
	db	074h
	db	072h
	db	069h
	db	06eh
	db	067h
	db	054h
	db	061h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#default_delete$11StringTable~ virtual
@$xt@#default_delete$11StringTable~:
	dd	@std@__1@#default_delete$11StringTable~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	066h
	db	061h
	db	075h
	db	06ch
	db	074h
	db	05fh
	db	064h
	db	065h
	db	06ch
	db	065h
	db	074h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p11StringTable#default_delete$n0~~ virtual
@$xt@#__compressed_pair$p11StringTable#default_delete$n0~~:
	dd	@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$11StringTable#default_delete$n0~~ virtual
@$xt@#unique_ptr$11StringTable#default_delete$n0~~:
	dd	@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xc@RCFile@GetRes$qv virtual
@$xc@RCFile@GetRes$qv:
	dd	00h
	dd	0fffffecch
	dd	0400h
	dd	@$xt@#basic_string$C#char_traits$C~#allocator$C~~+0
	dd	0ffffff54h
	dd	01h
	dd	0adh
	dd	0400h
	dd	@$xt@10ResourceId+0
	dd	0ffffff38h
	dd	03h
	dd	0ach
	dd	0400h
	dd	@$xt@#basic_string$C#char_traits$C~#allocator$C~~+0
	dd	0fffff87ch
	dd	04h
	dd	05h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0fffff874h
	dd	06h
	dd	07h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0fffff8cch
	dd	08h
	dd	09h
	dd	0400h
	dd	@$xt@#basic_string$C#char_traits$C~#allocator$C~~+0
	dd	0fffff8b4h
	dd	0ah
	dd	0bh
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0fffff8ach
	dd	0ch
	dd	0dh
	dd	0400h
	dd	@$xt@12ResourceInfo+0
	dd	0ffffff28h
	dd	0eh
	dd	0a9h
	dd	0400h
	dd	@$xt@10ResourceId+0
	dd	0fffff924h
	dd	010h
	dd	01bh
	dd	0400h
	dd	@$xt@10ResourceId+0
	dd	0fffff940h
	dd	01dh
	dd	028h
	dd	0400h
	dd	@$xt@#unique_ptr$11StringTable#default_delete$n0~~+0
	dd	0ffffff08h
	dd	09fh
	dd	0a1h
	dd	0400h
	dd	@$xt@#unique_ptr$11StringTable#default_delete$n0~~+0
	dd	0fffff904h
	dd	09ch
	dd	0a0h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0ffffff10h
	dd	0a3h
	dd	0a5h
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0fffff90ch
	dd	0a2h
	dd	0a4h
	dd	0400h
	dd	@$xt@13runtime_error+0
	dd	0fffff95ch
	dd	0a6h
	dd	0a8h
	dd	00h
section code
[global	@RCFile@Read$qv]
@RCFile@Read$qv:
; Line 353:	bool RCFile::Read() 
; Line 354:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,0fffffef0h
	push	ebx
	push	esi
	push	edi
L_5435:
	push	dword @$xc@RCFile@Read$qv
	lea	eax,[ebp-040h]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_5457:
; Line 355:	    resFile.Reset(); 
	mov	eax,dword [ebp+08h]
	mov	eax,dword [eax+024h]
	push	eax
	call	@ResFile@Reset$qv
	pop	ecx
; Line 356:	    resFile.Add(new FileHeader());   
	push	byte 04ch
	call	@$bnew$qui
	pop	ecx
	mov	dword [ebp-0f8h],eax
	and	eax,eax
	je	near	L_5461
	mov	eax,dword [ebp-0f8h]
	mov	dword [ebp-0c8h],eax
	mov	eax,dword [ebp-0c8h]
	mov	dword [ebp-088h],eax
	mov	dword [ebp-084h],00h
	lea	eax,[ebp-0f4h]
	mov	dword [ebp-07ch],eax
	mov	dword [ebp-078h],00h
	mov	eax,dword [ebp-07ch]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-040h+014h],01h
	mov	ecx,dword [ebp-078h]
	mov	eax,dword [ebp-07ch]
	mov	dword [eax+018h],ecx
; Line 38:	    ResourceId(int Id) : id(Id) {} 
	mov	eax,dword [ebp-07ch]
	jmp	short	L_5507
L_5507:
	mov	dword [ebp-040h+014h],02h
	mov	dword [ebp-080h],eax
	lea	eax,[ebp-0d8h]
	mov	dword [ebp-070h],eax
	mov	dword [ebp-06ch],00h
	mov	eax,dword [ebp-070h]
	mov	dword [eax],00h
	mov	ecx,dword [ebp-06ch]
	mov	eax,dword [ebp-070h]
	mov	dword [eax+04h],ecx
	mov	eax,dword [ebp-070h]
	mov	dword [eax+08h],00h
	mov	eax,dword [ebp-070h]
	mov	dword [eax+0ch],00h
; Line 42:	    ResourceInfo(int Language) : language(Language), memoryFlags(0), characteristics(0), version(0) {} 
	mov	eax,dword [ebp-070h]
	jmp	short	L_5523
L_5523:
	mov	dword [ebp-040h+014h],03h
	mov	dword [ebp-074h],eax
	mov	ecx,0ch+@Resource@_$vt
	mov	eax,dword [ebp-088h]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-088h]
	add	eax,byte 04h
	mov	dword [ebp-068h],eax
	mov	eax,dword [ebp-074h]
	mov	dword [ebp-064h],eax
	mov	ecx,dword [eax]
	mov	eax,dword [ebp-068h]
	mov	dword [eax],ecx
	mov	eax,dword [ebp-064h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [ebp-068h]
	mov	dword [eax+04h],ecx
	mov	eax,dword [ebp-064h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [ebp-068h]
	mov	dword [eax+08h],ecx
	mov	eax,dword [ebp-064h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [ebp-068h]
	mov	dword [eax+0ch],ecx
	jmp	short	L_5539
L_5539:
	mov	dword [ebp-040h+014h],04h
	mov	eax,dword [ebp-088h]
	add	eax,byte 014h
	mov	dword [ebp-060h],eax
	mov	eax,dword [ebp-084h]
	mov	dword [ebp-05ch],eax
	mov	eax,dword [ebp-060h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-040h+014h],05h
	mov	ecx,dword [ebp-05ch]
	mov	eax,dword [ebp-060h]
	mov	dword [eax+018h],ecx
; Line 38:	    ResourceId(int Id) : id(Id) {} 
	jmp	short	L_5555
L_5555:
	mov	dword [ebp-040h+014h],06h
	mov	eax,dword [ebp-088h]
	add	eax,byte 030h
	mov	dword [ebp-058h],eax
	mov	eax,dword [ebp-080h]
	mov	dword [ebp-054h],eax
	mov	eax,dword [ebp-058h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-040h+014h],07h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-054h]
	mov	ecx,dword [eax+018h]
	mov	eax,dword [ebp-058h]
	mov	dword [eax+018h],ecx
; Line 43:	        name = Old.name; 
	mov	eax,dword [ebp-054h]
	push	eax
	mov	eax,dword [ebp-058h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
	jmp	short	L_5571
L_5571:
	mov	dword [ebp-040h+014h],08h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
	jmp	short	L_5492
L_5492:
	mov	dword [ebp-040h+014h],09h
	mov	ecx,0ch+@FileHeader@_$vt
	mov	eax,dword [ebp-0c8h]
	mov	dword [eax],ecx
; Line 36:	    FileHeader() : Resource(eFileHeader, ResourceId(0), ResourceInfo(0)) {} 
	mov	dword [ebp-040h+014h],0ah
	lea	eax,[ebp-0d8h]
	mov	dword [ebp-050h],eax
L_5586:
	mov	dword [ebp-040h+014h],0bh
	lea	eax,[ebp-0f4h]
	mov	dword [ebp-04ch],eax
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_5600:
	jmp	short	L_5477
L_5477:
L_5461:
	mov	eax,dword [ebp-0f8h]
	push	eax
	mov	eax,dword [ebp+08h]
	mov	eax,dword [eax+024h]
	push	eax
	call	@ResFile@Add$qp8Resource
	pop	ecx
	pop	ecx
L_5450:
	mov	dword [ebp-040h+014h],0ch
; Line 358:	    Resource* res; 
; Line 359:	    try 
; Line 360:	    { 
	mov	eax,dword [ebp+08h]
	add	eax,byte 08h
	mov	dword [ebp-048h],eax
	mov	eax,dword [ebp-048h]
	mov	al,byte [eax+05h]
	jmp	short	L_5617
L_5617:
	and	al,al
	jne	short	L_5442
	mov	eax,dword [ebp+08h]
	push	eax
	call	@RCFile@GetRes$qv
	pop	ecx
	mov	dword [ebp-04h],eax
	and	eax,eax
	je	short	L_5442
L_5441:
; Line 362:	            resFile.Add(res); 
	mov	eax,dword [ebp-04h]
	push	eax
	mov	eax,dword [ebp+08h]
	mov	eax,dword [eax+024h]
	push	eax
	call	@ResFile@Add$qp8Resource
	pop	ecx
	pop	ecx
L_5443:
; Line 361:	        while (!lexer.AtEof() && (res = GetRes())) 
	mov	eax,dword [ebp+08h]
	add	eax,byte 08h
	mov	dword [ebp-044h],eax
	mov	eax,dword [ebp-044h]
	mov	al,byte [eax+05h]
	jmp	short	L_5634
L_5634:
	and	al,al
	jne	short	L_5620
	mov	eax,dword [ebp+08h]
	push	eax
	call	@RCFile@GetRes$qv
	pop	ecx
	mov	dword [ebp-04h],eax
	and	eax,eax
	jne	short	L_5441
L_5620:
L_5442:
	mov	dword [ebp-040h+014h],0dh
L_5451:
	jmp	short	L_5438
L_5456:
; Line 364:	    catch (std::runtime_error& e) 
; Line 365:	    { 
; Line 366:		asm int3; 
	int3
; Line 367:	        Errors::Error(e.what()); 
	mov	eax,dword [ebp-040h+020h]
	push	eax
	call	dword [@std@runtime_error@what$xqv]
	pop	ecx
	push	eax
	lea	eax,[ebp-0110h]
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	dword [ebp-040h+014h],0eh
	push	eax
	call	@Errors@Error$qrx#basic_string$c#char_traits$c~#allocator$c~~
	pop	ecx
; Line 368:	        return false; 
	lea	eax,[ebp-040h]
	push	eax
	call	dword [@_CatchCleanup$qpv]
	pop	ecx
	xor	al,al
	jmp	short	L_5436
L_5438:
; Line 369:	    } 
; Line 370:	    return true; 
	mov	al,01h
	jmp	short	L_5436
; Line 371:	} 
L_5436:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
	section vsc@$xc@RCFile@Read$qv virtual
@$xc@RCFile@Read$qv:
	dd	00h
	dd	0ffffffc0h
	dd	010000h
	dd	@$xt@13runtime_error+0
	dd	L_5456
	dd	0ch
	dd	0dh
	dd	0400h
	dd	@$xt@#basic_string$c#char_traits$c~#allocator$c~~+0
	dd	0fffffef0h
	dd	0eh
	dd	00h
	dd	00h
section code
	section vsc@std@__1@strchr$qpci virtual
@std@__1@strchr$qpci:
; Line 98:	inline        char* strchr(      char* __s, int __c) {return ::strchr(__s, __c);} 
L_5640:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@strchr$qpci
	pop	ecx
	pop	ecx
L_5641:
	ret
section code
	section vsc@std@__1@strpbrk$qpcpxc virtual
@std@__1@strpbrk$qpcpxc:
; Line 99:	inline        char* strpbrk(      char* __s1, const char* __s2) {return ::strpbrk(__s1, __s2);} 
L_5648:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@strpbrk$qpcpxc
	pop	ecx
	pop	ecx
L_5649:
	ret
section code
	section vsc@std@__1@strrchr$qpci virtual
@std@__1@strrchr$qpci:
; Line 100:	inline        char* strrchr(      char* __s, int __c) {return ::strrchr(__s, __c);} 
L_5656:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@strrchr$qpci
	pop	ecx
	pop	ecx
L_5657:
	ret
section code
	section vsc@std@__1@memchr$qpviui virtual
@std@__1@memchr$qpviui:
; Line 101:	inline        void* memchr(      void* __s, int __c, size_t __n) {return ::memchr(__s, __c, __n);} 
L_5664:
	mov	edx,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	edx
	push	ecx
	push	eax
	call	@std@__1@memchr$qpviui
	add	esp,byte 0ch
L_5665:
	ret
section code
	section vsc@std@__1@strstr$qpcpxc virtual
@std@__1@strstr$qpcpxc:
; Line 102:	inline        char* strstr(      char* __s1, const char* __s2) {return ::strstr(__s1, __s2);} 
L_5672:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@strstr$qpcpxc
	pop	ecx
	pop	ecx
L_5673:
	ret
section code
	section vsc@__libcpp_getc$qp8__file__ virtual
@__libcpp_getc$qp8__file__:
; Line 112:	inline  int __libcpp_getc(FILE* __stream) {return fgetc(__stream);} 
L_5680:
	mov	eax,dword [esp+04h]
	push	eax
	call	dword [_fgetc]
	pop	ecx
L_5681:
	ret
section code
	section vsc@_getc virtual
_getc:
; Line 114:	inline  int getc(FILE* __stream) {return __libcpp_getc(__stream);} 
	push	ecx
L_5688:
	mov	eax,dword [esp+04h+04h]
	push	eax
	call	dword [_fgetc]
	pop	ecx
L_5706:
L_5689:
	pop	ecx
	ret
section code
	section vsc@__libcpp_putc$qip8__file__ virtual
@__libcpp_putc$qip8__file__:
; Line 118:	inline  int __libcpp_putc(int __c, FILE* __stream) {return fputc((__c),  __stream);} 
L_5712:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	dword [_fputc]
	pop	ecx
	pop	ecx
L_5713:
	ret
section code
	section vsc@std@__1@__libcpp_iswalnum$qui virtual
@std@__1@__libcpp_iswalnum$qui:
; Line 68:	inline  int __libcpp_iswalnum(wint_t __wc) {return iswctype((__wc), (4 | (0x100 | 1 | 2)));} 
L_5720:
	mov	eax,dword [esp+04h]
	push	dword 0107h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5721:
	ret
section code
	section vsc@std@__1@__libcpp_iswalpha$qui virtual
@std@__1@__libcpp_iswalpha$qui:
; Line 76:	inline  int __libcpp_iswalpha(wint_t __wc) {return iswctype((__wc), (0x100 | 1 | 2));} 
L_5728:
	mov	eax,dword [esp+04h]
	push	dword 0103h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5729:
	ret
section code
	section vsc@std@__1@__libcpp_iswblank$qui virtual
@std@__1@__libcpp_iswblank$qui:
; Line 84:	inline  int __libcpp_iswblank(wint_t __wc) {return iswctype((__wc), 64);} 
L_5736:
	mov	eax,dword [esp+04h]
	push	byte 040h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5737:
	ret
section code
	section vsc@std@__1@iswblank$qui virtual
@std@__1@iswblank$qui:
; Line 86:	inline  int iswblank(wint_t __wc) {return __libcpp_iswblank(__wc);} 
	push	ecx
L_5744:
	mov	eax,dword [esp+04h+04h]
	push	byte 040h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5762:
L_5745:
	pop	ecx
	ret
section code
	section vsc@std@__1@__libcpp_iswcntrl$qui virtual
@std@__1@__libcpp_iswcntrl$qui:
; Line 92:	inline  int __libcpp_iswcntrl(wint_t __wc) {return iswctype((__wc), 32);} 
L_5768:
	mov	eax,dword [esp+04h]
	push	byte 020h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5769:
	ret
section code
	section vsc@std@__1@iswcntrl$qui virtual
@std@__1@iswcntrl$qui:
; Line 94:	inline  int iswcntrl(wint_t __wc) {return __libcpp_iswcntrl(__wc);} 
	push	ecx
L_5776:
	mov	eax,dword [esp+04h+04h]
	push	byte 020h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5794:
L_5777:
	pop	ecx
	ret
section code
	section vsc@std@__1@__libcpp_iswdigit$qui virtual
@std@__1@__libcpp_iswdigit$qui:
; Line 100:	inline  int __libcpp_iswdigit(wint_t __wc) {return iswctype((__wc), 4);} 
L_5800:
	mov	eax,dword [esp+04h]
	push	byte 04h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5801:
	ret
section code
	section vsc@std@__1@__libcpp_iswgraph$qui virtual
@std@__1@__libcpp_iswgraph$qui:
; Line 108:	inline  int __libcpp_iswgraph(wint_t __wc) {return iswctype((__wc), ((4 | (0x100 | 1 | 2)) | 128 | 16));} 
L_5808:
	mov	eax,dword [esp+04h]
	push	dword 0197h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5809:
	ret
section code
	section vsc@std@__1@iswgraph$qui virtual
@std@__1@iswgraph$qui:
; Line 110:	inline  int iswgraph(wint_t __wc) {return __libcpp_iswgraph(__wc);} 
	push	ecx
L_5816:
	mov	eax,dword [esp+04h+04h]
	push	dword 0197h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5834:
L_5817:
	pop	ecx
	ret
section code
	section vsc@std@__1@__libcpp_iswlower$qui virtual
@std@__1@__libcpp_iswlower$qui:
; Line 116:	inline  int __libcpp_iswlower(wint_t __wc) {return iswctype((__wc), 2);} 
L_5840:
	mov	eax,dword [esp+04h]
	push	byte 02h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5841:
	ret
section code
	section vsc@std@__1@__libcpp_iswprint$qui virtual
@std@__1@__libcpp_iswprint$qui:
; Line 124:	inline  int __libcpp_iswprint(wint_t __wc) {return iswctype((__wc), (((4 | (0x100 | 1 | 2)) | 128 | 16) | 64));} 
L_5848:
	mov	eax,dword [esp+04h]
	push	dword 01d7h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5849:
	ret
section code
	section vsc@std@__1@__libcpp_iswpunct$qui virtual
@std@__1@__libcpp_iswpunct$qui:
; Line 132:	inline  int __libcpp_iswpunct(wint_t __wc) {return iswctype((__wc), 16);} 
L_5856:
	mov	eax,dword [esp+04h]
	push	byte 010h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5857:
	ret
section code
	section vsc@std@__1@iswpunct$qui virtual
@std@__1@iswpunct$qui:
; Line 134:	inline  int iswpunct(wint_t __wc) {return __libcpp_iswpunct(__wc);} 
	push	ecx
L_5864:
	mov	eax,dword [esp+04h+04h]
	push	byte 010h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5882:
L_5865:
	pop	ecx
	ret
section code
	section vsc@std@__1@__libcpp_iswspace$qui virtual
@std@__1@__libcpp_iswspace$qui:
; Line 140:	inline  int __libcpp_iswspace(wint_t __wc) {return iswctype((__wc), 8);} 
L_5888:
	mov	eax,dword [esp+04h]
	push	byte 08h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5889:
	ret
section code
	section vsc@std@__1@iswspace$qui virtual
@std@__1@iswspace$qui:
; Line 142:	inline  int iswspace(wint_t __wc) {return __libcpp_iswspace(__wc);} 
	push	ecx
L_5896:
	mov	eax,dword [esp+04h+04h]
	push	byte 08h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5914:
L_5897:
	pop	ecx
	ret
section code
	section vsc@std@__1@__libcpp_iswupper$qui virtual
@std@__1@__libcpp_iswupper$qui:
; Line 148:	inline  int __libcpp_iswupper(wint_t __wc) {return iswctype((__wc), 1);} 
L_5920:
	mov	eax,dword [esp+04h]
	push	byte 01h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5921:
	ret
section code
	section vsc@std@__1@__libcpp_iswxdigit$qui virtual
@std@__1@__libcpp_iswxdigit$qui:
; Line 156:	inline  int __libcpp_iswxdigit(wint_t __wc) {return iswctype((__wc), 128);} 
L_5928:
	mov	eax,dword [esp+04h]
	push	dword 080h
	push	eax
	call	_iswctype
	pop	ecx
	pop	ecx
L_5929:
	ret
section code
	section vsc@std@__1@__libcpp_towlower$qui virtual
@std@__1@__libcpp_towlower$qui:
; Line 180:	inline  wint_t __libcpp_towlower(wint_t __wc) {return towctrans(__wc, __ctype_u_tolower);} 
L_5936:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [___ctype_u_tolower]
	push	ecx
	push	eax
	call	_towctrans
	pop	ecx
	pop	ecx
L_5937:
	ret
section code
	section vsc@std@__1@__libcpp_towupper$qui virtual
@std@__1@__libcpp_towupper$qui:
; Line 188:	inline  wint_t __libcpp_towupper(wint_t __wc) {return towctrans(__wc, __ctype_u_toupper);} 
L_5944:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [___ctype_u_toupper]
	push	ecx
	push	eax
	call	_towctrans
	pop	ecx
	pop	ecx
L_5945:
	ret
section code
	section vsc@std@__1@wcschr$qpxCC virtual
@std@__1@wcschr$qpxCC:
; Line 180:	inline  const wchar_t* wcschr(const wchar_t* __s, wchar_t __c) {return ::wcschr(__s, __c);} 
L_5952:
	mov	cx,word [esp+08h]
	mov	eax,dword [esp+04h]
	movzx	ecx,cx
	push	ecx
	push	eax
	call	@std@__1@wcschr$qpxCC
	pop	ecx
	pop	ecx
L_5953:
	ret
section code
	section vsc@std@__1@wcschr$qpCC virtual
@std@__1@wcschr$qpCC:
; Line 181:	inline        wchar_t* wcschr(      wchar_t* __s, wchar_t __c) {return ::wcschr(__s, __c);} 
L_5960:
	mov	cx,word [esp+08h]
	mov	eax,dword [esp+04h]
	movzx	ecx,cx
	push	ecx
	push	eax
	call	@std@__1@wcschr$qpCC
	pop	ecx
	pop	ecx
L_5961:
	ret
section code
	section vsc@std@__1@wcspbrk$qpxCpxC virtual
@std@__1@wcspbrk$qpxCpxC:
; Line 183:	inline  const wchar_t* wcspbrk(const wchar_t* __s1, const wchar_t* __s2) {return ::wcspbrk(__s1, __s2);} 
L_5968:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@wcspbrk$qpxCpxC
	pop	ecx
	pop	ecx
L_5969:
	ret
section code
	section vsc@std@__1@wcspbrk$qpCpxC virtual
@std@__1@wcspbrk$qpCpxC:
; Line 184:	inline        wchar_t* wcspbrk(      wchar_t* __s1, const wchar_t* __s2) {return ::wcspbrk(__s1, __s2);} 
L_5976:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@wcspbrk$qpCpxC
	pop	ecx
	pop	ecx
L_5977:
	ret
section code
	section vsc@std@__1@wcsrchr$qpxCC virtual
@std@__1@wcsrchr$qpxCC:
; Line 186:	inline  const wchar_t* wcsrchr(const wchar_t* __s, wchar_t __c) {return ::wcsrchr(__s, __c);} 
L_5984:
	mov	cx,word [esp+08h]
	mov	eax,dword [esp+04h]
	movzx	ecx,cx
	push	ecx
	push	eax
	call	@std@__1@wcsrchr$qpxCC
	pop	ecx
	pop	ecx
L_5985:
	ret
section code
	section vsc@std@__1@wcsrchr$qpCC virtual
@std@__1@wcsrchr$qpCC:
; Line 187:	inline        wchar_t* wcsrchr(      wchar_t* __s, wchar_t __c) {return ::wcsrchr(__s, __c);} 
L_5992:
	mov	cx,word [esp+08h]
	mov	eax,dword [esp+04h]
	movzx	ecx,cx
	push	ecx
	push	eax
	call	@std@__1@wcsrchr$qpCC
	pop	ecx
	pop	ecx
L_5993:
	ret
section code
	section vsc@std@__1@wcsstr$qpxCpxC virtual
@std@__1@wcsstr$qpxCpxC:
; Line 189:	inline  const wchar_t* wcsstr(const wchar_t* __s1, const wchar_t* __s2) {return ::wcsstr(__s1, __s2);} 
L_6000:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@wcsstr$qpxCpxC
	pop	ecx
	pop	ecx
L_6001:
	ret
section code
	section vsc@std@__1@wcsstr$qpCpxC virtual
@std@__1@wcsstr$qpCpxC:
; Line 190:	inline        wchar_t* wcsstr(      wchar_t* __s1, const wchar_t* __s2) {return ::wcsstr(__s1, __s2);} 
L_6008:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@std@__1@wcsstr$qpCpxC
	pop	ecx
	pop	ecx
L_6009:
	ret
section code
	section vsc@std@__1@wmemchr$qpxCCui virtual
@std@__1@wmemchr$qpxCCui:
; Line 192:	inline  const wchar_t* wmemchr(const wchar_t* __s, wchar_t __c, size_t __n) {return ::wmemchr(__s, __c, __n);} 
L_6016:
	mov	edx,dword [esp+0ch]
	mov	cx,word [esp+08h]
	mov	eax,dword [esp+04h]
	push	edx
	movzx	ecx,cx
	push	ecx
	push	eax
	call	@std@__1@wmemchr$qpxCCui
	add	esp,byte 0ch
L_6017:
	ret
section code
	section vsc@std@__1@wmemchr$qpCCui virtual
@std@__1@wmemchr$qpCCui:
; Line 193:	inline        wchar_t* wmemchr(      wchar_t* __s, wchar_t __c, size_t __n) {return ::wmemchr(__s, __c, __n);} 
L_6024:
	mov	edx,dword [esp+0ch]
	mov	cx,word [esp+08h]
	mov	eax,dword [esp+04h]
	push	edx
	movzx	ecx,cx
	push	ecx
	push	eax
	call	@std@__1@wmemchr$qpCCui
	add	esp,byte 0ch
L_6025:
	ret
section code
	section vsc@std@__1@piecewise_construct_t@$bctr$qv virtual
@std@__1@piecewise_construct_t@$bctr$qv:
L_6032:
	mov	eax,dword [esp+04h]
L_6033:
	ret
section code
	section vsc@$bnew$quipv virtual
@$bnew$quipv:
; Line 145:	inline  void* operator new  (std::size_t, void* __p) noexcept {return __p;} 
L_6040:
	mov	eax,dword [esp+08h]
L_6041:
	ret
section code
	section vsc@$bnwa$quipv virtual
@$bnwa$quipv:
; Line 146:	inline  void* operator new[](std::size_t, void* __p) noexcept {return __p;} 
L_6048:
	mov	eax,dword [esp+08h]
L_6049:
	ret
section code
	section vsc@std@__1@__allocate$qui virtual
@std@__1@__allocate$qui:
; Line 152:	inline  void *__allocate(size_t __size) { 
L_6056:
	mov	eax,dword [esp+04h]
; Line 154:	  return ::operator new(__size); 
	push	eax
	call	@$bnew$qui
	pop	ecx
; Line 156:	
; Line 158:	} 
L_6057:
	ret
section code
	section vsc@std@__1@__deallocate$qpv virtual
@std@__1@__deallocate$qpv:
; Line 160:	inline  void __deallocate(void *__ptr) { 
L_6064:
	mov	eax,dword [esp+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_6065:
	ret
section code
	section vsc@std@__1@allocator_arg_t@$bctr$qv virtual
@std@__1@allocator_arg_t@$bctr$qv:
L_6072:
	mov	eax,dword [esp+04h]
L_6073:
	ret
section code
	section vsc@std@__1@#__ignore_t$uc~@$bctr$qv virtual
@std@__1@#__ignore_t$uc~@$bctr$qv:
L_6080:
	mov	eax,dword [esp+04h]
L_6081:
	ret
section code
	section vsc@std@__1@#tuple$~@$bctr$qv virtual
@std@__1@#tuple$~@$bctr$qv:
; Line 713:	    constexpr tuple() noexcept {} 
L_6088:
	mov	eax,dword [esp+04h]
L_6089:
	ret
section code
	section vsc@std@__1@#tuple$~@$bctr$qRx#tuple$~ virtual
@std@__1@#tuple$~@$bctr$qRx#tuple$~:
L_6096:
	mov	eax,dword [esp+04h]
L_6097:
	ret
section code
	section vsc@std@__1@#__less$uiui~@$bcall$xqrxuirxui virtual
@std@__1@#__less$uiui~@$bcall$xqrxuirxui:
; Line 701:	     constexpr 
; Line 702:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 
L_6104:
	mov	eax,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	ecx,dword [ecx]
	mov	eax,dword [eax]
	cmp	ecx,eax
	setc	al
	and	eax,byte 01h
	setne	al
L_6105:
	ret
section code
	section vsc@std@length_error@$bctr$qpxc virtual
@std@length_error@$bctr$qpxc:
; Line 123:	     explicit length_error(const char* __s)   : logic_error(__s) {} 
	push	ebx
L_6113:
	mov	eax,dword [esp+08h+04h]
	mov	ebx,dword [esp+04h+04h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@logic_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	ecx,dword [@std@length_error@_$vt]
	add	ecx,byte 0ch
	mov	eax,ebx
	mov	dword [eax],ecx
; Line 123:	     explicit length_error(const char* __s)   : logic_error(__s) {} 
	mov	eax,ebx
L_6114:
	pop	ebx
	ret
section code
	section vsc@std@out_of_range@$bctr$qpxc virtual
@std@out_of_range@$bctr$qpxc:
; Line 133:	     explicit out_of_range(const char* __s)   : logic_error(__s) {} 
	push	ebx
L_6121:
	mov	eax,dword [esp+08h+04h]
	mov	ebx,dword [esp+04h+04h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@logic_error@$bctr$qpxc]
	pop	ecx
	pop	ecx
	mov	ecx,dword [@std@out_of_range@_$vt]
	add	ecx,byte 0ch
	mov	eax,ebx
	mov	dword [eax],ecx
; Line 133:	     explicit out_of_range(const char* __s)   : logic_error(__s) {} 
	mov	eax,ebx
L_6122:
	pop	ebx
	ret
section code
	section vsc@std@__1@#char_traits$h~@assign$qrhrxh virtual
@std@__1@#char_traits$h~@assign$qrhrxh:
; Line 722:	    static inline void assign(char_type& __c1, const char_type& __c2) noexcept 
; Line 723:	        {__c1 = __c2;} 
L_6129:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	cx,word [ecx]
	mov	word [eax],cx
L_6130:
	ret
section code
	section vsc@std@__1@#char_traits$h~@eq$qhh virtual
@std@__1@#char_traits$h~@eq$qhh:
; Line 724:	    static inline constexpr bool eq(char_type __c1, char_type __c2) noexcept 
; Line 725:	        {return __c1 == __c2;} 
L_6137:
	mov	dx,word [esp+08h]
	mov	ax,word [esp+04h]
	movzx	ecx,ax
	movzx	eax,dx
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_6138:
	ret
section code
	section vsc@std@__1@#char_traits$h~@lt$qhh virtual
@std@__1@#char_traits$h~@lt$qhh:
; Line 726:	    static inline constexpr bool lt(char_type __c1, char_type __c2) noexcept 
; Line 727:	        {return __c1 < __c2;} 
L_6146:
	mov	dx,word [esp+08h]
	mov	ax,word [esp+04h]
	movzx	ecx,ax
	movzx	eax,dx
	cmp	ecx,eax
	setl	al
	and	eax,byte 01h
	setne	al
L_6147:
	ret
section code
	section vsc@std@__1@#char_traits$h~@compare$qpxhpxhui virtual
@std@__1@#char_traits$h~@compare$qpxhpxhui:
; Line 751:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_6155:
	mov	ecx,dword [esp+0ch+010h]
	mov	edx,dword [esp+08h+010h]
	mov	eax,dword [esp+04h+010h]
	and	ecx,ecx
	je	short	L_6160
L_6158:
; Line 753:	    { 
; Line 754:	        if (lt(*__s1, *__s2)) 
	mov	ebx,eax
	mov	si,word [ebx]
	mov	ebx,edx
	mov	bx,word [ebx]
	movzx	esi,si
	movzx	ebx,bx
L_6191:
	cmp	esi,ebx
	jge	short	L_6164
; Line 755:	            return -1; 
	mov	eax,0ffffffffh
	jmp	short	L_6156
L_6164:
; Line 756:	        if (lt(*__s2, *__s1)) 
	mov	ebx,edx
	mov	si,word [ebx]
	mov	ebx,eax
	mov	bx,word [ebx]
	movzx	esi,si
	movzx	ebx,bx
L_6207:
	cmp	esi,ebx
	jge	short	L_6169
; Line 757:	            return 1; 
	mov	eax,01h
	jmp	short	L_6156
L_6169:
L_6161:
	dec	ecx
	add	eax,byte 02h
	add	edx,byte 02h
; Line 752:	    for (; __n; --__n, ++__s1, ++__s2) 
L_6159:
	and	ecx,ecx
	jne	short	L_6158
L_6160:
; Line 758:	    } 
; Line 759:	    return 0; 
	xor	eax,eax
; Line 760:	} 
L_6156:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$h~@length$qpxh virtual
@std@__1@#char_traits$h~@length$qpxh:
; Line 764:	char_traits<char16_t>::length(const char_type* __s) 
; Line 765:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_6213:
	mov	eax,dword [esp+04h+010h]
; Line 766:	    size_t __len = 0; 
	xor	ecx,ecx
	mov	edx,eax
	mov	dx,word [edx]
	xor	esi,esi
	movzx	ebx,dx
	movzx	edx,si
L_6237:
	cmp	ebx,edx
	je	short	L_6218
L_6216:
; Line 768:	        ++__len; 
	inc	ecx
L_6219:
	add	eax,byte 02h
; Line 767:	    for (; !eq(*__s, char_type(0)); ++__s) 
L_6217:
	mov	edx,eax
	mov	dx,word [edx]
	xor	esi,esi
	movzx	ebx,dx
	movzx	edx,si
L_6253:
	cmp	ebx,edx
	jne	short	L_6216
L_6218:
; Line 769:	    return __len; 
	mov	eax,ecx
; Line 770:	} 
L_6214:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$h~@find$qpxhuirxh virtual
@std@__1@#char_traits$h~@find$qpxhuirxh:
; Line 774:	char_traits<char16_t>::find(const char_type* __s, size_t __n, const char_type& __a) 
; Line 775:	{ 
	push	ecx
	push	ebx
	push	esi
L_6259:
	mov	ebx,dword [esp+0ch+0ch]
	mov	eax,dword [esp+08h+0ch]
	mov	ecx,dword [esp+04h+0ch]
	and	eax,eax
	je	short	L_6264
L_6262:
; Line 777:	    { 
; Line 778:	        if (eq(*__s, __a)) 
	mov	edx,ecx
	mov	si,word [edx]
	mov	edx,ebx
	mov	dx,word [edx]
	movzx	esi,si
	movzx	edx,dx
L_6290:
	cmp	esi,edx
	jne	short	L_6268
; Line 779:	            return __s; 
	mov	eax,ecx
	jmp	short	L_6260
L_6268:
; Line 780:	        ++__s; 
	add	ecx,byte 02h
L_6265:
	dec	eax
; Line 776:	    for (; __n; --__n) 
L_6263:
	and	eax,eax
	jne	short	L_6262
L_6264:
; Line 781:	    } 
; Line 782:	    return 0; 
	xor	eax,eax
; Line 783:	} 
L_6260:
	pop	esi
	pop	ebx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$h~@move$qphpxhui virtual
@std@__1@#char_traits$h~@move$qphpxhui:
; Line 787:	char_traits<char16_t>::move(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 788:	{ 
	add	esp,byte 0fffffff0h
	push	ebx
	push	esi
	push	edi
L_6296:
	mov	eax,dword [esp+0ch+01ch]
	mov	ebx,dword [esp+08h+01ch]
	mov	edx,dword [esp+04h+01ch]
; Line 789:	    char_type* __r = __s1; 
	mov	ecx,edx
; Line 790:	    if (__s1 < __s2) 
	cmp	edx,ebx
	jge	short	L_6299
; Line 791:	    { 
	and	eax,eax
	je	short	L_6310
L_6303:
; Line 793:	            assign(*__s1, *__s2); 
	mov	esi,edx
	mov	edi,ebx
	mov	di,word [edi]
	mov	word [esi],di
L_6343:
L_6306:
	dec	eax
	add	edx,byte 02h
	add	ebx,byte 02h
; Line 792:	        for (; __n; --__n, ++__s1, ++__s2) 
L_6304:
	and	eax,eax
	jne	short	L_6303
L_6305:
	jmp	short	L_6310
L_6299:
; Line 794:	    } 
; Line 795:	    else if (__s2 < __s1) 
	cmp	ebx,edx
	jge	short	L_6313
; Line 796:	    { 
; Line 797:	        __s1 += __n; 
	mov	edi,eax
	shl	edi,01h
	mov	esi,edi
	add	esi,edx
; Line 798:	        __s2 += __n; 
	add	ebx,edi
	and	eax,eax
	je	short	L_6319
L_6317:
; Line 800:	            assign(*--__s1, *--__s2); 
	sub	esi,byte 02h
	mov	edx,esi
	sub	ebx,byte 02h
	mov	edi,ebx
	mov	di,word [edi]
	mov	word [edx],di
L_6359:
L_6320:
	dec	eax
; Line 799:	        for (; __n; --__n) 
L_6318:
	and	eax,eax
	jne	short	L_6317
L_6319:
L_6313:
L_6310:
; Line 801:	    } 
; Line 802:	    return __r; 
	mov	eax,ecx
; Line 803:	} 
L_6297:
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$h~@copy$qphpxhui virtual
@std@__1@#char_traits$h~@copy$qphpxhui:
; Line 807:	char_traits<char16_t>::copy(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 808:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
L_6365:
	mov	eax,dword [esp+0ch+014h]
	mov	ecx,dword [esp+08h+014h]
	mov	edx,dword [esp+04h+014h]
; Line 809:	    ((void)0); 
; Line 810:	    char_type* __r = __s1; 
	mov	ebx,edx
	and	eax,eax
	je	short	L_6370
L_6368:
; Line 812:	        assign(*__s1, *__s2); 
	mov	esi,edx
	mov	edi,ecx
	mov	di,word [edi]
	mov	word [esi],di
L_6389:
L_6371:
	dec	eax
	add	edx,byte 02h
	add	ecx,byte 02h
; Line 811:	    for (; __n; --__n, ++__s1, ++__s2) 
L_6369:
	and	eax,eax
	jne	short	L_6368
L_6370:
; Line 813:	    return __r; 
	mov	eax,ebx
; Line 814:	} 
L_6366:
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$h~@assign$qphuih virtual
@std@__1@#char_traits$h~@assign$qphuih:
; Line 818:	char_traits<char16_t>::assign(char_type* __s, size_t __n, char_type __a) 
; Line 819:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_6395:
	mov	edx,dword [esp+08h+010h]
	mov	ecx,dword [esp+04h+010h]
; Line 820:	    char_type* __r = __s; 
	mov	eax,ecx
	and	edx,edx
	je	short	L_6400
L_6398:
; Line 822:	        assign(*__s, __a); 
	mov	ebx,ecx
	mov	si,word [esp+0ch+010h]
	mov	word [ebx],si
L_6419:
L_6401:
	dec	edx
	add	ecx,byte 02h
; Line 821:	    for (; __n; --__n, ++__s) 
L_6399:
	and	edx,edx
	jne	short	L_6398
L_6400:
; Line 823:	    return __r; 
; Line 824:	} 
L_6396:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$H~@assign$qrHrxH virtual
@std@__1@#char_traits$H~@assign$qrHrxH:
; Line 835:	    static inline void assign(char_type& __c1, const char_type& __c2) noexcept 
; Line 836:	        {__c1 = __c2;} 
L_6425:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_6426:
	ret
section code
	section vsc@std@__1@#char_traits$H~@eq$qHH virtual
@std@__1@#char_traits$H~@eq$qHH:
; Line 837:	    static inline constexpr bool eq(char_type __c1, char_type __c2) noexcept 
; Line 838:	        {return __c1 == __c2;} 
L_6433:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_6434:
	ret
section code
	section vsc@std@__1@#char_traits$H~@lt$qHH virtual
@std@__1@#char_traits$H~@lt$qHH:
; Line 839:	    static inline constexpr bool lt(char_type __c1, char_type __c2) noexcept 
; Line 840:	        {return __c1 < __c2;} 
L_6442:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	cmp	ecx,eax
	setl	al
	and	eax,byte 01h
	setne	al
L_6443:
	ret
section code
	section vsc@std@__1@#char_traits$H~@compare$qpxHpxHui virtual
@std@__1@#char_traits$H~@compare$qpxHpxHui:
; Line 864:	{ 
	add	esp,byte 0fffffff0h
	push	ebx
	push	esi
L_6451:
	mov	ecx,dword [esp+0ch+018h]
	mov	edx,dword [esp+08h+018h]
	mov	eax,dword [esp+04h+018h]
	and	ecx,ecx
	je	short	L_6456
L_6454:
; Line 866:	    { 
; Line 867:	        if (lt(*__s1, *__s2)) 
	mov	ebx,eax
	mov	esi,dword [ebx]
	mov	ebx,edx
	mov	ebx,dword [ebx]
L_6487:
	cmp	esi,ebx
	jge	short	L_6460
; Line 868:	            return -1; 
	mov	eax,0ffffffffh
	jmp	short	L_6452
L_6460:
; Line 869:	        if (lt(*__s2, *__s1)) 
	mov	ebx,edx
	mov	esi,dword [ebx]
	mov	ebx,eax
	mov	ebx,dword [ebx]
L_6503:
	cmp	esi,ebx
	jge	short	L_6465
; Line 870:	            return 1; 
	mov	eax,01h
	jmp	short	L_6452
L_6465:
L_6457:
	dec	ecx
	add	eax,byte 04h
	add	edx,byte 04h
; Line 865:	    for (; __n; --__n, ++__s1, ++__s2) 
L_6455:
	and	ecx,ecx
	jne	short	L_6454
L_6456:
; Line 871:	    } 
; Line 872:	    return 0; 
	xor	eax,eax
; Line 873:	} 
L_6452:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$H~@length$qpxH virtual
@std@__1@#char_traits$H~@length$qpxH:
; Line 877:	char_traits<char32_t>::length(const char_type* __s) 
; Line 878:	{ 
	add	esp,byte 0fffffff0h
L_6509:
	mov	edx,dword [esp+04h+010h]
; Line 879:	    size_t __len = 0; 
	xor	eax,eax
	mov	ecx,edx
	mov	ecx,dword [ecx]
L_6533:
	and	ecx,ecx
	je	short	L_6514
L_6512:
; Line 881:	        ++__len; 
	inc	eax
L_6515:
	add	edx,byte 04h
; Line 880:	    for (; !eq(*__s, char_type(0)); ++__s) 
L_6513:
	mov	ecx,edx
	mov	ecx,dword [ecx]
L_6549:
	and	ecx,ecx
	jne	short	L_6512
L_6514:
; Line 882:	    return __len; 
; Line 883:	} 
L_6510:
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$H~@find$qpxHuirxH virtual
@std@__1@#char_traits$H~@find$qpxHuirxH:
; Line 887:	char_traits<char32_t>::find(const char_type* __s, size_t __n, const char_type& __a) 
; Line 888:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_6555:
	mov	ebx,dword [esp+0ch+010h]
	mov	eax,dword [esp+08h+010h]
	mov	ecx,dword [esp+04h+010h]
	and	eax,eax
	je	short	L_6560
L_6558:
; Line 890:	    { 
; Line 891:	        if (eq(*__s, __a)) 
	mov	edx,ecx
	mov	esi,dword [edx]
	mov	edx,ebx
	mov	edx,dword [edx]
L_6586:
	cmp	esi,edx
	jne	short	L_6564
; Line 892:	            return __s; 
	mov	eax,ecx
	jmp	short	L_6556
L_6564:
; Line 893:	        ++__s; 
	add	ecx,byte 04h
L_6561:
	dec	eax
; Line 889:	    for (; __n; --__n) 
L_6559:
	and	eax,eax
	jne	short	L_6558
L_6560:
; Line 894:	    } 
; Line 895:	    return 0; 
	xor	eax,eax
; Line 896:	} 
L_6556:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$H~@move$qpHpxHui virtual
@std@__1@#char_traits$H~@move$qpHpxHui:
; Line 900:	char_traits<char32_t>::move(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 901:	{ 
	add	esp,byte 0fffffff0h
	push	ebx
	push	esi
	push	edi
L_6592:
	mov	eax,dword [esp+0ch+01ch]
	mov	ebx,dword [esp+08h+01ch]
	mov	edx,dword [esp+04h+01ch]
; Line 902:	    char_type* __r = __s1; 
	mov	ecx,edx
; Line 903:	    if (__s1 < __s2) 
	cmp	edx,ebx
	jge	short	L_6595
; Line 904:	    { 
	and	eax,eax
	je	short	L_6606
L_6599:
; Line 906:	            assign(*__s1, *__s2); 
	mov	esi,edx
	mov	edi,ebx
	mov	edi,dword [edi]
	mov	dword [esi],edi
L_6639:
L_6602:
	dec	eax
	add	edx,byte 04h
	add	ebx,byte 04h
; Line 905:	        for (; __n; --__n, ++__s1, ++__s2) 
L_6600:
	and	eax,eax
	jne	short	L_6599
L_6601:
	jmp	short	L_6606
L_6595:
; Line 907:	    } 
; Line 908:	    else if (__s2 < __s1) 
	cmp	ebx,edx
	jge	short	L_6609
; Line 909:	    { 
; Line 910:	        __s1 += __n; 
	mov	edi,eax
	shl	edi,02h
	mov	esi,edi
	add	esi,edx
; Line 911:	        __s2 += __n; 
	add	ebx,edi
	and	eax,eax
	je	short	L_6615
L_6613:
; Line 913:	            assign(*--__s1, *--__s2); 
	sub	esi,byte 04h
	mov	edx,esi
	sub	ebx,byte 04h
	mov	edi,ebx
	mov	edi,dword [edi]
	mov	dword [edx],edi
L_6655:
L_6616:
	dec	eax
; Line 912:	        for (; __n; --__n) 
L_6614:
	and	eax,eax
	jne	short	L_6613
L_6615:
L_6609:
L_6606:
; Line 914:	    } 
; Line 915:	    return __r; 
	mov	eax,ecx
; Line 916:	} 
L_6593:
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$H~@copy$qpHpxHui virtual
@std@__1@#char_traits$H~@copy$qpHpxHui:
; Line 920:	char_traits<char32_t>::copy(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 921:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
L_6661:
	mov	eax,dword [esp+0ch+014h]
	mov	ecx,dword [esp+08h+014h]
	mov	edx,dword [esp+04h+014h]
; Line 922:	    ((void)0); 
; Line 923:	    char_type* __r = __s1; 
	mov	ebx,edx
	and	eax,eax
	je	short	L_6666
L_6664:
; Line 925:	        assign(*__s1, *__s2); 
	mov	esi,edx
	mov	edi,ecx
	mov	edi,dword [edi]
	mov	dword [esi],edi
L_6685:
L_6667:
	dec	eax
	add	edx,byte 04h
	add	ecx,byte 04h
; Line 924:	    for (; __n; --__n, ++__s1, ++__s2) 
L_6665:
	and	eax,eax
	jne	short	L_6664
L_6666:
; Line 926:	    return __r; 
	mov	eax,ebx
; Line 927:	} 
L_6662:
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$H~@assign$qpHuiH virtual
@std@__1@#char_traits$H~@assign$qpHuiH:
; Line 931:	char_traits<char32_t>::assign(char_type* __s, size_t __n, char_type __a) 
; Line 932:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_6691:
	mov	edx,dword [esp+08h+010h]
	mov	ecx,dword [esp+04h+010h]
; Line 933:	    char_type* __r = __s; 
	mov	eax,ecx
	and	edx,edx
	je	short	L_6696
L_6694:
; Line 935:	        assign(*__s, __a); 
	mov	ebx,ecx
	mov	esi,dword [esp+0ch+010h]
	mov	dword [ebx],esi
L_6715:
L_6697:
	dec	edx
	add	ecx,byte 04h
; Line 934:	    for (; __n; --__n, ++__s) 
L_6695:
	and	edx,edx
	jne	short	L_6694
L_6696:
; Line 936:	    return __r; 
; Line 937:	} 
L_6692:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$h~@$bctr$qv virtual
@std@__1@#allocator$h~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_6721:
	mov	eax,dword [esp+04h]
L_6722:
	ret
section code
	section vsc@std@__1@#allocator$h~@allocate$quipxv virtual
@std@__1@#allocator$h~@allocate$quipxv:
; Line 1634:	        {return static_cast<pointer>(std::__1::__allocate(__n * sizeof(_Tp)));} 
	push	ecx
L_6729:
	mov	eax,dword [esp+08h+04h]
	shl	eax,01h
; Line 154:	  return ::operator new(__size); 
	push	eax
	call	@$bnew$qui
	pop	ecx
; Line 156:	
; Line 158:	} 
L_6747:
L_6730:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$h~@deallocate$qphui virtual
@std@__1@#allocator$h~@deallocate$qphui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_6753:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_6771:
L_6754:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$h~@max_size$xqv virtual
@std@__1@#allocator$h~@max_size$xqv:
; Line 1637:	     size_type max_size() const noexcept 
; Line 1638:	        {return size_type(~0) / sizeof(_Tp);} 
L_6777:
	mov	eax,07fffffffh
L_6778:
	ret
section code
	section vsc@std@__1@#pointer_traits$ph~@pointer_to$qrh virtual
@std@__1@#pointer_traits$ph~@pointer_to$qrh:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_6785:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_6803:
L_6786:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$h~~@allocate$qr#allocator$h~ui virtual
@std@__1@#allocator_traits$#allocator$h~~@allocate$qr#allocator$h~ui:
; Line 1438:	    static pointer allocate(allocator_type& __a, size_type __n) 
; Line 1439:	        {return __a.allocate(__n);} 
	push	ecx
	push	ecx
	push	ecx
L_6809:
	mov	eax,dword [esp+08h+0ch]
	shl	eax,01h
	push	eax
	call	@std@__1@__allocate$qui
	pop	ecx
L_6827:
L_6810:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$h~~@deallocate$qr#allocator$h~phui virtual
@std@__1@#allocator_traits$#allocator$h~~@deallocate$qr#allocator$h~phui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_6833:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_6851:
L_6834:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$h~~@max_size$qrx#allocator$h~ virtual
@std@__1@#allocator_traits$#allocator$h~~@max_size$qrx#allocator$h~:
; Line 1490:	    static size_type max_size(const allocator_type& __a) noexcept 
; Line 1491:	        {return __max_size(__has_max_size<const allocator_type>(), __a);} 
	add	esp,byte 0ffffffa8h
L_6857:
	mov	eax,dword [esp+04h+058h]
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_6892:
L_6877:
	lea	eax,[esp-055h+060h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~
	pop	ecx
	pop	ecx
L_6920:
L_6907:
L_6948:
L_6935:
L_6858:
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~ virtual
@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~:
; Line 1593:	    static size_type __max_size(true_type, const allocator_type& __a) 
; Line 1594:	            {return __a.max_size();} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc0h
L_6955:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_6958:
	mov	eax,07fffffffh
L_6975:
L_6956:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~ virtual
@$xc@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__wrap_iter$ph~@$bctr$qv virtual
@std@__1@#__wrap_iter$ph~@$bctr$qv:
; Line 1128:	     __wrap_iter() noexcept 
; Line 1130:	                : __i{} 
; Line 1132:	    { 
L_6981:
	mov	eax,dword [esp+04h]
; Line 1134:	
; Line 1136:	    } 
L_6982:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@$bctr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@$bctr$qv:
; Line 1953:	     __libcpp_compressed_pair_imp() {} 
	add	esp,byte 0ffffffech
L_6989:
	mov	eax,dword [esp+04h+014h]
L_7022:
L_7038:
L_7054:
L_7007:
L_7071:
L_6990:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_7077:
	mov	eax,dword [esp+04h]
L_7078:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_7085:
	mov	eax,dword [esp+04h]
L_7086:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_7093:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_7094:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@second$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@second$xqv:
; Line 2018:	     _T2_const_reference second() const noexcept {return __second_;} 
L_7101:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_7102:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@$bctr$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@$bctr$qv:
; Line 2315:	     __compressed_pair() {} 
	add	esp,byte 0ffffffe8h
L_7109:
	mov	eax,dword [esp+04h+018h]
L_7157:
L_7173:
L_7189:
L_7142:
L_7206:
L_7127:
L_7110:
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@first$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_7213:
	mov	eax,dword [esp+04h+04h]
L_7231:
L_7214:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@first$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_7237:
	mov	eax,dword [esp+04h+04h]
L_7255:
L_7238:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@second$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_7261:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_7279:
L_7262:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@second$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@second$xqv:
; Line 2374:	     _T2_const_reference second() const noexcept {return base::second();} 
	push	ecx
L_7285:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_7303:
L_7286:
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@$bctr$qR#basic_string$h#char_traits$h~#allocator$h~~ virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@$bctr$qR#basic_string$h#char_traits$h~#allocator$h~~:
	add	esp,byte 0ffffffc8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_7309:
	mov	esi,dword [esp+08h+048h]
	mov	ebx,dword [esp+04h+048h]
L_7327:
	mov	edi,ebx
	add	edi,byte 04h
	mov	eax,esi
	add	eax,byte 04h
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_7358:
	mov	ebp,eax
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bctr$qRx52@#basic_string$h#char_traits$h~#allocator$h~~@__long
	pop	ecx
	pop	ecx
	mov	eax,ebp
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bctr$qRx53@#basic_string$h#char_traits$h~#allocator$h~~@__short
	pop	ecx
	pop	ecx
	mov	eax,ebp
	push	eax
	push	edi
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bctr$qRx51@#basic_string$h#char_traits$h~#allocator$h~~@__raw
	pop	ecx
	pop	ecx
L_7389:
L_7405:
L_7374:
L_7343:
; Line 2076:	    __str.__zero(); 
	push	esi
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__zero$qv
	pop	ecx
; Line 2078:	
; Line 2079:	
; Line 2080:	
; Line 2082:	} 
	mov	eax,ebx
L_7310:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 038h
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@$bctr$qpxhui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@$bctr$qpxhui:
	add	esp,byte 0ffffffech
	push	ebx
	push	ebp
	push	esi
	push	edi
L_7413:
	mov	edi,dword [esp+0ch+024h]
	mov	esi,dword [esp+08h+024h]
	mov	ebx,dword [esp+04h+024h]
L_7431:
	mov	ebp,ebx
	add	ebp,byte 04h
	mov	eax,ebp
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bctr$qv
	pop	ecx
	mov	eax,ebp
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bctr$qv
	pop	ecx
	push	ebp
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bctr$qv
	pop	ecx
L_7477:
L_7493:
L_7462:
L_7447:
; Line 2023:	    ((void)0); 
; Line 2024:	    __init(__s, __n); 
	push	edi
	push	esi
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__init$qpxhui
	add	esp,byte 0ch
; Line 2026:	
; Line 2028:	} 
	mov	eax,ebx
L_7414:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@$bdtr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@$bdtr$qv:
	add	esp,byte 0ffffffa4h
	push	ebx
L_7501:
	mov	ebx,dword [esp+04h+060h]
; Line 2276:	
	mov	eax,ebx
	add	eax,byte 04h
L_7554:
L_7539:
	movzx	eax,byte [eax]
	and	eax,byte 01h
	setne	al
L_7524:
	and	al,al
	je	short	L_7504
; Line 2279:	        __alloc_traits::deallocate(__alloc(), __get_long_pointer(), __get_long_cap()); 
L_7617:
L_7602:
L_7587:
	mov	eax,ebx
	add	eax,byte 04h
L_7665:
L_7650:
	mov	eax,dword [eax+08h]
L_7635:
L_7713:
L_7698:
L_7683:
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_7731:
L_7572:
L_7504:
; Line 2280:	} 
	add	ebx,byte 04h
	mov	eax,ebx
L_7772:
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bdtr$qv
	pop	ecx
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bdtr$qv
	pop	ecx
	push	ebx
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bdtr$qv
	pop	ecx
L_7786:
L_7759:
L_7746:
L_7802:
L_7502:
	pop	ebx
	add	esp,byte 05ch
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@max_size$xqv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@max_size$xqv:
	add	esp,byte 0ffffff98h
L_7809:
	mov	eax,dword [esp+04h+068h]
; Line 3185:	    size_type __m = __alloc_traits::max_size(__alloc()); 
	add	eax,byte 04h
	add	eax,byte 0ch
L_7874:
L_7859:
L_7844:
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_7907:
L_7892:
	lea	eax,[esp-065h+070h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$h~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$h~
	pop	ecx
	pop	ecx
L_7935:
L_7922:
L_7963:
L_7950:
L_7829:
; Line 3187:	
; Line 3189:	    return __m - __alignment; 
	sub	eax,byte 010h
; Line 3191:	} 
L_7810:
	add	esp,byte 068h
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__is_long$xqv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__is_long$xqv:
; Line 1663:	    bool __is_long() const noexcept 
; Line 1664:	        {return bool(__r_.first().__s.__size_ & __short_mask);} 
	push	ecx
	push	ecx
L_7971:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_8004:
L_7989:
	movzx	eax,byte [eax]
	and	eax,byte 01h
	setne	al
L_7972:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__alloc$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__alloc$qv:
; Line 1677:	    allocator_type& __alloc() noexcept 
; Line 1678:	        {return __r_.second();} 
	push	ecx
	push	ecx
L_8012:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
	add	eax,byte 0ch
L_8045:
L_8030:
L_8013:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__alloc$xqv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__alloc$xqv:
; Line 1680:	    const allocator_type& __alloc() const noexcept 
; Line 1681:	        {return __r_.second();} 
	push	ecx
	push	ecx
L_8052:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
	add	eax,byte 0ch
L_8085:
L_8070:
L_8053:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_short_size$qui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_short_size$qui:
; Line 1704:	    void __set_short_size(size_type __s) noexcept 
; Line 1706:	
; Line 1708:	        {__r_.first().__s.__size_ = (unsigned char)(__s << 1);} 
	push	ecx
	push	ecx
L_8092:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	shl	ecx,01h
	add	eax,byte 04h
L_8125:
L_8110:
	mov	byte [eax],cl
L_8093:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_long_size$qui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_long_size$qui:
; Line 1722:	    void __set_long_size(size_type __s) noexcept 
; Line 1723:	        {__r_.first().__l.__size_ = __s;} 
	push	ecx
	push	ecx
L_8132:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_8165:
L_8150:
	mov	dword [eax+04h],ecx
L_8133:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_long_cap$qui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_long_cap$qui:
; Line 1732:	    void __set_long_cap(size_type __s) noexcept 
; Line 1733:	        {__r_.first().__l.__cap_  = __long_mask | __s;} 
	push	ecx
	push	ecx
L_8172:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	or	ecx,byte 01h
	add	eax,byte 04h
L_8205:
L_8190:
	mov	dword [eax],ecx
L_8173:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__get_long_cap$xqv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__get_long_cap$xqv:
; Line 1735:	    size_type __get_long_cap() const noexcept 
; Line 1736:	        {return __r_.first().__l.__cap_ & size_type(~__long_mask);} 
	push	ecx
	push	ecx
L_8212:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_8245:
L_8230:
	mov	eax,dword [eax]
	and	eax,dword 0fffffffeh
L_8213:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_long_pointer$qph virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__set_long_pointer$qph:
; Line 1739:	    void __set_long_pointer(pointer __p) noexcept 
; Line 1740:	        {__r_.first().__l.__data_ = __p;} 
	push	ecx
	push	ecx
L_8252:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_8285:
L_8270:
	mov	dword [eax+08h],ecx
L_8253:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__get_long_pointer$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__get_long_pointer$qv:
; Line 1742:	    pointer __get_long_pointer() noexcept 
; Line 1743:	        {return __r_.first().__l.__data_;} 
	push	ecx
	push	ecx
L_8292:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_8325:
L_8310:
	mov	eax,dword [eax+08h]
L_8293:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__get_short_pointer$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__get_short_pointer$qv:
; Line 1748:	    pointer __get_short_pointer() noexcept 
; Line 1749:	        {return pointer_traits<pointer>::pointer_to(__r_.first().__s.__data_[0]);} 
	add	esp,byte 0fffffff0h
L_8332:
	mov	eax,dword [esp+04h+010h]
	add	eax,byte 04h
L_8380:
L_8365:
	add	eax,dword 02h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_8397:
L_8350:
L_8333:
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__zero$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__zero$qv:
; Line 1761:	    void __zero() noexcept 
; Line 1762:	        { 
	push	ecx
	push	ecx
L_8404:
	mov	eax,dword [esp+04h+08h]
; Line 1763:	            size_type (&__a)[__n_words] = __r_.first().__r.__words; 
	add	eax,byte 04h
L_8445:
L_8430:
	mov	edx,eax
	xor	eax,eax
L_8407:
; Line 1765:	                __a[__i] = 0; 
	mov	dword [edx+eax*4],00h
L_8410:
	inc	eax
; Line 1764:	            for (unsigned __i = 0; __i < __n_words; ++__i) 
L_8408:
	cmp	eax,byte 03h
	jc	short	L_8407
L_8409:
; Line 1766:	        } 
L_8405:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__recommend$qui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__recommend$qui:
; Line 1773:	    static  
; Line 1774:	    size_type __recommend(size_type __s) noexcept 
; Line 1775:	        {return (__s < __min_cap ? __min_cap : 
	push	ecx
L_8452:
	mov	eax,dword [esp+04h+04h]
; Line 1777:	                            __alignment/sizeof(value_type) : 1 > (__s+1)) - 1;} 
	cmp	eax,byte 05h
	jnc	short	L_8457
	mov	eax,05h
	jmp	short	L_8458
L_8457:
	inc	eax
	add	eax,byte 07h
	and	eax,dword 0fffffff8h
L_8472:
L_8458:
	dec	eax
L_8453:
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__init$qpxhui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__init$qpxhui:
	add	esp,0ffffff5ch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_8478:
	mov	ebp,dword [esp+0ch+0b4h]
	mov	ebx,dword [esp+08h+0b4h]
	mov	esi,dword [esp+04h+0b4h]
; Line 1976:	    if (__sz > max_size()) 
	mov	eax,esi
	push	eax
	call	@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@max_size$xqv
	pop	ecx
	cmp	ebp,eax
	jbe	short	L_8481
; Line 1977:	        this->__throw_length_error(); 
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#__basic_string_common$4bool$1&~@__throw_length_error$xqv]
	pop	ecx
L_8481:
; Line 1979:	    if (__sz < __min_cap) 
	cmp	ebp,byte 05h
	jnc	short	L_8486
; Line 1980:	    { 
; Line 1981:	        __set_short_size(__sz); 
	mov	eax,esi
	mov	ecx,ebp
	shl	ecx,01h
	add	eax,byte 04h
L_8543:
L_8528:
	mov	byte [eax],cl
L_8513:
; Line 1982:	        __p = __get_short_pointer(); 
	mov	eax,esi
	add	eax,byte 04h
L_8606:
L_8591:
	add	eax,dword 02h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_8623:
L_8576:
L_8561:
	jmp	short	L_8491
L_8486:
; Line 1984:	    else 
; Line 1985:	    { 
; Line 1986:	        size_type __cap = __recommend(__sz); 
	mov	eax,ebp
; Line 1777:	                            __alignment/sizeof(value_type) : 1 > (__s+1)) - 1;} 
	cmp	eax,byte 05h
	jnc	short	L_8643
	mov	eax,05h
	jmp	short	L_8644
L_8643:
	inc	eax
	add	eax,byte 07h
	and	eax,dword 0fffffff8h
L_8658:
L_8644:
	dec	eax
L_8641:
	mov	edi,eax
; Line 1987:	        __p = __alloc_traits::allocate(__alloc(), __cap+1); 
L_8720:
L_8705:
L_8690:
	mov	eax,edi
	inc	eax
	shl	eax,01h
	push	eax
	call	@std@__1@__allocate$qui
	pop	ecx
L_8738:
L_8675:
; Line 1988:	        __set_long_pointer(__p); 
	mov	ecx,esi
	mov	edx,eax
	add	ecx,byte 04h
L_8785:
L_8770:
	mov	dword [ecx+08h],edx
L_8755:
; Line 1989:	        __set_long_cap(__cap+1); 
	mov	edx,esi
	mov	ecx,edi
	inc	ecx
	or	ecx,byte 01h
	add	edx,byte 04h
L_8833:
L_8818:
	mov	dword [edx],ecx
L_8803:
; Line 1990:	        __set_long_size(__sz); 
	mov	ecx,esi
	mov	edx,ebp
	add	ecx,byte 04h
L_8881:
L_8866:
	mov	dword [ecx+04h],edx
L_8851:
L_8491:
; Line 1992:	    traits_type::copy(std::__1::__to_raw_pointer(__p), __s, __sz); 
	mov	ecx,eax
; Line 1043:	    return __p; 
; Line 1044:	} 
L_8920:
	mov	esi,ecx
	mov	edx,ebx
	mov	ebx,ebp
; Line 809:	    ((void)0); 
; Line 810:	    char_type* __r = __s1; 
	mov	ecx,esi
	mov	dword [esp-014h+0b4h],ecx
	and	ebx,ebx
	je	short	L_8905
L_8887:
; Line 812:	        assign(*__s1, *__s2); 
	mov	edi,esi
	mov	ecx,edx
	mov	cx,word [ecx]
	mov	word [edi],cx
L_8936:
L_8890:
	dec	ebx
	add	esi,byte 02h
	add	edx,byte 02h
; Line 811:	    for (; __n; --__n, ++__s1, ++__s2) 
L_8888:
	and	ebx,ebx
	jne	short	L_8887
L_8889:
; Line 813:	    return __r; 
; Line 814:	} 
L_8905:
; Line 1993:	    traits_type::assign(__p[__sz], value_type()); 
	mov	ecx,ebp
	shl	ecx,01h
	add	eax,ecx
	xor	ecx,ecx
	mov	word [esp-0a2h+0b4h],cx
	mov	cx,word [esp-0a2h+0b4h]
	mov	word [eax],cx
L_8953:
; Line 1994:	} 
L_8479:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#allocator$H~@$bctr$qv virtual
@std@__1@#allocator$H~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_8959:
	mov	eax,dword [esp+04h]
L_8960:
	ret
section code
	section vsc@std@__1@#allocator$H~@allocate$quipxv virtual
@std@__1@#allocator$H~@allocate$quipxv:
; Line 1634:	        {return static_cast<pointer>(std::__1::__allocate(__n * sizeof(_Tp)));} 
	push	ecx
L_8967:
	mov	eax,dword [esp+08h+04h]
	shl	eax,02h
; Line 154:	  return ::operator new(__size); 
	push	eax
	call	@$bnew$qui
	pop	ecx
; Line 156:	
; Line 158:	} 
L_8985:
L_8968:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$H~@deallocate$qpHui virtual
@std@__1@#allocator$H~@deallocate$qpHui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_8991:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_9009:
L_8992:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$H~@max_size$xqv virtual
@std@__1@#allocator$H~@max_size$xqv:
; Line 1637:	     size_type max_size() const noexcept 
; Line 1638:	        {return size_type(~0) / sizeof(_Tp);} 
L_9015:
	mov	eax,03fffffffh
L_9016:
	ret
section code
	section vsc@std@__1@#pointer_traits$pH~@pointer_to$qrH virtual
@std@__1@#pointer_traits$pH~@pointer_to$qrH:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_9023:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_9041:
L_9024:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$H~~@allocate$qr#allocator$H~ui virtual
@std@__1@#allocator_traits$#allocator$H~~@allocate$qr#allocator$H~ui:
; Line 1438:	    static pointer allocate(allocator_type& __a, size_type __n) 
; Line 1439:	        {return __a.allocate(__n);} 
	push	ecx
	push	ecx
	push	ecx
L_9047:
	mov	eax,dword [esp+08h+0ch]
	shl	eax,02h
	push	eax
	call	@std@__1@__allocate$qui
	pop	ecx
L_9065:
L_9048:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$H~~@deallocate$qr#allocator$H~pHui virtual
@std@__1@#allocator_traits$#allocator$H~~@deallocate$qr#allocator$H~pHui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_9071:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_9089:
L_9072:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$H~~@max_size$qrx#allocator$H~ virtual
@std@__1@#allocator_traits$#allocator$H~~@max_size$qrx#allocator$H~:
; Line 1490:	    static size_type max_size(const allocator_type& __a) noexcept 
; Line 1491:	        {return __max_size(__has_max_size<const allocator_type>(), __a);} 
	add	esp,byte 0ffffffa8h
L_9095:
	mov	eax,dword [esp+04h+058h]
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_9130:
L_9115:
	lea	eax,[esp-055h+060h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~
	pop	ecx
	pop	ecx
L_9158:
L_9145:
L_9186:
L_9173:
L_9096:
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~ virtual
@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~:
; Line 1593:	    static size_type __max_size(true_type, const allocator_type& __a) 
; Line 1594:	            {return __a.max_size();} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc0h
L_9193:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_9196:
	mov	eax,03fffffffh
L_9213:
L_9194:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~ virtual
@$xc@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__wrap_iter$pH~@$bctr$qv virtual
@std@__1@#__wrap_iter$pH~@$bctr$qv:
; Line 1128:	     __wrap_iter() noexcept 
; Line 1130:	                : __i{} 
; Line 1132:	    { 
L_9219:
	mov	eax,dword [esp+04h]
; Line 1134:	
L_9220:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@$bctr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@$bctr$qv:
; Line 1953:	     __libcpp_compressed_pair_imp() {} 
	add	esp,byte 0ffffffech
L_9227:
	mov	eax,dword [esp+04h+014h]
L_9260:
L_9276:
L_9292:
L_9245:
L_9309:
L_9228:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_9315:
	mov	eax,dword [esp+04h]
L_9316:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_9323:
	mov	eax,dword [esp+04h]
L_9324:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_9331:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_9332:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@second$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@second$xqv:
; Line 2018:	     _T2_const_reference second() const noexcept {return __second_;} 
L_9339:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_9340:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@$bctr$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@$bctr$qv:
; Line 2315:	     __compressed_pair() {} 
	add	esp,byte 0ffffffe8h
L_9347:
	mov	eax,dword [esp+04h+018h]
L_9395:
L_9411:
L_9427:
L_9380:
L_9444:
L_9365:
L_9348:
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@first$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_9451:
	mov	eax,dword [esp+04h+04h]
L_9469:
L_9452:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@first$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_9475:
	mov	eax,dword [esp+04h+04h]
L_9493:
L_9476:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@second$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_9499:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_9517:
L_9500:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@second$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@second$xqv:
; Line 2374:	     _T2_const_reference second() const noexcept {return base::second();} 
	push	ecx
L_9523:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_9541:
L_9524:
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@$bctr$qR#basic_string$H#char_traits$H~#allocator$H~~ virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@$bctr$qR#basic_string$H#char_traits$H~#allocator$H~~:
	add	esp,byte 0ffffffc8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_9547:
	mov	esi,dword [esp+08h+048h]
	mov	ebx,dword [esp+04h+048h]
L_9565:
	mov	edi,ebx
	add	edi,byte 04h
	mov	eax,esi
	add	eax,byte 04h
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_9596:
	mov	ebp,eax
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bctr$qRx52@#basic_string$H#char_traits$H~#allocator$H~~@__long
	pop	ecx
	pop	ecx
	mov	eax,ebp
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bctr$qRx53@#basic_string$H#char_traits$H~#allocator$H~~@__short
	pop	ecx
	pop	ecx
	mov	eax,ebp
	push	eax
	push	edi
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bctr$qRx51@#basic_string$H#char_traits$H~#allocator$H~~@__raw
	pop	ecx
	pop	ecx
L_9627:
L_9643:
L_9612:
L_9581:
; Line 2076:	    __str.__zero(); 
	push	esi
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__zero$qv
	pop	ecx
; Line 2078:	
; Line 2079:	
; Line 2080:	
; Line 2082:	} 
	mov	eax,ebx
L_9548:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 038h
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@$bctr$qpxHui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@$bctr$qpxHui:
	add	esp,byte 0ffffffech
	push	ebx
	push	ebp
	push	esi
	push	edi
L_9651:
	mov	edi,dword [esp+0ch+024h]
	mov	esi,dword [esp+08h+024h]
	mov	ebx,dword [esp+04h+024h]
L_9669:
	mov	ebp,ebx
	add	ebp,byte 04h
	mov	eax,ebp
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bctr$qv
	pop	ecx
	mov	eax,ebp
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bctr$qv
	pop	ecx
	push	ebp
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bctr$qv
	pop	ecx
L_9715:
L_9731:
L_9700:
L_9685:
; Line 2023:	    ((void)0); 
; Line 2024:	    __init(__s, __n); 
	push	edi
	push	esi
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__init$qpxHui
	add	esp,byte 0ch
; Line 2026:	
; Line 2028:	} 
	mov	eax,ebx
L_9652:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@$bdtr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@$bdtr$qv:
	add	esp,byte 0ffffffa4h
	push	ebx
L_9739:
	mov	ebx,dword [esp+04h+060h]
; Line 2276:	
	mov	eax,ebx
	add	eax,byte 04h
L_9792:
L_9777:
	movzx	eax,byte [eax]
	and	eax,byte 01h
	setne	al
L_9762:
	and	al,al
	je	short	L_9742
; Line 2279:	        __alloc_traits::deallocate(__alloc(), __get_long_pointer(), __get_long_cap()); 
L_9855:
L_9840:
L_9825:
	mov	eax,ebx
	add	eax,byte 04h
L_9903:
L_9888:
	mov	eax,dword [eax+08h]
L_9873:
L_9951:
L_9936:
L_9921:
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_9969:
L_9810:
L_9742:
; Line 2280:	} 
	add	ebx,byte 04h
	mov	eax,ebx
L_10010:
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bdtr$qv
	pop	ecx
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bdtr$qv
	pop	ecx
	push	ebx
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bdtr$qv
	pop	ecx
L_10024:
L_9997:
L_9984:
L_10040:
L_9740:
	pop	ebx
	add	esp,byte 05ch
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@max_size$xqv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@max_size$xqv:
	add	esp,byte 0ffffff98h
L_10047:
	mov	eax,dword [esp+04h+068h]
; Line 3185:	    size_type __m = __alloc_traits::max_size(__alloc()); 
	add	eax,byte 04h
	add	eax,byte 0ch
L_10112:
L_10097:
L_10082:
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_10145:
L_10130:
	lea	eax,[esp-065h+070h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$H~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$H~
	pop	ecx
	pop	ecx
L_10173:
L_10160:
L_10201:
L_10188:
L_10067:
; Line 3187:	
; Line 3189:	    return __m - __alignment; 
	sub	eax,byte 010h
; Line 3191:	} 
L_10048:
	add	esp,byte 068h
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__is_long$xqv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__is_long$xqv:
; Line 1663:	    bool __is_long() const noexcept 
; Line 1664:	        {return bool(__r_.first().__s.__size_ & __short_mask);} 
	push	ecx
	push	ecx
L_10209:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_10242:
L_10227:
	movzx	eax,byte [eax]
	and	eax,byte 01h
	setne	al
L_10210:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__alloc$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__alloc$qv:
; Line 1677:	    allocator_type& __alloc() noexcept 
; Line 1678:	        {return __r_.second();} 
	push	ecx
	push	ecx
L_10250:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
	add	eax,byte 0ch
L_10283:
L_10268:
L_10251:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__alloc$xqv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__alloc$xqv:
; Line 1680:	    const allocator_type& __alloc() const noexcept 
; Line 1681:	        {return __r_.second();} 
	push	ecx
	push	ecx
L_10290:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
	add	eax,byte 0ch
L_10323:
L_10308:
L_10291:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_short_size$qui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_short_size$qui:
; Line 1704:	    void __set_short_size(size_type __s) noexcept 
; Line 1706:	
; Line 1708:	        {__r_.first().__s.__size_ = (unsigned char)(__s << 1);} 
	push	ecx
	push	ecx
L_10330:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	shl	ecx,01h
	add	eax,byte 04h
L_10363:
L_10348:
	mov	byte [eax],cl
L_10331:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_long_size$qui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_long_size$qui:
; Line 1722:	    void __set_long_size(size_type __s) noexcept 
; Line 1723:	        {__r_.first().__l.__size_ = __s;} 
	push	ecx
	push	ecx
L_10370:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_10403:
L_10388:
	mov	dword [eax+04h],ecx
L_10371:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_long_cap$qui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_long_cap$qui:
; Line 1732:	    void __set_long_cap(size_type __s) noexcept 
; Line 1733:	        {__r_.first().__l.__cap_  = __long_mask | __s;} 
	push	ecx
	push	ecx
L_10410:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	or	ecx,byte 01h
	add	eax,byte 04h
L_10443:
L_10428:
	mov	dword [eax],ecx
L_10411:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__get_long_cap$xqv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__get_long_cap$xqv:
; Line 1735:	    size_type __get_long_cap() const noexcept 
; Line 1736:	        {return __r_.first().__l.__cap_ & size_type(~__long_mask);} 
	push	ecx
	push	ecx
L_10450:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_10483:
L_10468:
	mov	eax,dword [eax]
	and	eax,dword 0fffffffeh
L_10451:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_long_pointer$qpH virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__set_long_pointer$qpH:
; Line 1739:	    void __set_long_pointer(pointer __p) noexcept 
; Line 1740:	        {__r_.first().__l.__data_ = __p;} 
	push	ecx
	push	ecx
L_10490:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_10523:
L_10508:
	mov	dword [eax+08h],ecx
L_10491:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__get_long_pointer$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__get_long_pointer$qv:
; Line 1742:	    pointer __get_long_pointer() noexcept 
; Line 1743:	        {return __r_.first().__l.__data_;} 
	push	ecx
	push	ecx
L_10530:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_10563:
L_10548:
	mov	eax,dword [eax+08h]
L_10531:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__get_short_pointer$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__get_short_pointer$qv:
; Line 1748:	    pointer __get_short_pointer() noexcept 
; Line 1749:	        {return pointer_traits<pointer>::pointer_to(__r_.first().__s.__data_[0]);} 
	add	esp,byte 0fffffff0h
L_10570:
	mov	eax,dword [esp+04h+010h]
	add	eax,byte 04h
L_10618:
L_10603:
	add	eax,dword 04h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_10635:
L_10588:
L_10571:
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__zero$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__zero$qv:
; Line 1761:	    void __zero() noexcept 
; Line 1762:	        { 
	push	ecx
	push	ecx
L_10642:
	mov	eax,dword [esp+04h+08h]
; Line 1763:	            size_type (&__a)[__n_words] = __r_.first().__r.__words; 
	add	eax,byte 04h
L_10683:
L_10668:
	mov	edx,eax
	xor	eax,eax
L_10645:
; Line 1765:	                __a[__i] = 0; 
	mov	dword [edx+eax*4],00h
L_10648:
	inc	eax
; Line 1764:	            for (unsigned __i = 0; __i < __n_words; ++__i) 
L_10646:
	cmp	eax,byte 03h
	jc	short	L_10645
L_10647:
; Line 1766:	        } 
L_10643:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__recommend$qui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__recommend$qui:
; Line 1773:	    static  
; Line 1774:	    size_type __recommend(size_type __s) noexcept 
; Line 1775:	        {return (__s < __min_cap ? __min_cap : 
	push	ecx
L_10690:
	mov	eax,dword [esp+04h+04h]
; Line 1777:	                            __alignment/sizeof(value_type) : 1 > (__s+1)) - 1;} 
	cmp	eax,byte 02h
	jnc	short	L_10695
	mov	eax,02h
	jmp	short	L_10696
L_10695:
	inc	eax
	add	eax,byte 03h
	and	eax,dword 0fffffffch
L_10710:
L_10696:
	dec	eax
L_10691:
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__init$qpxHui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__init$qpxHui:
	add	esp,0ffffff5ch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_10716:
	mov	ebp,dword [esp+0ch+0b4h]
	mov	ebx,dword [esp+08h+0b4h]
	mov	esi,dword [esp+04h+0b4h]
; Line 1976:	    if (__sz > max_size()) 
	mov	eax,esi
	push	eax
	call	@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@max_size$xqv
	pop	ecx
	cmp	ebp,eax
	jbe	short	L_10719
; Line 1977:	        this->__throw_length_error(); 
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#__basic_string_common$4bool$1&~@__throw_length_error$xqv]
	pop	ecx
L_10719:
; Line 1979:	    if (__sz < __min_cap) 
	cmp	ebp,byte 02h
	jnc	short	L_10724
; Line 1980:	    { 
; Line 1981:	        __set_short_size(__sz); 
	mov	eax,esi
	mov	ecx,ebp
	shl	ecx,01h
	add	eax,byte 04h
L_10781:
L_10766:
	mov	byte [eax],cl
L_10751:
; Line 1982:	        __p = __get_short_pointer(); 
	mov	eax,esi
	add	eax,byte 04h
L_10844:
L_10829:
	add	eax,dword 04h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_10861:
L_10814:
L_10799:
	jmp	short	L_10729
L_10724:
; Line 1984:	    else 
; Line 1985:	    { 
; Line 1986:	        size_type __cap = __recommend(__sz); 
	mov	eax,ebp
; Line 1777:	                            __alignment/sizeof(value_type) : 1 > (__s+1)) - 1;} 
	cmp	eax,byte 02h
	jnc	short	L_10881
	mov	eax,02h
	jmp	short	L_10882
L_10881:
	inc	eax
	add	eax,byte 03h
	and	eax,dword 0fffffffch
L_10896:
L_10882:
	dec	eax
L_10879:
	mov	edi,eax
; Line 1987:	        __p = __alloc_traits::allocate(__alloc(), __cap+1); 
L_10958:
L_10943:
L_10928:
	mov	eax,edi
	inc	eax
	shl	eax,02h
	push	eax
	call	@std@__1@__allocate$qui
	pop	ecx
L_10976:
L_10913:
; Line 1988:	        __set_long_pointer(__p); 
	mov	ecx,esi
	mov	edx,eax
	add	ecx,byte 04h
L_11023:
L_11008:
	mov	dword [ecx+08h],edx
L_10993:
; Line 1989:	        __set_long_cap(__cap+1); 
	mov	edx,esi
	mov	ecx,edi
	inc	ecx
	or	ecx,byte 01h
	add	edx,byte 04h
L_11071:
L_11056:
	mov	dword [edx],ecx
L_11041:
; Line 1990:	        __set_long_size(__sz); 
	mov	ecx,esi
	mov	edx,ebp
	add	ecx,byte 04h
L_11119:
L_11104:
	mov	dword [ecx+04h],edx
L_11089:
L_10729:
; Line 1992:	    traits_type::copy(std::__1::__to_raw_pointer(__p), __s, __sz); 
	mov	ecx,eax
; Line 1043:	    return __p; 
; Line 1044:	} 
L_11158:
	mov	esi,ecx
	mov	edx,ebx
	mov	ebx,ebp
; Line 922:	    ((void)0); 
; Line 923:	    char_type* __r = __s1; 
	mov	ecx,esi
	mov	dword [esp-014h+0b4h],ecx
	and	ebx,ebx
	je	short	L_11143
L_11125:
; Line 925:	        assign(*__s1, *__s2); 
	mov	edi,esi
	mov	ecx,edx
	mov	ecx,dword [ecx]
	mov	dword [edi],ecx
L_11174:
L_11128:
	dec	ebx
	add	esi,byte 04h
	add	edx,byte 04h
; Line 924:	    for (; __n; --__n, ++__s1, ++__s2) 
L_11126:
	and	ebx,ebx
	jne	short	L_11125
L_11127:
; Line 926:	    return __r; 
; Line 927:	} 
L_11143:
; Line 1993:	    traits_type::assign(__p[__sz], value_type()); 
	mov	ecx,ebp
	shl	ecx,02h
	add	eax,ecx
	xor	ecx,ecx
	mov	dword [esp-0a4h+0b4h],ecx
	mov	ecx,dword [esp-0a4h+0b4h]
	mov	dword [eax],ecx
L_11191:
; Line 1994:	} 
L_10717:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#char_traits$c~@assign$qrcrxc virtual
@std@__1@#char_traits$c~@assign$qrcrxc:
; Line 631:	    static inline void assign(char_type& __c1, const char_type& __c2) noexcept 
; Line 632:	        {__c1 = __c2;} 
L_11197:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	cl,byte [ecx]
	mov	byte [eax],cl
L_11198:
	ret
section code
	section vsc@std@__1@#char_traits$c~@eq$qcc virtual
@std@__1@#char_traits$c~@eq$qcc:
; Line 633:	    static inline constexpr bool eq(char_type __c1, char_type __c2) noexcept 
; Line 634:	            {return __c1 == __c2;} 
L_11205:
	mov	dl,byte [esp+08h]
	mov	al,byte [esp+04h]
	movsx	ecx,al
	mov	al,dl
	cbw
	cwde
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_11206:
	ret
section code
	section vsc@std@__1@#char_traits$c~@compare$qpxcpxcui virtual
@std@__1@#char_traits$c~@compare$qpxcpxcui:
; Line 638:	    static inline int compare(const char_type* __s1, const char_type* __s2, size_t __n) 
; Line 639:	        {return memcmp(__s1, __s2, __n);} 
L_11214:
	mov	edx,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	edx
	push	ecx
	push	eax
	call	dword [_memcmp]
	add	esp,byte 0ch
L_11215:
	ret
section code
	section vsc@std@__1@#char_traits$c~@length$qpxc virtual
@std@__1@#char_traits$c~@length$qpxc:
; Line 640:	    static inline size_t length(const char_type* __s) {return strlen(__s);} 
L_11222:
	mov	eax,dword [esp+04h]
	push	eax
	call	dword [_strlen]
	pop	ecx
L_11223:
	ret
section code
	section vsc@std@__1@#char_traits$c~@find$qpxcuirxc virtual
@std@__1@#char_traits$c~@find$qpxcuirxc:
; Line 641:	    static inline const char_type* find(const char_type* __s, size_t __n, const char_type& __a) 
; Line 642:	        {return (const char_type*)memchr(__s, to_int_type(__a), __n);} 
	push	ecx
L_11230:
	mov	ecx,dword [esp+0ch+04h]
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	push	edx
	mov	cl,byte [ecx]
	movzx	ecx,cl
L_11248:
	push	ecx
	push	eax
	call	dword [_memchr]
	add	esp,byte 0ch
L_11231:
	pop	ecx
	ret
section code
	section vsc@std@__1@#char_traits$c~@move$qpcpxcui virtual
@std@__1@#char_traits$c~@move$qpcpxcui:
; Line 643:	    static inline char_type* move(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 644:	        {return (char_type*)memmove(__s1, __s2, __n);} 
L_11254:
	mov	edx,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	edx
	push	ecx
	push	eax
	call	dword [_memmove]
	add	esp,byte 0ch
L_11255:
	ret
section code
	section vsc@std@__1@#char_traits$c~@copy$qpcpxcui virtual
@std@__1@#char_traits$c~@copy$qpcpxcui:
; Line 645:	    static inline char_type* copy(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 646:	        { 
L_11262:
	mov	edx,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 647:	            ((void)0); 
; Line 648:	            return (char_type*)memcpy(__s1, __s2, __n); 
	push	edx
	push	ecx
	push	eax
	call	dword [_memcpy]
	add	esp,byte 0ch
; Line 649:	        } 
L_11263:
	ret
section code
	section vsc@std@__1@#char_traits$c~@to_int_type$qc virtual
@std@__1@#char_traits$c~@to_int_type$qc:
; Line 657:	    static inline constexpr int_type to_int_type(char_type __c) noexcept 
; Line 658:	        {return int_type((unsigned char)__c);} 
L_11270:
	mov	al,byte [esp+04h]
	movzx	eax,al
L_11271:
	ret
section code
	section vsc@std@__1@#char_traits$c~@eof$qv virtual
@std@__1@#char_traits$c~@eof$qv:
; Line 661:	    static inline constexpr int_type  eof() noexcept 
; Line 662:	        {return int_type((-1));} 
L_11278:
	mov	eax,0ffffffffh
L_11279:
	ret
section code
	section vsc@std@__1@#allocator$c~@$bctr$qv virtual
@std@__1@#allocator$c~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_11286:
	mov	eax,dword [esp+04h]
L_11287:
	ret
section code
	section vsc@std@__1@#allocator$c~@allocate$quipxv virtual
@std@__1@#allocator$c~@allocate$quipxv:
; Line 1634:	        {return static_cast<pointer>(std::__1::__allocate(__n * sizeof(_Tp)));} 
	push	ecx
L_11294:
	mov	eax,dword [esp+08h+04h]
; Line 154:	  return ::operator new(__size); 
	push	eax
	call	@$bnew$qui
	pop	ecx
; Line 156:	
; Line 158:	} 
L_11312:
L_11295:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$c~@deallocate$qpcui virtual
@std@__1@#allocator$c~@deallocate$qpcui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_11318:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_11336:
L_11319:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$c~@max_size$xqv virtual
@std@__1@#allocator$c~@max_size$xqv:
; Line 1637:	     size_type max_size() const noexcept 
; Line 1638:	        {return size_type(~0) / sizeof(_Tp);} 
L_11342:
	mov	eax,0ffffffffh
L_11343:
	ret
section code
	section vsc@std@__1@#pointer_traits$pc~@pointer_to$qrc virtual
@std@__1@#pointer_traits$pc~@pointer_to$qrc:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_11350:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_11368:
L_11351:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$c~~@allocate$qr#allocator$c~ui virtual
@std@__1@#allocator_traits$#allocator$c~~@allocate$qr#allocator$c~ui:
; Line 1438:	    static pointer allocate(allocator_type& __a, size_type __n) 
; Line 1439:	        {return __a.allocate(__n);} 
	push	ecx
	push	ecx
	push	ecx
L_11374:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__allocate$qui
	pop	ecx
L_11392:
L_11375:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$c~~@deallocate$qr#allocator$c~pcui virtual
@std@__1@#allocator_traits$#allocator$c~~@deallocate$qr#allocator$c~pcui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_11398:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_11416:
L_11399:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$c~~@max_size$qrx#allocator$c~ virtual
@std@__1@#allocator_traits$#allocator$c~~@max_size$qrx#allocator$c~:
; Line 1490:	    static size_type max_size(const allocator_type& __a) noexcept 
; Line 1491:	        {return __max_size(__has_max_size<const allocator_type>(), __a);} 
	add	esp,byte 0ffffffa8h
L_11422:
	mov	eax,dword [esp+04h+058h]
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_11457:
L_11442:
	lea	eax,[esp-055h+060h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$c~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$c~
	pop	ecx
	pop	ecx
L_11485:
L_11472:
L_11513:
L_11500:
L_11423:
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$c~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$c~ virtual
@std@__1@#allocator_traits$#allocator$c~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$c~:
; Line 1593:	    static size_type __max_size(true_type, const allocator_type& __a) 
; Line 1594:	            {return __a.max_size();} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc0h
L_11520:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$c~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$c~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_11523:
	mov	eax,0ffffffffh
L_11540:
L_11521:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$c~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$c~ virtual
@$xc@std@__1@#allocator_traits$#allocator$c~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$c~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__wrap_iter$pc~@$bctr$qv virtual
@std@__1@#__wrap_iter$pc~@$bctr$qv:
; Line 1128:	     __wrap_iter() noexcept 
; Line 1130:	                : __i{} 
; Line 1132:	    { 
L_11546:
	mov	eax,dword [esp+04h]
; Line 1134:	
L_11547:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$qv:
; Line 1953:	     __libcpp_compressed_pair_imp() {} 
	add	esp,byte 0ffffffech
L_11554:
	mov	eax,dword [esp+04h+014h]
L_11587:
L_11603:
L_11619:
L_11572:
L_11636:
L_11555:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$q#allocator$c~ virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$q#allocator$c~:
; Line 1956:	     explicit __libcpp_compressed_pair_imp(_T2_param __t2) 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa4h
	push	ebx
L_11642:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$q#allocator$c~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_11645:
L_11677:
	mov	dword [ebp-03ch+014h],01h
L_11693:
	mov	dword [ebp-03ch+014h],02h
L_11709:
	mov	dword [ebp-03ch+014h],03h
L_11662:
	mov	dword [ebp-03ch+014h],04h
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_11741:
L_11726:
	mov	dword [ebp-03ch+014h],05h
; Line 1956:	     explicit __libcpp_compressed_pair_imp(_T2_param __t2) 
; Line 1957:	        : __second_(std::__1::forward<_T2_param>(__t2)) {} 
	mov	dword [ebp-03ch+014h],06h
L_11756:
	mov	eax,ebx
L_11643:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#allocator$c~ virtual
@$xt@#allocator$c~:
	dd	@std@__1@#allocator$c~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$q#allocator$c~ virtual
@$xc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$q#allocator$c~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#allocator$c~+0
	dd	0ch
	dd	00h
	dd	06h
	dd	00h
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_11762:
	mov	eax,dword [esp+04h]
L_11763:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_11770:
	mov	eax,dword [esp+04h]
L_11771:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_11778:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_11779:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@second$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@second$xqv:
; Line 2018:	     _T2_const_reference second() const noexcept {return __second_;} 
L_11786:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_11787:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$qv:
; Line 2315:	     __compressed_pair() {} 
	add	esp,byte 0ffffffe8h
L_11794:
	mov	eax,dword [esp+04h+018h]
L_11842:
L_11858:
L_11874:
L_11827:
L_11891:
L_11812:
L_11795:
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$q#allocator$c~ virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$q#allocator$c~:
; Line 2318:	     explicit __compressed_pair(_T2_param __t2) 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffbch
	push	ebx
L_11898:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$q#allocator$c~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_11901:
	add	esp,byte 0fffffffch
	mov	ecx,esp
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_11918:
	lea	eax,[ebp+0ch]
	push	eax
	push	ecx
	call	@std@__1@#allocator$c~@$bctr$qRx#allocator$c~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],01h
	mov	eax,ebx
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$q#allocator$c~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],02h
; Line 2318:	     explicit __compressed_pair(_T2_param __t2) 
; Line 2319:	        : base(std::__1::forward<_T2_param>(__t2)) {} 
	mov	dword [ebp-03ch+014h],03h
L_11932:
	mov	eax,ebx
L_11899:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$q#allocator$c~ virtual
@$xc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$q#allocator$c~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#allocator$c~+0
	dd	0ffffffb8h
	dd	01h
	dd	00h
	dd	0400h
	dd	@$xt@#allocator$c~+0
	dd	0ch
	dd	00h
	dd	03h
	dd	00h
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@first$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_11938:
	mov	eax,dword [esp+04h+04h]
L_11956:
L_11939:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@first$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_11962:
	mov	eax,dword [esp+04h+04h]
L_11980:
L_11963:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@second$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_11986:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_12004:
L_11987:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@second$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@second$xqv:
; Line 2374:	     _T2_const_reference second() const noexcept {return base::second();} 
	push	ecx
L_12010:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_12028:
L_12011:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$c~@$bdtr$qv virtual
@std@__1@#allocator$c~@$bdtr$qv:
L_12034:
L_12035:
	ret
section code
	section vsc@std@__1@#char_traits$C~@assign$qrCrxC virtual
@std@__1@#char_traits$C~@assign$qrCrxC:
; Line 676:	    static inline void assign(char_type& __c1, const char_type& __c2) noexcept 
; Line 677:	        {__c1 = __c2;} 
L_12040:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	cx,word [ecx]
	mov	word [eax],cx
L_12041:
	ret
section code
	section vsc@std@__1@#char_traits$C~@length$qpxC virtual
@std@__1@#char_traits$C~@length$qpxC:
; Line 685:	    static inline size_t length(const char_type* __s) 
; Line 686:	        {return wcslen(__s);} 
L_12048:
	mov	eax,dword [esp+04h]
	push	eax
	call	_wcslen
	pop	ecx
L_12049:
	ret
section code
	section vsc@std@__1@#char_traits$C~@move$qpCpxCui virtual
@std@__1@#char_traits$C~@move$qpCpxCui:
; Line 689:	    static inline char_type* move(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 690:	        {return (char_type*)wmemmove(__s1, __s2, __n);} 
L_12056:
	mov	edx,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	edx
	push	ecx
	push	eax
	call	_wmemmove
	add	esp,byte 0ch
L_12057:
	ret
section code
	section vsc@std@__1@#char_traits$C~@copy$qpCpxCui virtual
@std@__1@#char_traits$C~@copy$qpCpxCui:
; Line 691:	    static inline char_type* copy(char_type* __s1, const char_type* __s2, size_t __n) 
; Line 692:	        { 
L_12064:
	mov	edx,dword [esp+0ch]
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 693:	            ((void)0); 
; Line 694:	            return (char_type*)wmemcpy(__s1, __s2, __n); 
	push	edx
	push	ecx
	push	eax
	call	_wmemcpy
	add	esp,byte 0ch
; Line 695:	        } 
L_12065:
	ret
section code
	section vsc@std@__1@#char_traits$C~@eof$qv virtual
@std@__1@#char_traits$C~@eof$qv:
; Line 707:	    static inline constexpr int_type eof() noexcept 
; Line 708:	        {return int_type((wint_t)(-1));} 
L_12072:
	mov	eax,0ffffffffh
L_12073:
	ret
section code
	section vsc@std@__1@#allocator$C~@$bctr$qv virtual
@std@__1@#allocator$C~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_12080:
	mov	eax,dword [esp+04h]
L_12081:
	ret
section code
	section vsc@std@__1@#allocator$C~@allocate$quipxv virtual
@std@__1@#allocator$C~@allocate$quipxv:
; Line 1634:	        {return static_cast<pointer>(std::__1::__allocate(__n * sizeof(_Tp)));} 
	push	ecx
L_12088:
	mov	eax,dword [esp+08h+04h]
	shl	eax,01h
; Line 154:	  return ::operator new(__size); 
	push	eax
	call	@$bnew$qui
	pop	ecx
; Line 156:	
; Line 158:	} 
L_12106:
L_12089:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$C~@deallocate$qpCui virtual
@std@__1@#allocator$C~@deallocate$qpCui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_12112:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_12130:
L_12113:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$C~@max_size$xqv virtual
@std@__1@#allocator$C~@max_size$xqv:
; Line 1637:	     size_type max_size() const noexcept 
; Line 1638:	        {return size_type(~0) / sizeof(_Tp);} 
L_12136:
	mov	eax,07fffffffh
L_12137:
	ret
section code
	section vsc@std@__1@#pointer_traits$pC~@pointer_to$qrC virtual
@std@__1@#pointer_traits$pC~@pointer_to$qrC:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_12144:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_12162:
L_12145:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$C~~@allocate$qr#allocator$C~ui virtual
@std@__1@#allocator_traits$#allocator$C~~@allocate$qr#allocator$C~ui:
; Line 1438:	    static pointer allocate(allocator_type& __a, size_type __n) 
; Line 1439:	        {return __a.allocate(__n);} 
	push	ecx
	push	ecx
	push	ecx
L_12168:
	mov	eax,dword [esp+08h+0ch]
	shl	eax,01h
	push	eax
	call	@std@__1@__allocate$qui
	pop	ecx
L_12186:
L_12169:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$C~~@deallocate$qr#allocator$C~pCui virtual
@std@__1@#allocator_traits$#allocator$C~~@deallocate$qr#allocator$C~pCui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_12192:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_12210:
L_12193:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$C~~@max_size$qrx#allocator$C~ virtual
@std@__1@#allocator_traits$#allocator$C~~@max_size$qrx#allocator$C~:
; Line 1490:	    static size_type max_size(const allocator_type& __a) noexcept 
; Line 1491:	        {return __max_size(__has_max_size<const allocator_type>(), __a);} 
	add	esp,byte 0ffffffa8h
L_12216:
	mov	eax,dword [esp+04h+058h]
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_12251:
L_12236:
	lea	eax,[esp-055h+060h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$C~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$C~
	pop	ecx
	pop	ecx
L_12279:
L_12266:
L_12307:
L_12294:
L_12217:
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$qrx#allocator$C~ virtual
@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$qrx#allocator$C~:
; Line 1494:	    static allocator_type 
; Line 1495:	        select_on_container_copy_construction(const allocator_type& __a) 
; Line 1496:	            {return select_on_container_copy_construction( 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffff94h
	push	ebx
L_12314:
	mov	ebx,dword [ebp+0ch]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$qrx#allocator$C~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_12317:
; Line 1498:	                __a);} 
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_12364:
	mov	dword [ebp-03ch+014h],01h
L_12349:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-069h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-068h]
	push	eax
	mov	dword [ebp-03ch+014h],04h
	call	@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$q#integral_constant$4bool3_Tp$0&~rx#allocator$C~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_12334:
	mov	dword [ebp-03ch+014h],06h
	mov	eax,dword [ebp+08h]
	mov	dword [ebp-03ch+014h],07h
L_12380:
	mov	dword [ebp-03ch+014h],08h
L_12407:
L_12394:
L_12422:
L_12449:
L_12436:
L_12315:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#allocator$C~ virtual
@$xt@#allocator$C~:
	dd	@std@__1@#allocator$C~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__has_select_on_container_copy_construction$x#allocator$C~~ virtual
@$xt@#__has_select_on_container_copy_construction$x#allocator$C~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	073h
	db	065h
	db	06ch
	db	065h
	db	063h
	db	074h
	db	05fh
	db	06fh
	db	06eh
	db	05fh
	db	063h
	db	06fh
	db	06eh
	db	074h
	db	061h
	db	069h
	db	06eh
	db	065h
	db	072h
	db	05fh
	db	063h
	db	06fh
	db	070h
	db	079h
	db	05fh
	db	063h
	db	06fh
	db	06eh
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	06fh
	db	06eh
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$qrx#allocator$C~ virtual
@$xc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$qrx#allocator$C~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#allocator$C~+0
	dd	0ffffff98h
	dd	05h
	dd	09h
	dd	0400h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	0ffffff94h
	dd	03h
	dd	04h
	dd	0400h
	dd	@$xt@#__has_select_on_container_copy_construction$x#allocator$C~~+0
	dd	0ffffff97h
	dd	02h
	dd	0ah
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$C~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$C~ virtual
@std@__1@#allocator_traits$#allocator$C~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$C~:
; Line 1593:	    static size_type __max_size(true_type, const allocator_type& __a) 
; Line 1594:	            {return __a.max_size();} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc0h
L_12456:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$C~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$C~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_12459:
	mov	eax,07fffffffh
L_12476:
L_12457:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$C~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$C~ virtual
@$xc@std@__1@#allocator_traits$#allocator$C~~@__max_size$q#integral_constant$4bool3_Tp$1&~rx#allocator$C~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$q#integral_constant$4bool3_Tp$0&~rx#allocator$C~ virtual
@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$q#integral_constant$4bool3_Tp$0&~rx#allocator$C~:
; Line 1604:	    static allocator_type 
; Line 1605:	        select_on_container_copy_construction(false_type, const allocator_type& __a) 
; Line 1606:	            {return __a;} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffbch
L_12482:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$q#integral_constant$4bool3_Tp$0&~rx#allocator$C~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_12485:
L_12502:
	mov	dword [ebp-03ch+014h],01h
	mov	eax,dword [ebp+08h]
L_12483:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$q#integral_constant$4bool3_Tp$0&~rx#allocator$C~ virtual
@$xc@std@__1@#allocator_traits$#allocator$C~~@select_on_container_copy_construction$q#integral_constant$4bool3_Tp$0&~rx#allocator$C~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__wrap_iter$pC~@$bctr$qv virtual
@std@__1@#__wrap_iter$pC~@$bctr$qv:
; Line 1128:	     __wrap_iter() noexcept 
; Line 1130:	                : __i{} 
; Line 1132:	    { 
L_12508:
	mov	eax,dword [esp+04h]
; Line 1134:	
L_12509:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$qv:
; Line 1953:	     __libcpp_compressed_pair_imp() {} 
	add	esp,byte 0ffffffech
L_12516:
	mov	eax,dword [esp+04h+014h]
L_12549:
L_12565:
L_12581:
L_12534:
L_12598:
L_12517:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$q#allocator$C~ virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$q#allocator$C~:
; Line 1956:	     explicit __libcpp_compressed_pair_imp(_T2_param __t2) 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa4h
	push	ebx
L_12604:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$q#allocator$C~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_12607:
L_12639:
	mov	dword [ebp-03ch+014h],01h
L_12655:
	mov	dword [ebp-03ch+014h],02h
L_12671:
	mov	dword [ebp-03ch+014h],03h
L_12624:
	mov	dword [ebp-03ch+014h],04h
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_12703:
L_12688:
	mov	dword [ebp-03ch+014h],05h
; Line 1956:	     explicit __libcpp_compressed_pair_imp(_T2_param __t2) 
	mov	dword [ebp-03ch+014h],06h
L_12718:
	mov	eax,ebx
L_12605:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$q#allocator$C~ virtual
@$xc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$q#allocator$C~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#allocator$C~+0
	dd	0ch
	dd	00h
	dd	06h
	dd	00h
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_12724:
	mov	eax,dword [esp+04h]
L_12725:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_12732:
	mov	eax,dword [esp+04h]
L_12733:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_12740:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_12741:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@second$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@second$xqv:
; Line 2018:	     _T2_const_reference second() const noexcept {return __second_;} 
L_12748:
	mov	eax,dword [esp+04h]
	add	eax,byte 0ch
L_12749:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$qv:
; Line 2315:	     __compressed_pair() {} 
	add	esp,byte 0ffffffe8h
L_12756:
	mov	eax,dword [esp+04h+018h]
L_12804:
L_12820:
L_12836:
L_12789:
L_12853:
L_12774:
L_12757:
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$q#allocator$C~ virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$q#allocator$C~:
; Line 2318:	     explicit __compressed_pair(_T2_param __t2) 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffbch
	push	ebx
L_12860:
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$q#allocator$C~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_12863:
	add	esp,byte 0fffffffch
	mov	ecx,esp
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_12880:
	lea	eax,[ebp+0ch]
	push	eax
	push	ecx
	call	@std@__1@#allocator$C~@$bctr$qRx#allocator$C~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],01h
	mov	eax,ebx
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$q#allocator$C~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],02h
; Line 2318:	     explicit __compressed_pair(_T2_param __t2) 
	mov	dword [ebp-03ch+014h],03h
L_12894:
	mov	eax,ebx
L_12861:
	call	dword [@_RundownException$qv]
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$q#allocator$C~ virtual
@$xc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$q#allocator$C~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#allocator$C~+0
	dd	0ffffffb8h
	dd	01h
	dd	00h
	dd	0400h
	dd	@$xt@#allocator$C~+0
	dd	0ch
	dd	00h
	dd	03h
	dd	00h
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@first$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_12900:
	mov	eax,dword [esp+04h+04h]
L_12918:
L_12901:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@first$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_12924:
	mov	eax,dword [esp+04h+04h]
L_12942:
L_12925:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@second$qv virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_12948:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_12966:
L_12949:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@second$xqv virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@second$xqv:
; Line 2374:	     _T2_const_reference second() const noexcept {return base::second();} 
	push	ecx
L_12972:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 0ch
L_12990:
L_12973:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$C~@$bdtr$qv virtual
@std@__1@#allocator$C~@$bdtr$qv:
L_12996:
L_12997:
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__rep@$bctr$qv virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__rep@$bctr$qv:
	push	ecx
	push	ecx
	push	ecx
L_13002:
	mov	eax,dword [esp+04h+0ch]
L_13020:
L_13036:
L_13052:
L_13003:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$bctr$qv virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$bctr$qv:
L_13058:
	mov	eax,dword [esp+04h]
L_13059:
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$bctr$qv virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$bctr$qv:
L_13066:
	mov	eax,dword [esp+04h]
L_13067:
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$bctr$qv virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$bctr$qv:
L_13074:
	mov	eax,dword [esp+04h]
L_13075:
	ret
section code
	section vsc@std@__1@#__has_max_size$x#allocator$c~~@$bctr$qv virtual
@std@__1@#__has_max_size$x#allocator$c~~@$bctr$qv:
	push	ecx
L_13082:
	mov	eax,dword [esp+04h+04h]
L_13100:
L_13083:
	pop	ecx
	ret
section code
	section vsc@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv virtual
@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv:
L_13106:
	mov	eax,dword [esp+04h]
L_13107:
	ret
section code
	section vsc@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~ virtual
@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~:
L_13114:
	mov	eax,dword [esp+04h]
L_13115:
	ret
section code
	section vsc@std@__1@__libcpp_refstring@$bdtr$qv virtual
@std@__1@__libcpp_refstring@$bdtr$qv:
L_13122:
L_13123:
	ret
section code
	section vsc@std@__1@#addressof$c~$qrc virtual
@std@__1@#addressof$c~$qrc:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_13128:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_13129:
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@#__align_it$ui$16&~$qui virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@#__align_it$ui$16&~$qui:
; Line 1768:	    template <size_type __a> static 
; Line 1769:	         
; Line 1770:	        size_type __align_it(size_type __s) noexcept 
; Line 1771:	            {return __s + (__a-1) & ~(__a-1);} 
L_13136:
	mov	eax,dword [esp+04h]
	add	eax,byte 0fh
	and	eax,dword 0fffffff0h
L_13137:
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$c~$qpc virtual
@std@__1@#__to_raw_pointer$c~$qpc:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_13144:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_13145:
	ret
section code
	section vsc@std@__1@#move$#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~~$qR#__compressed_pair$n0#allocator$c~~ virtual
@std@__1@#move$#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~~$qR#__compressed_pair$n0#allocator$c~~:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_13152:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_13153:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$qRx#__compressed_pair$n0#allocator$c~~ virtual
@std@__1@#__compressed_pair$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~~@$bctr$qRx#__compressed_pair$n0#allocator$c~~:
	add	esp,byte 0ffffffc8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_13160:
	mov	edx,dword [esp+08h+048h]
	mov	ecx,dword [esp+04h+048h]
	mov	ebx,ecx
	mov	esi,edx
	mov	edx,ebx
	mov	edi,esi
	mov	eax,esi
	mov	ebp,dword [eax]
	mov	eax,edx
	mov	dword [eax],ebp
	mov	eax,dword [edi+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [edi+08h]
	mov	dword [edx+08h],eax
L_13208:
	mov	edx,esi
	mov	eax,esi
	mov	al,byte [eax]
	mov	byte [esp-08h+048h],al
	mov	edi,ebx
	mov	al,byte [esp-08h+048h]
	mov	byte [edi],al
	mov	eax,edx
	mov	al,byte [eax]
	mov	byte [esp-04h+048h],al
	mov	edi,ebx
	mov	al,byte [esp-04h+048h]
	mov	byte [edi],al
	mov	edi,ebx
	inc	edi
	mov	eax,edx
	inc	eax
	mov	dl,byte [eax+0ah]
	mov	byte [edi+0ah],dl
	mov	dx,word [eax+08h]
	mov	word [edi+08h],dx
	mov	edx,dword [eax+04h]
	mov	dword [edi+04h],edx
	mov	edx,dword [eax]
	mov	dword [edi],edx
L_13224:
	mov	eax,esi
	mov	edx,dword [eax+08h]
	mov	dword [ebx+08h],edx
	mov	edx,dword [eax+04h]
	mov	dword [ebx+04h],edx
	mov	edx,dword [eax]
	mov	dword [ebx],edx
L_13240:
L_13193:
L_13257:
L_13178:
	mov	eax,ecx
L_13161:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 038h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$c~i$0&~ virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$c#char_traits$c~#allocator$c~~@__rep#allocator$c~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$c~i$0&~:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_13264:
	mov	edx,dword [esp+08h+040h]
	mov	ecx,dword [esp+04h+040h]
	mov	ebx,ecx
	mov	esi,edx
	mov	edx,ebx
	mov	edi,esi
	mov	eax,esi
	mov	ebp,dword [eax]
	mov	eax,edx
	mov	dword [eax],ebp
	mov	eax,dword [edi+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [edi+08h]
	mov	dword [edx+08h],eax
L_13297:
	mov	edx,esi
	mov	eax,esi
	mov	al,byte [eax]
	mov	byte [esp-08h+040h],al
	mov	edi,ebx
	mov	al,byte [esp-08h+040h]
	mov	byte [edi],al
	mov	eax,edx
	mov	al,byte [eax]
	mov	byte [esp-04h+040h],al
	mov	edi,ebx
	mov	al,byte [esp-04h+040h]
	mov	byte [edi],al
	mov	edi,ebx
	inc	edi
	mov	eax,edx
	inc	eax
	mov	dl,byte [eax+0ah]
	mov	byte [edi+0ah],dl
	mov	dx,word [eax+08h]
	mov	word [edi+08h],dx
	mov	edx,dword [eax+04h]
	mov	dword [edi+04h],edx
	mov	edx,dword [eax]
	mov	dword [edi],edx
L_13313:
	mov	eax,esi
	mov	edx,dword [eax+08h]
	mov	dword [ebx+08h],edx
	mov	edx,dword [eax+04h]
	mov	dword [ebx+04h],edx
	mov	edx,dword [eax]
	mov	dword [ebx],edx
L_13329:
L_13282:
L_13346:
	mov	eax,ecx
L_13265:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__rep@$bctr$qRx51@#basic_string$c#char_traits$c~#allocator$c~~@__rep virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__rep@$bctr$qRx51@#basic_string$c#char_traits$c~#allocator$c~~@__rep:
	add	esp,byte 0ffffffe0h
	push	ebx
	push	esi
	push	edi
L_13352:
	mov	ebx,dword [esp+08h+02ch]
	mov	eax,dword [esp+04h+02ch]
	mov	edx,eax
	mov	esi,ebx
	mov	ecx,ebx
	mov	edi,dword [ecx]
	mov	ecx,edx
	mov	dword [ecx],edi
	mov	ecx,dword [esi+04h]
	mov	dword [edx+04h],ecx
	mov	ecx,dword [esi+08h]
	mov	dword [edx+08h],ecx
L_13370:
	mov	edx,ebx
	mov	cl,byte [edx]
	mov	byte [esp-08h+02ch],cl
	mov	esi,eax
	mov	cl,byte [esp-08h+02ch]
	mov	byte [esi],cl
	mov	cl,byte [edx]
	mov	byte [esp-04h+02ch],cl
	mov	esi,eax
	mov	cl,byte [esp-04h+02ch]
	mov	byte [esi],cl
	mov	esi,eax
	inc	esi
	mov	ecx,edx
	inc	ecx
	mov	dl,byte [ecx+0ah]
	mov	byte [esi+0ah],dl
	mov	dx,word [ecx+08h]
	mov	word [esi+08h],dx
	mov	edx,dword [ecx+04h]
	mov	dword [esi+04h],edx
	mov	edx,dword [ecx]
	mov	dword [esi],edx
L_13386:
	mov	ecx,ebx
	mov	edx,dword [ecx+08h]
	mov	dword [eax+08h],edx
	mov	edx,dword [ecx+04h]
	mov	dword [eax+04h],edx
	mov	edx,dword [ecx]
	mov	dword [eax],edx
L_13402:
L_13353:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$bctr$qRx52@#basic_string$c#char_traits$c~#allocator$c~~@__long virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$bctr$qRx52@#basic_string$c#char_traits$c~#allocator$c~~@__long:
	push	ebx
L_13408:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
L_13409:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$bctr$qRx53@#basic_string$c#char_traits$c~#allocator$c~~@__short virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$bctr$qRx53@#basic_string$c#char_traits$c~#allocator$c~~@__short:
	push	ebx
L_13416:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,ecx
	mov	dl,byte [edx]
	mov	ebx,eax
	mov	byte [ebx],dl
	mov	edx,ecx
	mov	dl,byte [edx]
	mov	ebx,eax
	mov	byte [ebx],dl
	mov	edx,eax
	inc	edx
	inc	ecx
	push	eax
	mov	al,byte [ecx+0ah]
	mov	byte [edx+0ah],al
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_13417:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$bctr$qRx51@#basic_string$c#char_traits$c~#allocator$c~~@__raw virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$bctr$qRx51@#basic_string$c#char_traits$c~#allocator$c~~@__raw:
L_13424:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,eax
	push	eax
	mov	eax,dword [ecx+08h]
	mov	dword [edx+08h],eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_13425:
	ret
section code
	section vsc@std@__1@#allocator$c~@$bctr$qrx#allocator$c~ virtual
@std@__1@#allocator$c~@$bctr$qrx#allocator$c~:
L_13432:
	mov	eax,dword [esp+04h]
L_13433:
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__rep@$bctr$qv virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__rep@$bctr$qv:
	push	ecx
	push	ecx
	push	ecx
L_13440:
	mov	eax,dword [esp+04h+0ch]
L_13458:
L_13474:
L_13490:
L_13441:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$bctr$qv virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$bctr$qv:
L_13496:
	mov	eax,dword [esp+04h]
L_13497:
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$bctr$qv virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$bctr$qv:
L_13504:
	mov	eax,dword [esp+04h]
L_13505:
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$bctr$qv virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$bctr$qv:
L_13512:
	mov	eax,dword [esp+04h]
L_13513:
	ret
section code
	section vsc@std@__1@#__has_max_size$x#allocator$C~~@$bctr$qv virtual
@std@__1@#__has_max_size$x#allocator$C~~@$bctr$qv:
	push	ecx
L_13520:
	mov	eax,dword [esp+04h+04h]
L_13538:
L_13521:
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$C~$qrC virtual
@std@__1@#addressof$C~$qrC:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_13544:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_13545:
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@#__align_it$ui$8&~$qui virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@#__align_it$ui$8&~$qui:
; Line 1768:	    template <size_type __a> static 
; Line 1769:	         
; Line 1770:	        size_type __align_it(size_type __s) noexcept 
; Line 1771:	            {return __s + (__a-1) & ~(__a-1);} 
L_13552:
	mov	eax,dword [esp+04h]
	add	eax,byte 07h
	and	eax,dword 0fffffff8h
L_13553:
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$C~$qpC virtual
@std@__1@#__to_raw_pointer$C~$qpC:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_13560:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_13561:
	ret
section code
	section vsc@std@__1@#move$#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~~$qR#__compressed_pair$n0#allocator$C~~ virtual
@std@__1@#move$#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~~$qR#__compressed_pair$n0#allocator$C~~:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_13568:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_13569:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$qRx#__compressed_pair$n0#allocator$C~~ virtual
@std@__1@#__compressed_pair$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~~@$bctr$qRx#__compressed_pair$n0#allocator$C~~:
	add	esp,byte 0ffffffcch
	push	ebx
	push	esi
	push	edi
L_13576:
	mov	eax,dword [esp+08h+040h]
	mov	esi,dword [esp+04h+040h]
	mov	ecx,esi
	mov	ebx,eax
	mov	edx,eax
	mov	edi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],edi
	mov	edx,dword [ebx+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [ebx+08h]
	mov	dword [ecx+08h],edx
L_13624:
	mov	ecx,esi
	mov	ebx,eax
	mov	dl,byte [ebx]
	mov	byte [esp-04h+040h],dl
	mov	byte [ecx],dl
	mov	dx,word [ebx]
	mov	word [ecx],dx
	mov	edx,ecx
	add	edx,byte 02h
	mov	ecx,ebx
	add	ecx,byte 02h
	push	eax
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_13640:
	mov	ecx,dword [eax+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [eax+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [eax]
	mov	dword [esi],ecx
L_13656:
L_13609:
L_13673:
L_13594:
	mov	eax,esi
L_13577:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$C~i$0&~ virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$C#char_traits$C~#allocator$C~~@__rep#allocator$C~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$C~i$0&~:
	add	esp,byte 0ffffffd4h
	push	ebx
	push	esi
	push	edi
L_13680:
	mov	eax,dword [esp+08h+038h]
	mov	esi,dword [esp+04h+038h]
	mov	ecx,esi
	mov	ebx,eax
	mov	edx,eax
	mov	edi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],edi
	mov	edx,dword [ebx+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [ebx+08h]
	mov	dword [ecx+08h],edx
L_13713:
	mov	ecx,esi
	mov	ebx,eax
	mov	dl,byte [ebx]
	mov	byte [esp-04h+038h],dl
	mov	byte [ecx],dl
	mov	dx,word [ebx]
	mov	word [ecx],dx
	mov	edx,ecx
	add	edx,byte 02h
	mov	ecx,ebx
	add	ecx,byte 02h
	push	eax
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_13729:
	mov	ecx,dword [eax+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [eax+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [eax]
	mov	dword [esi],ecx
L_13745:
L_13698:
L_13762:
	mov	eax,esi
L_13681:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 02ch
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__rep@$bctr$qRx51@#basic_string$C#char_traits$C~#allocator$C~~@__rep virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__rep@$bctr$qRx51@#basic_string$C#char_traits$C~#allocator$C~~@__rep:
	add	esp,byte 0ffffffe4h
	push	ebx
	push	esi
	push	edi
L_13768:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
	mov	edx,eax
	mov	esi,ecx
	mov	ebx,ecx
	mov	edi,dword [ebx]
	mov	ebx,edx
	mov	dword [ebx],edi
	mov	ebx,dword [esi+04h]
	mov	dword [edx+04h],ebx
	mov	ebx,dword [esi+08h]
	mov	dword [edx+08h],ebx
L_13786:
	mov	ebx,ecx
	mov	dl,byte [ebx]
	mov	byte [esp-04h+028h],dl
	mov	esi,eax
	mov	dl,byte [esp-04h+028h]
	mov	byte [esi],dl
	mov	si,word [ebx]
	mov	edx,eax
	mov	word [edx],si
	mov	esi,eax
	add	esi,byte 02h
	mov	edx,ebx
	add	edx,byte 02h
	push	eax
	mov	ax,word [edx+08h]
	mov	word [esi+08h],ax
	mov	eax,dword [edx+04h]
	mov	dword [esi+04h],eax
	mov	eax,dword [edx]
	mov	dword [esi],eax
	pop	eax
L_13802:
	mov	edx,dword [ecx+08h]
	mov	dword [eax+08h],edx
	mov	edx,dword [ecx+04h]
	mov	dword [eax+04h],edx
	mov	edx,dword [ecx]
	mov	dword [eax],edx
L_13818:
L_13769:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 01ch
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$bctr$qRx52@#basic_string$C#char_traits$C~#allocator$C~~@__long virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$bctr$qRx52@#basic_string$C#char_traits$C~#allocator$C~~@__long:
	push	ebx
L_13824:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
L_13825:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$bctr$qRx53@#basic_string$C#char_traits$C~#allocator$C~~@__short virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$bctr$qRx53@#basic_string$C#char_traits$C~#allocator$C~~@__short:
	push	ebx
L_13832:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,ecx
	mov	dl,byte [edx]
	mov	ebx,eax
	mov	byte [ebx],dl
	mov	edx,ecx
	mov	bx,word [edx]
	mov	edx,eax
	mov	word [edx],bx
	mov	edx,eax
	add	edx,byte 02h
	add	ecx,byte 02h
	push	eax
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_13833:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$bctr$qRx51@#basic_string$C#char_traits$C~#allocator$C~~@__raw virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$bctr$qRx51@#basic_string$C#char_traits$C~#allocator$C~~@__raw:
L_13840:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,eax
	push	eax
	mov	eax,dword [ecx+08h]
	mov	dword [edx+08h],eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_13841:
	ret
section code
	section vsc@std@__1@#allocator$C~@$bctr$qrx#allocator$C~ virtual
@std@__1@#allocator$C~@$bctr$qrx#allocator$C~:
L_13848:
	mov	eax,dword [esp+04h]
L_13849:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__rep@$bctr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__rep@$bctr$qv:
	push	ecx
	push	ecx
	push	ecx
L_13856:
	mov	eax,dword [esp+04h+0ch]
L_13874:
L_13890:
L_13906:
L_13857:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bctr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bctr$qv:
L_13912:
	mov	eax,dword [esp+04h]
L_13913:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bctr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bctr$qv:
L_13920:
	mov	eax,dword [esp+04h]
L_13921:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bctr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bctr$qv:
L_13928:
	mov	eax,dword [esp+04h]
L_13929:
	ret
section code
	section vsc@std@__1@#__has_max_size$x#allocator$h~~@$bctr$qv virtual
@std@__1@#__has_max_size$x#allocator$h~~@$bctr$qv:
	push	ecx
L_13936:
	mov	eax,dword [esp+04h+04h]
L_13954:
L_13937:
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$h~$qrh virtual
@std@__1@#addressof$h~$qrh:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_13960:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_13961:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@#__align_it$ui$8&~$qui virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@#__align_it$ui$8&~$qui:
; Line 1768:	    template <size_type __a> static 
; Line 1769:	         
; Line 1770:	        size_type __align_it(size_type __s) noexcept 
; Line 1771:	            {return __s + (__a-1) & ~(__a-1);} 
L_13968:
	mov	eax,dword [esp+04h]
	add	eax,byte 07h
	and	eax,dword 0fffffff8h
L_13969:
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$h~$qph virtual
@std@__1@#__to_raw_pointer$h~$qph:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_13976:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_13977:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bdtr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bdtr$qv:
L_13984:
L_13985:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bdtr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bdtr$qv:
L_13990:
L_13991:
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bdtr$qv virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bdtr$qv:
L_13996:
L_13997:
	ret
section code
	section vsc@std@__1@#move$#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~~$qR#__compressed_pair$n0#allocator$h~~ virtual
@std@__1@#move$#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~~$qR#__compressed_pair$n0#allocator$h~~:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_14002:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_14003:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@$bctr$qRx#__compressed_pair$n0#allocator$h~~ virtual
@std@__1@#__compressed_pair$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~~@$bctr$qRx#__compressed_pair$n0#allocator$h~~:
	add	esp,byte 0ffffffcch
	push	ebx
	push	esi
	push	edi
L_14010:
	mov	eax,dword [esp+08h+040h]
	mov	esi,dword [esp+04h+040h]
	mov	ecx,esi
	mov	ebx,eax
	mov	edx,eax
	mov	edi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],edi
	mov	edx,dword [ebx+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [ebx+08h]
	mov	dword [ecx+08h],edx
L_14058:
	mov	ecx,esi
	mov	ebx,eax
	mov	dl,byte [ebx]
	mov	byte [esp-04h+040h],dl
	mov	byte [ecx],dl
	mov	dx,word [ebx]
	mov	word [ecx],dx
	mov	edx,ecx
	add	edx,byte 02h
	mov	ecx,ebx
	add	ecx,byte 02h
	push	eax
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14074:
	mov	ecx,dword [eax+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [eax+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [eax]
	mov	dword [esi],ecx
L_14090:
L_14043:
L_14107:
L_14028:
	mov	eax,esi
L_14011:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$h~i$0&~ virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$h#char_traits$h~#allocator$h~~@__rep#allocator$h~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$h~i$0&~:
	add	esp,byte 0ffffffd4h
	push	ebx
	push	esi
	push	edi
L_14114:
	mov	eax,dword [esp+08h+038h]
	mov	esi,dword [esp+04h+038h]
	mov	ecx,esi
	mov	ebx,eax
	mov	edx,eax
	mov	edi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],edi
	mov	edx,dword [ebx+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [ebx+08h]
	mov	dword [ecx+08h],edx
L_14147:
	mov	ecx,esi
	mov	ebx,eax
	mov	dl,byte [ebx]
	mov	byte [esp-04h+038h],dl
	mov	byte [ecx],dl
	mov	dx,word [ebx]
	mov	word [ecx],dx
	mov	edx,ecx
	add	edx,byte 02h
	mov	ecx,ebx
	add	ecx,byte 02h
	push	eax
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14163:
	mov	ecx,dword [eax+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [eax+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [eax]
	mov	dword [esi],ecx
L_14179:
L_14132:
L_14196:
	mov	eax,esi
L_14115:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 02ch
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__rep@$bctr$qRx51@#basic_string$h#char_traits$h~#allocator$h~~@__rep virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__rep@$bctr$qRx51@#basic_string$h#char_traits$h~#allocator$h~~@__rep:
	add	esp,byte 0ffffffe4h
	push	ebx
	push	esi
	push	edi
L_14202:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
	mov	edx,eax
	mov	esi,ecx
	mov	ebx,ecx
	mov	edi,dword [ebx]
	mov	ebx,edx
	mov	dword [ebx],edi
	mov	ebx,dword [esi+04h]
	mov	dword [edx+04h],ebx
	mov	ebx,dword [esi+08h]
	mov	dword [edx+08h],ebx
L_14220:
	mov	ebx,ecx
	mov	dl,byte [ebx]
	mov	byte [esp-04h+028h],dl
	mov	esi,eax
	mov	dl,byte [esp-04h+028h]
	mov	byte [esi],dl
	mov	si,word [ebx]
	mov	edx,eax
	mov	word [edx],si
	mov	esi,eax
	add	esi,byte 02h
	mov	edx,ebx
	add	edx,byte 02h
	push	eax
	mov	ax,word [edx+08h]
	mov	word [esi+08h],ax
	mov	eax,dword [edx+04h]
	mov	dword [esi+04h],eax
	mov	eax,dword [edx]
	mov	dword [esi],eax
	pop	eax
L_14236:
	mov	edx,dword [ecx+08h]
	mov	dword [eax+08h],edx
	mov	edx,dword [ecx+04h]
	mov	dword [eax+04h],edx
	mov	edx,dword [ecx]
	mov	dword [eax],edx
L_14252:
L_14203:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 01ch
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bctr$qRx52@#basic_string$h#char_traits$h~#allocator$h~~@__long virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__long@$bctr$qRx52@#basic_string$h#char_traits$h~#allocator$h~~@__long:
	push	ebx
L_14258:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
L_14259:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bctr$qRx53@#basic_string$h#char_traits$h~#allocator$h~~@__short virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__short@$bctr$qRx53@#basic_string$h#char_traits$h~#allocator$h~~@__short:
	push	ebx
L_14266:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,ecx
	mov	dl,byte [edx]
	mov	ebx,eax
	mov	byte [ebx],dl
	mov	edx,ecx
	mov	bx,word [edx]
	mov	edx,eax
	mov	word [edx],bx
	mov	edx,eax
	add	edx,byte 02h
	add	ecx,byte 02h
	push	eax
	mov	ax,word [ecx+08h]
	mov	word [edx+08h],ax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14267:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bctr$qRx51@#basic_string$h#char_traits$h~#allocator$h~~@__raw virtual
@std@__1@#basic_string$h#char_traits$h~#allocator$h~~@__raw@$bctr$qRx51@#basic_string$h#char_traits$h~#allocator$h~~@__raw:
L_14274:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,eax
	push	eax
	mov	eax,dword [ecx+08h]
	mov	dword [edx+08h],eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14275:
	ret
section code
	section vsc@std@__1@#allocator$h~@$bctr$qrx#allocator$h~ virtual
@std@__1@#allocator$h~@$bctr$qrx#allocator$h~:
L_14282:
	mov	eax,dword [esp+04h]
L_14283:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__rep@$bctr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__rep@$bctr$qv:
	push	ecx
	push	ecx
	push	ecx
L_14290:
	mov	eax,dword [esp+04h+0ch]
L_14308:
L_14324:
L_14340:
L_14291:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bctr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bctr$qv:
L_14346:
	mov	eax,dword [esp+04h]
L_14347:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bctr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bctr$qv:
L_14354:
	mov	eax,dword [esp+04h]
L_14355:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bctr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bctr$qv:
L_14362:
	mov	eax,dword [esp+04h]
L_14363:
	ret
section code
	section vsc@std@__1@#__has_max_size$x#allocator$H~~@$bctr$qv virtual
@std@__1@#__has_max_size$x#allocator$H~~@$bctr$qv:
	push	ecx
L_14370:
	mov	eax,dword [esp+04h+04h]
L_14388:
L_14371:
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$H~$qrH virtual
@std@__1@#addressof$H~$qrH:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_14394:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_14395:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@#__align_it$ui$4&~$qui virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@#__align_it$ui$4&~$qui:
; Line 1768:	    template <size_type __a> static 
; Line 1769:	         
; Line 1770:	        size_type __align_it(size_type __s) noexcept 
; Line 1771:	            {return __s + (__a-1) & ~(__a-1);} 
L_14402:
	mov	eax,dword [esp+04h]
	add	eax,byte 03h
	and	eax,dword 0fffffffch
L_14403:
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$H~$qpH virtual
@std@__1@#__to_raw_pointer$H~$qpH:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_14410:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_14411:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bdtr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bdtr$qv:
L_14418:
L_14419:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bdtr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bdtr$qv:
L_14424:
L_14425:
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bdtr$qv virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bdtr$qv:
L_14430:
L_14431:
	ret
section code
	section vsc@std@__1@#move$#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~~$qR#__compressed_pair$n0#allocator$H~~ virtual
@std@__1@#move$#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~~$qR#__compressed_pair$n0#allocator$H~~:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_14436:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_14437:
	ret
section code
	section vsc@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@$bctr$qRx#__compressed_pair$n0#allocator$H~~ virtual
@std@__1@#__compressed_pair$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~~@$bctr$qRx#__compressed_pair$n0#allocator$H~~:
	add	esp,byte 0ffffffcch
	push	ebx
	push	esi
	push	edi
L_14444:
	mov	eax,dword [esp+08h+040h]
	mov	esi,dword [esp+04h+040h]
	mov	ecx,esi
	mov	ebx,eax
	mov	edx,eax
	mov	edi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],edi
	mov	edx,dword [ebx+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [ebx+08h]
	mov	dword [ecx+08h],edx
L_14492:
	mov	ecx,esi
	mov	ebx,eax
	mov	dl,byte [ebx]
	mov	byte [esp-04h+040h],dl
	mov	byte [ecx],dl
	mov	edx,dword [ebx]
	mov	dword [ecx],edx
	mov	edx,ecx
	add	edx,byte 04h
	mov	ecx,ebx
	add	ecx,byte 04h
	push	eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14508:
	mov	ecx,dword [eax+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [eax+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [eax]
	mov	dword [esi],ecx
L_14524:
L_14477:
L_14541:
L_14462:
	mov	eax,esi
L_14445:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$H~i$0&~ virtual
@std@__1@#__libcpp_compressed_pair_imp$51@#basic_string$H#char_traits$H~#allocator$H~~@__rep#allocator$H~i$0&~@$bctr$qRx#__libcpp_compressed_pair_imp$n0#allocator$H~i$0&~:
	add	esp,byte 0ffffffd4h
	push	ebx
	push	esi
	push	edi
L_14548:
	mov	eax,dword [esp+08h+038h]
	mov	esi,dword [esp+04h+038h]
	mov	ecx,esi
	mov	ebx,eax
	mov	edx,eax
	mov	edi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],edi
	mov	edx,dword [ebx+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [ebx+08h]
	mov	dword [ecx+08h],edx
L_14581:
	mov	ecx,esi
	mov	ebx,eax
	mov	dl,byte [ebx]
	mov	byte [esp-04h+038h],dl
	mov	byte [ecx],dl
	mov	edx,dword [ebx]
	mov	dword [ecx],edx
	mov	edx,ecx
	add	edx,byte 04h
	mov	ecx,ebx
	add	ecx,byte 04h
	push	eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14597:
	mov	ecx,dword [eax+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [eax+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [eax]
	mov	dword [esi],ecx
L_14613:
L_14566:
L_14630:
	mov	eax,esi
L_14549:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 02ch
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__rep@$bctr$qRx51@#basic_string$H#char_traits$H~#allocator$H~~@__rep virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__rep@$bctr$qRx51@#basic_string$H#char_traits$H~#allocator$H~~@__rep:
	add	esp,byte 0ffffffe4h
	push	ebx
	push	esi
	push	edi
L_14636:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
	mov	edx,eax
	mov	esi,ecx
	mov	ebx,ecx
	mov	edi,dword [ebx]
	mov	ebx,edx
	mov	dword [ebx],edi
	mov	ebx,dword [esi+04h]
	mov	dword [edx+04h],ebx
	mov	ebx,dword [esi+08h]
	mov	dword [edx+08h],ebx
L_14654:
	mov	ebx,ecx
	mov	dl,byte [ebx]
	mov	byte [esp-04h+028h],dl
	mov	esi,eax
	mov	dl,byte [esp-04h+028h]
	mov	byte [esi],dl
	mov	esi,dword [ebx]
	mov	edx,eax
	mov	dword [edx],esi
	mov	esi,eax
	add	esi,byte 04h
	mov	edx,ebx
	add	edx,byte 04h
	push	eax
	mov	eax,dword [edx+04h]
	mov	dword [esi+04h],eax
	mov	eax,dword [edx]
	mov	dword [esi],eax
	pop	eax
L_14670:
	mov	edx,dword [ecx+08h]
	mov	dword [eax+08h],edx
	mov	edx,dword [ecx+04h]
	mov	dword [eax+04h],edx
	mov	edx,dword [ecx]
	mov	dword [eax],edx
L_14686:
L_14637:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 01ch
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bctr$qRx52@#basic_string$H#char_traits$H~#allocator$H~~@__long virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__long@$bctr$qRx52@#basic_string$H#char_traits$H~#allocator$H~~@__long:
	push	ebx
L_14692:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
L_14693:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bctr$qRx53@#basic_string$H#char_traits$H~#allocator$H~~@__short virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__short@$bctr$qRx53@#basic_string$H#char_traits$H~#allocator$H~~@__short:
	push	ebx
L_14700:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,ecx
	mov	dl,byte [edx]
	mov	ebx,eax
	mov	byte [ebx],dl
	mov	edx,ecx
	mov	ebx,dword [edx]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	edx,eax
	add	edx,byte 04h
	add	ecx,byte 04h
	push	eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14701:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bctr$qRx51@#basic_string$H#char_traits$H~#allocator$H~~@__raw virtual
@std@__1@#basic_string$H#char_traits$H~#allocator$H~~@__raw@$bctr$qRx51@#basic_string$H#char_traits$H~#allocator$H~~@__raw:
L_14708:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,eax
	push	eax
	mov	eax,dword [ecx+08h]
	mov	dword [edx+08h],eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx]
	mov	dword [edx],eax
	pop	eax
L_14709:
	ret
section code
	section vsc@std@__1@#allocator$H~@$bctr$qrx#allocator$H~ virtual
@std@__1@#allocator$H~@$bctr$qrx#allocator$H~:
L_14716:
	mov	eax,dword [esp+04h]
L_14717:
	ret
section code
	section vsc@std@#initializer_list$4bool~@begin$xqv virtual
@std@#initializer_list$4bool~@begin$xqv:
; Line 22:	         const _TYPE* begin() const throw() { return _M_start; }  
L_14724:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax]
L_14725:
	ret
section code
	section vsc@std@#initializer_list$4bool~@end$xqv virtual
@std@#initializer_list$4bool~@end$xqv:
; Line 23:	         const _TYPE* end() const throw() { return _M_end; } 
L_14732:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_14733:
	ret
section code
	section vsc@std@__1@#__has_select_on_container_copy_construction$6_Alloc~@$bctr$qv virtual
@std@__1@#__has_select_on_container_copy_construction$6_Alloc~@$bctr$qv:
	push	ecx
L_14740:
	mov	eax,dword [esp+04h+04h]
L_14758:
L_14741:
	pop	ecx
	ret
section code
	section vsc@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qv virtual
@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qv:
L_14764:
	mov	eax,dword [esp+04h]
L_14765:
	ret
section code
	section vsc@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~ virtual
@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~:
L_14772:
	mov	eax,dword [esp+04h]
L_14773:
	ret
section code
	section vsc@std@__1@#__compressed_pair$3_T13_T2~@$bctr$qr#__compressed_pair$n0n1~ virtual
@std@__1@#__compressed_pair$3_T13_T2~@$bctr$qr#__compressed_pair$n0n1~:
L_14780:
	mov	eax,dword [esp+04h]
L_14781:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_14788:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
; Line 648:	    {} 
L_14789:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_14796:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
; Line 723:	    {} 
L_14797:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_14804:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
; Line 648:	    {} 
L_14822:
L_14805:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~2kw~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~n0~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_14828:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
; Line 723:	    {} 
L_14846:
L_14829:
	pop	ecx
	ret
section code
	section vsc@std@__1@#less$#basic_string$c#char_traits$c~#allocator$c~~~@$bctr$qv virtual
@std@__1@#less$#basic_string$c#char_traits$c~#allocator$c~~~@$bctr$qv:
	push	ecx
L_14852:
	mov	eax,dword [esp+04h+04h]
L_14870:
L_14853:
	pop	ecx
	ret
section code
	section vsc@std@__1@#binary_function$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~4bool~@$bctr$qv virtual
@std@__1@#binary_function$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~4bool~@$bctr$qv:
L_14876:
	mov	eax,dword [esp+04h]
L_14877:
	ret
section code
	section vsc@Token@IsNumeric$xqv virtual
@Token@IsNumeric$xqv:
; Line 52:	    virtual bool IsNumeric() const { return false; } 
L_14884:
	xor	al,al
L_14885:
	ret
section code
	section vsc@Token@IsKeyword$xqv virtual
@Token@IsKeyword$xqv:
; Line 54:	    virtual bool IsKeyword() const { return false; } 
L_14892:
	xor	al,al
L_14893:
	ret
section code
	section vsc@Token@IsString$xqv virtual
@Token@IsString$xqv:
; Line 56:	    virtual bool IsString() const { return false; } 
L_14900:
	xor	al,al
L_14901:
	ret
section code
	section vsc@Token@IsIdentifier$xqv virtual
@Token@IsIdentifier$xqv:
; Line 57:	    virtual bool IsIdentifier() const { return false; } 
L_14908:
	xor	al,al
L_14909:
	ret
section code
	section vsc@Token@GetString$xqv virtual
@Token@GetString$xqv:
; Line 61:	    virtual std::wstring GetString() const { return L""; } 
L_14916:
	mov	eax,dword [esp+04h]
	push	dword L_994
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxC]
	pop	ecx
	pop	ecx
	mov	eax,dword [esp+04h]
L_14917:
	ret
section code
	section vsc@Token@GetRawString$xqv virtual
@Token@GetRawString$xqv:
; Line 62:	    virtual std::wstring GetRawString() const { return L""; } 
L_14924:
	mov	eax,dword [esp+04h]
	push	dword L_994
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxC]
	pop	ecx
	pop	ecx
	mov	eax,dword [esp+04h]
L_14925:
	ret
section code
	section vsc@Token@GetKeyword$xqv virtual
@Token@GetKeyword$xqv:
; Line 66:	    virtual kw GetKeyword() const { return (kw)-1; } 
L_14932:
	mov	eax,0ffffffffh
L_14933:
	ret
section code
	section vsc@Token@GetId$xqv virtual
@Token@GetId$xqv:
; Line 67:	    virtual const std::string& GetId() const 
; Line 68:	    { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_14940:
	push	dword @$xc@Token@GetId$xqv
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_14943:
; Line 69:	        static std::string aa; 
	cmp	dword [_$anontemp226],byte 00h
	jne	short	L_14947
	push	dword @Token@GetId$xqv_aa_0
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-03ch+014h],01h
	inc	dword [_$anontemp226]
	mov	eax,dword [_$anontemp226]
L_14947:
; Line 70:	        return aa; 
	mov	eax,@Token@GetId$xqv_aa_0
; Line 71:	    } 
L_14941:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@Token@GetId$xqv virtual
@$xc@Token@GetId$xqv:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__less$uiui~@$bctr$qv virtual
@std@__1@#__less$uiui~@$bctr$qv:
L_14951:
	mov	eax,dword [esp+04h]
L_14952:
	ret
section code
	section vsc@std@__1@#min$ui#__less$uiui~~$qrxuirxui#__less$uiui~ virtual
@std@__1@#min$ui#__less$uiui~~$qrxuirxui#__less$uiui~:
; Line 2571:	inline  constexpr 
; Line 2572:	const _Tp& 
; Line 2573:	min(const _Tp& __a, const _Tp& __b, _Compare __comp) 
; Line 2574:	{ 
	add	esp,byte 0ffffffech
	push	ebx
L_14959:
	mov	ecx,dword [esp+08h+018h]
	mov	eax,dword [esp+04h+018h]
; Line 2575:	    return __comp(__b, __a) ? __b : __a; 
	mov	ebx,ecx
	mov	edx,eax
	mov	ebx,dword [ebx]
	mov	edx,dword [edx]
L_14979:
	cmp	ebx,edx
	jc	short	L_14965
L_14964:
	mov	ecx,eax
L_14965:
L_14993:
	mov	eax,ecx
; Line 2576:	} 
L_15007:
L_14960:
	pop	ebx
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__less$uiui~@$bctr$qRx#__less$uiui~ virtual
@std@__1@#__less$uiui~@$bctr$qRx#__less$uiui~:
L_15013:
	mov	eax,dword [esp+04h]
L_15014:
	ret
section code
	section vsc@std@__1@#min$ui~$qrxuirxui virtual
@std@__1@#min$ui~$qrxuirxui:
; Line 2579:	inline  constexpr 
; Line 2580:	const _Tp& 
; Line 2581:	min(const _Tp& __a, const _Tp& __b) 
; Line 2582:	{ 
	add	esp,byte 0fffffff0h
	push	ebx
	push	esi
L_15021:
	mov	esi,dword [esp+08h+018h]
	mov	ebx,dword [esp+04h+018h]
; Line 2583:	    return std::__1::min(__a, __b, __less<_Tp>()); 
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_15039:
	lea	eax,[esp-010h+01ch]
	push	eax
	push	ecx
	call	@std@__1@#__less$uiui~@$bctr$qRx#__less$uiui~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#min$ui#__less$uiui~~$qrxuirxui#__less$uiui~
	add	esp,byte 0ch
L_15053:
; Line 2584:	} 
L_15067:
L_15022:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#pointer_traits$pxc~@pointer_to$qrxc virtual
@std@__1@#pointer_traits$pxc~@pointer_to$qrxc:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_15073:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_15091:
L_15074:
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$xc~$qrxc virtual
@std@__1@#addressof$xc~$qrxc:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_15097:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_15098:
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$xc~$qpxc virtual
@std@__1@#__to_raw_pointer$xc~$qpxc:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_15105:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_15106:
	ret
section code
	section vsc@std@__1@#$bequ$c#char_traits$c~#allocator$c~~$qrx#basic_string$c#char_traits$c~#allocator$c~~pxc virtual
@std@__1@#$bequ$c#char_traits$c~#allocator$c~~$qrx#basic_string$c#char_traits$c~#allocator$c~~pxc:
; Line 3782:	inline  
; Line 3783:	bool 
; Line 3784:	operator==(const basic_string<_CharT,_Traits,_Allocator>& __lhs, 
; Line 3785:	           const _CharT* __rhs) noexcept 
; Line 3786:	{ 
L_15113:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 3787:	    return __lhs.compare(__rhs) == 0; 
	push	ecx
	push	eax
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@compare$xqpxc]
	pop	ecx
	pop	ecx
	and	eax,eax
	sete	al
	and	eax,byte 01h
	setne	al
; Line 3788:	} 
L_15114:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$6Symbol#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$6Symbol#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15122:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
; Line 286:	     {} 
L_15123:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15130:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15131:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15138:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15139:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15146:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15164:
L_15147:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p6Symbol~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15170:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15188:
L_15171:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7CtxData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$7CtxData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15194:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15195:
	ret
section code
	section vsc@std@__1@#__wrap_iter$p#basic_string$c#char_traits$c~#allocator$c~~~@$bctr$qv virtual
@std@__1@#__wrap_iter$p#basic_string$c#char_traits$c~#allocator$c~~~@$bctr$qv:
; Line 1128:	     __wrap_iter() noexcept 
; Line 1130:	                : __i{} 
; Line 1132:	    { 
L_15202:
	mov	eax,dword [esp+04h]
; Line 1134:	
L_15203:
	ret
section code
	section vsc@std@__1@#__wrap_iter$p#unique_ptr$9MacroData#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__wrap_iter$p#unique_ptr$9MacroData#default_delete$n0~~~@$bctr$qv:
; Line 1128:	     __wrap_iter() noexcept 
; Line 1130:	                : __i{} 
; Line 1132:	    { 
L_15210:
	mov	eax,dword [esp+04h]
; Line 1134:	
L_15211:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15218:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15219:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15226:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15227:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15234:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15252:
L_15235:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~p9MacroData~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~pn0~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15258:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15276:
L_15259:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$p20@ppDefine@Definitionppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qv virtual
@std@__1@#__deque_iterator$p20@ppDefine@Definitionppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15282:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15283:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15290:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15291:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15298:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15299:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15306:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15324:
L_15307:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$p20@ppDefine@Definition#deque$pn0#allocator$pn0~~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#stack$pn0#deque$pn0#allocator$pn0~~~~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15330:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15348:
L_15331:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#basic_string$c#char_traits$c~#allocator$c~~p#__tree_node$#basic_string$c#char_traits$c~#allocator$c~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#basic_string$c#char_traits$c~#allocator$c~~p#__tree_node$#basic_string$c#char_traits$c~#allocator$c~~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15354:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15355:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12@ppCond@skip#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$12@ppCond@skip#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15362:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15363:
	ret
section code
	section vsc@std@__1@#__deque_iterator$ipirippii9_DiffType$1024&~@$bctr$qv virtual
@std@__1@#__deque_iterator$ipirippii9_DiffType$1024&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15370:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15371:
	ret
section code
	section vsc@ppInclude@IncludeFile$qrx#basic_string$c#char_traits$c~#allocator$c~~ virtual
@ppInclude@IncludeFile$qrx#basic_string$c#char_traits$c~#allocator$c~~:
; Line 110:	    void IncludeFile(const std::string& name) { pushFile(name, name); } 
L_15378:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	ecx
	push	eax
	call	@ppInclude@pushFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
L_15379:
	ret
section code
	section vsc@std@__1@#__list_iterator$#unique_ptr$6ppFile#default_delete$n0~~pv~@$bctr$qv virtual
@std@__1@#__list_iterator$#unique_ptr$6ppFile#default_delete$n0~~pv~@$bctr$qv:
; Line 276:	    __list_iterator() noexcept : __ptr_(nullptr) 
; Line 277:	    { 
L_15386:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 279:	
; Line 281:	    } 
L_15387:
	ret
section code
	section vsc@std@__1@#__list_const_iterator$#unique_ptr$6ppFile#default_delete$n0~~pv~@$bctr$qv virtual
@std@__1@#__list_const_iterator$#unique_ptr$6ppFile#default_delete$n0~~pv~@$bctr$qv:
; Line 406:	    __list_const_iterator() noexcept : __ptr_(nullptr) 
; Line 407:	    { 
L_15394:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 409:	
; Line 411:	    } 
L_15395:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15402:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15403:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15410:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15411:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15418:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15436:
L_15419:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~i~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15442:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15460:
L_15443:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$4boolpn0rn0ppn0i9_DiffType$4096&~@$bctr$qv virtual
@std@__1@#__deque_iterator$4boolpn0rn0ppn0i9_DiffType$4096&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15466:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15467:
	ret
section code
	section vsc@std@__1@#__list_iterator$#basic_string$c#char_traits$c~#allocator$c~~pv~@$bctr$qv virtual
@std@__1@#__list_iterator$#basic_string$c#char_traits$c~#allocator$c~~pv~@$bctr$qv:
; Line 276:	    __list_iterator() noexcept : __ptr_(nullptr) 
; Line 277:	    { 
L_15474:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 279:	
L_15475:
	ret
section code
	section vsc@std@__1@#__list_const_iterator$#basic_string$c#char_traits$c~#allocator$c~~pv~@$bctr$qv virtual
@std@__1@#__list_const_iterator$#basic_string$c#char_traits$c~#allocator$c~~pv~@$bctr$qv:
; Line 406:	    __list_const_iterator() noexcept : __ptr_(nullptr) 
; Line 407:	    { 
L_15482:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 409:	
L_15483:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15490:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15491:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15498:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15499:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15506:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15524:
L_15507:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#basic_string$c#char_traits$c~#allocator$c~~~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15530:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15548:
L_15531:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15554:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15555:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15562:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15563:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15570:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15588:
L_15571:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$20@Startups@Properties#default_delete$n0~~~p#__tree_node$#__value_type$#basic_string$c#char_traits$c~#allocator$c~~#unique_ptr$n0#default_delete$n0~~~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15594:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15612:
L_15595:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$14@Once@OnceItemp#__tree_node$n0pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$14@Once@OnceItemp#__tree_node$n0pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15618:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15619:
	ret
section code
	section vsc@std@__1@#less$14@Once@OnceItem~@$bctr$qv virtual
@std@__1@#less$14@Once@OnceItem~@$bctr$qv:
	push	ecx
L_15626:
	mov	eax,dword [esp+04h+04h]
L_15644:
L_15627:
	pop	ecx
	ret
section code
	section vsc@std@__1@#binary_function$14@Once@OnceItemn04bool~@$bctr$qv virtual
@std@__1@#binary_function$14@Once@OnceItemn04bool~@$bctr$qv:
L_15650:
	mov	eax,dword [esp+04h]
L_15651:
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15658:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15659:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15666:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15667:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_15674:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_15692:
L_15675:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ii~p#__tree_node$#__value_type$ii~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_15698:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_15716:
L_15699:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$#map$ii#less$i~#allocator$#pair$xii~~~p#map$ii#less$i~#allocator$#pair$xii~~~r#map$ii#less$i~#allocator$#pair$xii~~~pp#map$ii#less$i~#allocator$#pair$xii~~~i9_DiffType$204&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#map$ii#less$i~#allocator$#pair$xii~~~p#map$ii#less$i~#allocator$#pair$xii~~~r#map$ii#less$i~#allocator$#pair$xii~~~pp#map$ii#less$i~#allocator$#pair$xii~~~i9_DiffType$204&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15722:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_15723:
	ret
section code
	section vsc@std@__1@#less$i~@$bctr$qv virtual
@std@__1@#less$i~@$bctr$qv:
	push	ecx
L_15730:
	mov	eax,dword [esp+04h+04h]
L_15748:
L_15731:
	pop	ecx
	ret
section code
	section vsc@std@__1@#binary_function$ii4bool~@$bctr$qv virtual
@std@__1@#binary_function$ii4bool~@$bctr$qv:
L_15754:
	mov	eax,dword [esp+04h]
L_15755:
	ret
section code
	section vsc@PreProcessor@IncludeFile$qrx#basic_string$c#char_traits$c~#allocator$c~~ virtual
@PreProcessor@IncludeFile$qrx#basic_string$c#char_traits$c~#allocator$c~~:
; Line 86:	    void IncludeFile(const std::string& name) { include.IncludeFile(name); } 
	push	ecx
	push	ecx
L_15762:
	mov	ecx,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	add	eax,dword 084h
	push	ecx
	push	ecx
	push	eax
	call	@ppInclude@pushFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~
	add	esp,byte 0ch
L_15780:
L_15763:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@Lexer@GetToken$qv virtual
@Lexer@GetToken$qv:
; Line 44:	    const Token* GetToken() { return token; } 
L_15786:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_15787:
	ret
section code
	section vsc@Lexer@Reset$qrx#basic_string$c#char_traits$c~#allocator$c~~ virtual
@Lexer@Reset$qrx#basic_string$c#char_traits$c~#allocator$c~~:
; Line 46:	    void Reset(const std::string& line) 
; Line 47:	    { 
	push	ebx
L_15794:
	mov	eax,dword [esp+08h+04h]
	mov	ebx,dword [esp+04h+04h]
; Line 48:	        tokenizer->Reset(line); 
	push	eax
	mov	eax,dword [ebx+08h]
	push	eax
	call	@Tokenizer@Reset$qrx#basic_string$c#char_traits$c~#allocator$c~~
	pop	ecx
	pop	ecx
; Line 49:	        NextToken(); 
	push	ebx
	call	@Lexer@NextToken$qv
	pop	ecx
; Line 50:	    } 
L_15795:
	pop	ebx
	ret
section code
	section vsc@Lexer@AtEol$qv virtual
@Lexer@AtEol$qv:
; Line 51:	    bool AtEol() { return atEol; } 
L_15802:
	mov	eax,dword [esp+04h]
	mov	al,byte [eax+04h]
L_15803:
	ret
section code
	section vsc@Lexer@AtEof$qv virtual
@Lexer@AtEof$qv:
; Line 52:	    bool AtEof() { return atEof; } 
L_15810:
	mov	eax,dword [esp+04h]
	mov	al,byte [eax+05h]
L_15811:
	ret
section code
	section vsc@Expression@Eval$qv virtual
@Expression@Eval$qv:
; Line 35:	    int Eval() { return conditional(); } 
L_15818:
	mov	eax,dword [esp+04h]
	push	eax
	call	@Expression@conditional$qv
	pop	ecx
L_15819:
	ret
section code
	section vsc@RCFile@NextToken$qv virtual
@RCFile@NextToken$qv:
; Line 50:	    void NextToken() { lexer.NextToken(); } 
L_15826:
	mov	eax,dword [esp+04h]
	add	eax,byte 08h
	push	eax
	call	@Lexer@NextToken$qv
	pop	ecx
L_15827:
	ret
section code
	section vsc@RCFile@GetToken$qv virtual
@RCFile@GetToken$qv:
; Line 51:	    const Token* GetToken() { return lexer.GetToken(); } 
	push	ecx
L_15834:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 08h
	mov	eax,dword [eax+0ch]
L_15852:
L_15835:
	pop	ecx
	ret
section code
	section vsc@RCFile@AtEol$qv virtual
@RCFile@AtEol$qv:
; Line 66:	    bool AtEol() { return lexer.AtEol(); } 
	push	ecx
L_15858:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 08h
	mov	al,byte [eax+04h]
L_15876:
L_15859:
	pop	ecx
	ret
section code
	section vsc@RCFile@AtEof$qv virtual
@RCFile@AtEof$qv:
; Line 67:	    bool AtEof() { return lexer.AtEof(); } 
	push	ecx
L_15882:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 08h
	mov	al,byte [eax+05h]
L_15900:
L_15883:
	pop	ecx
	ret
section code
	section vsc@std@__1@chrono@#duration$l#ratio$L$3600&L$1&~~@$bctr$l~$qrxlpv virtual
@std@__1@chrono@#duration$l#ratio$L$3600&L$1&~~@$bctr$l~$qrxlpv:
; Line 466:	                : __rep_(__r) {} 
L_15906:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
; Line 466:	                : __rep_(__r) {} 
L_15907:
	ret
section code
	section vsc@std@__1@chrono@#duration$l#ratio$L$3600&L$1&~~@$bctr$qRx#duration$l#ratio$L$3600&L$1&~~ virtual
@std@__1@chrono@#duration$l#ratio$L$3600&L$1&~~@$bctr$qRx#duration$l#ratio$L$3600&L$1&~~:
L_15914:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_15915:
	ret
section code
@std@__1@literals@chrono_literals@$blit@h$quL:
; Line 956:	    constexpr chrono::hours operator"" h(unsigned long long __h) 
; Line 957:	    { 
	add	esp,byte 0ffffffe0h
L_15922:
	mov	eax,dword [esp+04h+020h]
	lea	ecx,[esp-020h+020h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [esp+08h+020h]
	mov	dword [esp-020h+020h],edx
; Line 466:	                : __rep_(__r) {} 
L_15955:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_15940:
	mov	eax,dword [esp+04h+020h]
L_15970:
; Line 959:	    } 
L_15984:
L_15923:
	add	esp,byte 020h
	ret
	section vsc@std@__1@chrono@#duration$g#ratio$L$3600&L$1&~~@$bctr$g~$qrxgpv virtual
@std@__1@chrono@#duration$g#ratio$L$3600&L$1&~~@$bctr$g~$qrxgpv:
; Line 466:	                : __rep_(__r) {} 
L_15990:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
; Line 466:	                : __rep_(__r) {} 
L_15991:
	ret
section code
	section vsc@std@__1@chrono@#duration$g#ratio$L$3600&L$1&~~@$bctr$qRx#duration$g#ratio$L$3600&L$1&~~ virtual
@std@__1@chrono@#duration$g#ratio$L$3600&L$1&~~@$bctr$qRx#duration$g#ratio$L$3600&L$1&~~:
L_15998:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
L_15999:
	ret
section code
@std@__1@literals@chrono_literals@$blit@h$qg:
; Line 962:	    { 
	add	esp,byte 0ffffffd8h
L_16006:
	mov	eax,dword [esp+04h+028h]
	lea	ecx,[esp-028h+028h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[esp+08h+028h]
	movsd	[esp-028h+028h],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16039:
	movsd	xmm0,[ecx]
	movsd	[eax],xmm0
L_16024:
	mov	eax,dword [esp+04h+028h]
L_16054:
; Line 964:	    } 
L_16068:
L_16007:
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$l#ratio$L$60&L$1&~~@$bctr$l~$qrxlpv virtual
@std@__1@chrono@#duration$l#ratio$L$60&L$1&~~@$bctr$l~$qrxlpv:
; Line 466:	                : __rep_(__r) {} 
L_16074:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
; Line 466:	                : __rep_(__r) {} 
L_16075:
	ret
section code
	section vsc@std@__1@chrono@#duration$l#ratio$L$60&L$1&~~@$bctr$qRx#duration$l#ratio$L$60&L$1&~~ virtual
@std@__1@chrono@#duration$l#ratio$L$60&L$1&~~@$bctr$qRx#duration$l#ratio$L$60&L$1&~~:
L_16082:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_16083:
	ret
section code
@std@__1@literals@chrono_literals@$blit@min$quL:
; Line 967:	    constexpr chrono::minutes operator"" min(unsigned long long __m) 
; Line 968:	    { 
	add	esp,byte 0ffffffe0h
L_16090:
	mov	eax,dword [esp+04h+020h]
	lea	ecx,[esp-020h+020h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [esp+08h+020h]
	mov	dword [esp-020h+020h],edx
; Line 466:	                : __rep_(__r) {} 
L_16123:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_16108:
	mov	eax,dword [esp+04h+020h]
L_16138:
; Line 970:	    } 
L_16152:
L_16091:
	add	esp,byte 020h
	ret
	section vsc@std@__1@chrono@#duration$g#ratio$L$60&L$1&~~@$bctr$g~$qrxgpv virtual
@std@__1@chrono@#duration$g#ratio$L$60&L$1&~~@$bctr$g~$qrxgpv:
; Line 466:	                : __rep_(__r) {} 
L_16158:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16159:
	ret
section code
	section vsc@std@__1@chrono@#duration$g#ratio$L$60&L$1&~~@$bctr$qRx#duration$g#ratio$L$60&L$1&~~ virtual
@std@__1@chrono@#duration$g#ratio$L$60&L$1&~~@$bctr$qRx#duration$g#ratio$L$60&L$1&~~:
L_16166:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
L_16167:
	ret
section code
@std@__1@literals@chrono_literals@$blit@min$qg:
; Line 973:	    { 
	add	esp,byte 0ffffffd8h
L_16174:
	mov	eax,dword [esp+04h+028h]
	lea	ecx,[esp-028h+028h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[esp+08h+028h]
	movsd	[esp-028h+028h],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16207:
	movsd	xmm0,[ecx]
	movsd	[eax],xmm0
L_16192:
	mov	eax,dword [esp+04h+028h]
L_16222:
; Line 975:	    } 
L_16236:
L_16175:
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1&~~@$bctr$L~$qrxLpv virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1&~~@$bctr$L~$qrxLpv:
; Line 466:	                : __rep_(__r) {} 
	push	ebx
L_16242:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
; Line 466:	                : __rep_(__r) {} 
L_16243:
	pop	ebx
	ret
section code
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1&~~@$bctr$qRx#duration$L#ratio$L$1&L$1&~~ virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1&~~@$bctr$qRx#duration$L#ratio$L$1&L$1&~~:
	push	ebx
L_16250:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
L_16251:
	pop	ebx
	ret
section code
@std@__1@literals@chrono_literals@$blit@s$quL:
; Line 978:	    constexpr chrono::seconds operator"" s(unsigned long long __s) 
; Line 979:	    { 
	add	esp,byte 0ffffffd8h
	push	ebx
L_16258:
	mov	eax,dword [esp+04h+02ch]
	lea	ebx,[esp-028h+02ch]
; Line 466:	                : __rep_(__r) {} 
	mov	ecx,dword [esp+08h+02ch]
	mov	edx,dword [esp+08h+04h+02ch]
	mov	dword [esp-028h+02ch],ecx
	mov	dword [esp-028h+04h+02ch],edx
; Line 466:	                : __rep_(__r) {} 
L_16291:
	mov	ecx,dword [ebx]
	mov	edx,dword [ebx+04h]
	mov	dword [eax],ecx
	mov	dword [eax+04h],edx
L_16276:
	mov	eax,dword [esp+04h+02ch]
L_16306:
; Line 981:	    } 
L_16320:
L_16259:
	pop	ebx
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1&~~@$bctr$g~$qrxgpv virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1&~~@$bctr$g~$qrxgpv:
; Line 466:	                : __rep_(__r) {} 
L_16326:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16327:
	ret
section code
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1&~~@$bctr$qRx#duration$g#ratio$L$1&L$1&~~ virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1&~~@$bctr$qRx#duration$g#ratio$L$1&L$1&~~:
L_16334:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
L_16335:
	ret
section code
@std@__1@literals@chrono_literals@$blit@s$qg:
; Line 984:	    { 
	add	esp,byte 0ffffffd8h
L_16342:
	mov	eax,dword [esp+04h+028h]
	lea	ecx,[esp-028h+028h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[esp+08h+028h]
	movsd	[esp-028h+028h],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16375:
	movsd	xmm0,[ecx]
	movsd	[eax],xmm0
L_16360:
	mov	eax,dword [esp+04h+028h]
L_16390:
; Line 986:	    } 
L_16404:
L_16343:
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1000&~~@$bctr$L~$qrxLpv virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1000&~~@$bctr$L~$qrxLpv:
; Line 466:	                : __rep_(__r) {} 
	push	ebx
L_16410:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
; Line 466:	                : __rep_(__r) {} 
L_16411:
	pop	ebx
	ret
section code
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1000&~~@$bctr$qRx#duration$L#ratio$L$1&L$1000&~~ virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1000&~~@$bctr$qRx#duration$L#ratio$L$1&L$1000&~~:
	push	ebx
L_16418:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
L_16419:
	pop	ebx
	ret
section code
@std@__1@literals@chrono_literals@$blit@ms$quL:
; Line 989:	    constexpr chrono::milliseconds operator"" ms(unsigned long long __ms) 
; Line 990:	    { 
	add	esp,byte 0ffffffd8h
	push	ebx
L_16426:
	mov	eax,dword [esp+04h+02ch]
	lea	ebx,[esp-028h+02ch]
; Line 466:	                : __rep_(__r) {} 
	mov	ecx,dword [esp+08h+02ch]
	mov	edx,dword [esp+08h+04h+02ch]
	mov	dword [esp-028h+02ch],ecx
	mov	dword [esp-028h+04h+02ch],edx
; Line 466:	                : __rep_(__r) {} 
L_16459:
	mov	ecx,dword [ebx]
	mov	edx,dword [ebx+04h]
	mov	dword [eax],ecx
	mov	dword [eax+04h],edx
L_16444:
	mov	eax,dword [esp+04h+02ch]
L_16474:
; Line 992:	    } 
L_16488:
L_16427:
	pop	ebx
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1000&~~@$bctr$g~$qrxgpv virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1000&~~@$bctr$g~$qrxgpv:
; Line 466:	                : __rep_(__r) {} 
L_16494:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16495:
	ret
section code
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1000&~~@$bctr$qRx#duration$g#ratio$L$1&L$1000&~~ virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1000&~~@$bctr$qRx#duration$g#ratio$L$1&L$1000&~~:
L_16502:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
L_16503:
	ret
section code
@std@__1@literals@chrono_literals@$blit@ms$qg:
; Line 995:	    { 
	add	esp,byte 0ffffffd8h
L_16510:
	mov	eax,dword [esp+04h+028h]
	lea	ecx,[esp-028h+028h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[esp+08h+028h]
	movsd	[esp-028h+028h],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16543:
	movsd	xmm0,[ecx]
	movsd	[eax],xmm0
L_16528:
	mov	eax,dword [esp+04h+028h]
L_16558:
; Line 997:	    } 
L_16572:
L_16511:
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1000000&~~@$bctr$L~$qrxLpv virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1000000&~~@$bctr$L~$qrxLpv:
; Line 466:	                : __rep_(__r) {} 
	push	ebx
L_16578:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
; Line 466:	                : __rep_(__r) {} 
L_16579:
	pop	ebx
	ret
section code
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1000000&~~@$bctr$qRx#duration$L#ratio$L$1&L$1000000&~~ virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1000000&~~@$bctr$qRx#duration$L#ratio$L$1&L$1000000&~~:
	push	ebx
L_16586:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
L_16587:
	pop	ebx
	ret
section code
@std@__1@literals@chrono_literals@$blit@us$quL:
; Line 1000:	    constexpr chrono::microseconds operator"" us(unsigned long long __us) 
; Line 1001:	    { 
	add	esp,byte 0ffffffd8h
	push	ebx
L_16594:
	mov	eax,dword [esp+04h+02ch]
	lea	ebx,[esp-028h+02ch]
; Line 466:	                : __rep_(__r) {} 
	mov	ecx,dword [esp+08h+02ch]
	mov	edx,dword [esp+08h+04h+02ch]
	mov	dword [esp-028h+02ch],ecx
	mov	dword [esp-028h+04h+02ch],edx
; Line 466:	                : __rep_(__r) {} 
L_16627:
	mov	ecx,dword [ebx]
	mov	edx,dword [ebx+04h]
	mov	dword [eax],ecx
	mov	dword [eax+04h],edx
L_16612:
	mov	eax,dword [esp+04h+02ch]
L_16642:
; Line 1003:	    } 
L_16656:
L_16595:
	pop	ebx
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1000000&~~@$bctr$g~$qrxgpv virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1000000&~~@$bctr$g~$qrxgpv:
; Line 466:	                : __rep_(__r) {} 
L_16662:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16663:
	ret
section code
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1000000&~~@$bctr$qRx#duration$g#ratio$L$1&L$1000000&~~ virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1000000&~~@$bctr$qRx#duration$g#ratio$L$1&L$1000000&~~:
L_16670:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
L_16671:
	ret
section code
@std@__1@literals@chrono_literals@$blit@us$qg:
; Line 1006:	    { 
	add	esp,byte 0ffffffd8h
L_16678:
	mov	eax,dword [esp+04h+028h]
	lea	ecx,[esp-028h+028h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[esp+08h+028h]
	movsd	[esp-028h+028h],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16711:
	movsd	xmm0,[ecx]
	movsd	[eax],xmm0
L_16696:
	mov	eax,dword [esp+04h+028h]
L_16726:
; Line 1008:	    } 
L_16740:
L_16679:
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1000000000&~~@$bctr$L~$qrxLpv virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1000000000&~~@$bctr$L~$qrxLpv:
; Line 466:	                : __rep_(__r) {} 
	push	ebx
L_16746:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
; Line 466:	                : __rep_(__r) {} 
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
; Line 466:	                : __rep_(__r) {} 
L_16747:
	pop	ebx
	ret
section code
	section vsc@std@__1@chrono@#duration$L#ratio$L$1&L$1000000000&~~@$bctr$qRx#duration$L#ratio$L$1&L$1000000000&~~ virtual
@std@__1@chrono@#duration$L#ratio$L$1&L$1000000000&~~@$bctr$qRx#duration$L#ratio$L$1&L$1000000000&~~:
	push	ebx
L_16754:
	mov	ecx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
L_16755:
	pop	ebx
	ret
section code
@std@__1@literals@chrono_literals@$blit@ns$quL:
; Line 1011:	    constexpr chrono::nanoseconds operator"" ns(unsigned long long __ns) 
; Line 1012:	    { 
	add	esp,byte 0ffffffd8h
	push	ebx
L_16762:
	mov	eax,dword [esp+04h+02ch]
	lea	ebx,[esp-028h+02ch]
; Line 466:	                : __rep_(__r) {} 
	mov	ecx,dword [esp+08h+02ch]
	mov	edx,dword [esp+08h+04h+02ch]
	mov	dword [esp-028h+02ch],ecx
	mov	dword [esp-028h+04h+02ch],edx
; Line 466:	                : __rep_(__r) {} 
L_16795:
	mov	ecx,dword [ebx]
	mov	edx,dword [ebx+04h]
	mov	dword [eax],ecx
	mov	dword [eax+04h],edx
L_16780:
	mov	eax,dword [esp+04h+02ch]
L_16810:
; Line 1014:	    } 
L_16824:
L_16763:
	pop	ebx
	add	esp,byte 028h
	ret
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1000000000&~~@$bctr$g~$qrxgpv virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1000000000&~~@$bctr$g~$qrxgpv:
; Line 466:	                : __rep_(__r) {} 
L_16830:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16831:
	ret
section code
	section vsc@std@__1@chrono@#duration$g#ratio$L$1&L$1000000000&~~@$bctr$qRx#duration$g#ratio$L$1&L$1000000000&~~ virtual
@std@__1@chrono@#duration$g#ratio$L$1&L$1000000000&~~@$bctr$qRx#duration$g#ratio$L$1&L$1000000000&~~:
L_16838:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	movsd	xmm0,[ecx]
	mov	ecx,eax
	movsd	[ecx],xmm0
L_16839:
	ret
section code
@std@__1@literals@chrono_literals@$blit@ns$qg:
; Line 1017:	    { 
	add	esp,byte 0ffffffd8h
L_16846:
	mov	eax,dword [esp+04h+028h]
	lea	ecx,[esp-028h+028h]
; Line 466:	                : __rep_(__r) {} 
	movsd	xmm0,[esp+08h+028h]
	movsd	[esp-028h+028h],xmm0
; Line 466:	                : __rep_(__r) {} 
L_16879:
	movsd	xmm0,[ecx]
	movsd	[eax],xmm0
L_16864:
	mov	eax,dword [esp+04h+028h]
L_16894:
; Line 1019:	    } 
L_16908:
L_16847:
	add	esp,byte 028h
	ret
	section vsc@std@__1@error_category@$bequ$xqrx14error_category virtual
@std@__1@error_category@$bequ$xqrx14error_category:
; Line 387:	    inline 
; Line 388:	    bool operator==(const error_category& __rhs) const noexcept {return this == &__rhs;} 
L_16914:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_16915:
	ret
section code
	section vsc@std@__1@error_category@$blt$xqrx14error_category virtual
@std@__1@error_category@$blt$xqrx14error_category:
; Line 393:	    inline 
; Line 394:	    bool operator< (const error_category& __rhs) const noexcept {return this < &__rhs;} 
L_16923:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	cmp	ecx,eax
	setl	al
	and	eax,byte 01h
	setne	al
L_16924:
	ret
section code
	section vsc@std@__1@error_condition@$bctr$qirx14error_category virtual
@std@__1@error_condition@$bctr$qirx14error_category:
; Line 417:	    inline 
; Line 418:	    error_condition(int __val, const error_category& __cat) noexcept 
	push	ebx
L_16932:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 417:	    inline 
; Line 418:	    error_condition(int __val, const error_category& __cat) noexcept 
; Line 419:	        : __val_(__val), __cat_(&__cat) {} 
L_16933:
	pop	ebx
	ret
section code
	section vsc@std@__1@error_condition@value$xqv virtual
@std@__1@error_condition@value$xqv:
; Line 452:	    inline 
; Line 453:	    int value() const noexcept {return __val_;} 
L_16940:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax]
L_16941:
	ret
section code
	section vsc@std@__1@error_condition@category$xqv virtual
@std@__1@error_condition@category$xqv:
; Line 455:	    inline 
; Line 456:	    const error_category& category() const noexcept {return *__cat_;} 
L_16948:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_16949:
	ret
section code
	section vsc@std@__1@error_code@$bctr$qirx14error_category virtual
@std@__1@error_code@$bctr$qirx14error_category:
; Line 489:	    inline 
; Line 490:	    error_code(int __val, const error_category& __cat) noexcept 
	push	ebx
L_16956:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 489:	    inline 
; Line 490:	    error_code(int __val, const error_category& __cat) noexcept 
; Line 491:	        : __val_(__val), __cat_(&__cat) {} 
L_16957:
	pop	ebx
	ret
section code
	section vsc@std@__1@error_code@value$xqv virtual
@std@__1@error_code@value$xqv:
; Line 524:	    inline 
; Line 525:	    int value() const noexcept {return __val_;} 
L_16964:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax]
L_16965:
	ret
section code
	section vsc@std@__1@error_code@category$xqv virtual
@std@__1@error_code@category$xqv:
; Line 527:	    inline 
; Line 528:	    const error_category& category() const noexcept {return *__cat_;} 
L_16972:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_16973:
	ret
section code
	section vsc@std@__1@$bequ$qrx10error_coderxn0 virtual
@std@__1@$bequ$qrx10error_coderxn0:
; Line 558:	operator==(const error_code& __x, const error_code& __y) noexcept 
; Line 559:	{ 
	add	esp,byte 0ffffffe8h
	push	ebx
L_16980:
	mov	ecx,dword [esp+08h+01ch]
	mov	eax,dword [esp+04h+01ch]
; Line 560:	    return __x.category() == __y.category() && __x.value() == __y.value(); 
	mov	edx,eax
	mov	ebx,dword [edx+04h]
L_17016:
	mov	edx,ecx
	mov	edx,dword [edx+04h]
L_17032:
L_17001:
	cmp	ebx,edx
	jne	short	L_16987
	mov	ecx,dword [ecx]
L_17049:
	mov	eax,dword [eax]
L_17065:
	cmp	eax,ecx
	je	short	L_16985
L_16987:
	xor	eax,eax
	jmp	short	L_16986
L_16985:
	mov	eax,01h
L_16986:
	and	eax,eax
	setne	al
; Line 561:	} 
L_16981:
	pop	ebx
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@$bequ$qrx10error_coderx15error_condition virtual
@std@__1@$bequ$qrx10error_coderx15error_condition:
; Line 565:	operator==(const error_code& __x, const error_condition& __y) noexcept 
; Line 566:	{ 
	add	esp,byte 0fffffff0h
	push	ebx
	push	esi
L_17072:
	mov	ebx,dword [esp+08h+018h]
	mov	esi,dword [esp+04h+018h]
; Line 567:	    return __x.category().equivalent(__x.value(), __y) 
; Line 568:	        || __y.category().equivalent(__x, __y.value()); 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	mov	eax,dword [eax]
L_17092:
	push	eax
	mov	eax,esi
	mov	eax,dword [eax+04h]
L_17108:
	push	eax
	call	dword [@std@__1@error_category@equivalent$xqirx15error_condition]
	add	esp,byte 0ch
	and	al,al
	jne	short	L_17077
	mov	eax,ebx
	mov	eax,dword [eax]
L_17124:
	push	eax
	push	esi
	mov	eax,dword [ebx+04h]
L_17140:
	push	eax
	call	dword [@std@__1@error_category@equivalent$xqrx10error_codei]
	add	esp,byte 0ch
	and	al,al
	jne	short	L_17077
	xor	eax,eax
	jmp	short	L_17078
L_17077:
	mov	eax,01h
L_17078:
	and	eax,eax
	setne	al
; Line 569:	} 
L_17073:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@$bequ$qrx15error_conditionrx10error_code virtual
@std@__1@$bequ$qrx15error_conditionrx10error_code:
; Line 573:	operator==(const error_condition& __x, const error_code& __y) noexcept 
; Line 574:	{ 
	add	esp,byte 0ffffffe8h
	push	ebx
	push	esi
L_17147:
	mov	esi,dword [esp+08h+020h]
	mov	ebx,dword [esp+04h+020h]
; Line 567:	    return __x.category().equivalent(__x.value(), __y) 
; Line 568:	        || __y.category().equivalent(__x, __y.value()); 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	mov	eax,dword [eax]
L_17182:
	push	eax
	mov	eax,esi
	mov	eax,dword [eax+04h]
L_17198:
	push	eax
	call	dword [@std@__1@error_category@equivalent$xqirx15error_condition]
	add	esp,byte 0ch
	and	al,al
	jne	short	L_17167
	mov	eax,ebx
	mov	eax,dword [eax]
L_17214:
	push	eax
	push	esi
	mov	eax,dword [ebx+04h]
L_17230:
	push	eax
	call	dword [@std@__1@error_category@equivalent$xqrx10error_codei]
	add	esp,byte 0ch
	and	al,al
	jne	short	L_17167
	xor	eax,eax
	jmp	short	L_17168
L_17167:
	mov	eax,01h
L_17168:
	and	eax,eax
	setne	al
; Line 569:	} 
L_17165:
; Line 576:	} 
L_17148:
	pop	esi
	pop	ebx
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@$bequ$qrx15error_conditionrxn0 virtual
@std@__1@$bequ$qrx15error_conditionrxn0:
; Line 580:	operator==(const error_condition& __x, const error_condition& __y) noexcept 
; Line 581:	{ 
	add	esp,byte 0ffffffe8h
	push	ebx
L_17238:
	mov	ecx,dword [esp+08h+01ch]
	mov	eax,dword [esp+04h+01ch]
; Line 582:	    return __x.category() == __y.category() && __x.value() == __y.value(); 
	mov	edx,eax
	mov	ebx,dword [edx+04h]
L_17274:
	mov	edx,ecx
	mov	edx,dword [edx+04h]
L_17290:
L_17259:
	cmp	ebx,edx
	jne	short	L_17245
	mov	ecx,dword [ecx]
L_17307:
	mov	eax,dword [eax]
L_17323:
	cmp	eax,ecx
	je	short	L_17243
L_17245:
	xor	eax,eax
	jmp	short	L_17244
L_17243:
	mov	eax,01h
L_17244:
	and	eax,eax
	setne	al
; Line 583:	} 
L_17239:
	pop	ebx
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@once_flag@$bctr$qv virtual
@std@__1@once_flag@$bctr$qv:
; Line 452:	    constexpr 
L_17330:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 452:	    constexpr 
; Line 453:	        once_flag() noexcept : __state_(0) {} 
L_17331:
	ret
section code
	section vsc@std@__1@locale@id@$bctr$qv virtual
@std@__1@locale@id@$bctr$qv:
; Line 142:	     constexpr id() :__id_(0) {} 
	push	ecx
L_17338:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 452:	    constexpr 
; Line 453:	        once_flag() noexcept : __state_(0) {} 
L_17356:
	mov	dword [eax+04h],00h
; Line 142:	     constexpr id() :__id_(0) {} 
L_17339:
	pop	ecx
	ret
section code
	section vsc@std@__1@make_error_code$q7io_errc virtual
@std@__1@make_error_code$q7io_errc:
; Line 409:	make_error_code(io_errc __e) noexcept 
; Line 410:	{ 
	add	esp,byte 0ffffffdch
	push	ebx
	push	esi
	push	edi
L_17362:
	mov	ebx,dword [esp+04h+030h]
	mov	edi,dword [esp+08h+030h]
; Line 411:	    return error_code(static_cast<int>(__e), iostream_category()); 
	lea	esi,[esp-024h+030h]
	call	dword [@std@__1@iostream_category$qv]
	mov	dword [esp-024h+030h],edi
	mov	dword [esp-024h+04h+030h],eax
; Line 489:	    inline 
; Line 490:	    error_code(int __val, const error_category& __cat) noexcept 
; Line 491:	        : __val_(__val), __cat_(&__cat) {} 
L_17395:
	mov	ecx,dword [esi]
	mov	eax,ebx
	mov	dword [eax],ecx
	mov	eax,dword [esp-024h+04h+030h]
	mov	dword [ebx+04h],eax
L_17380:
	mov	eax,dword [esp+04h+030h]
L_17410:
; Line 412:	} 
L_17424:
L_17363:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 024h
	ret
section code
	section vsc@std@__1@error_code@#$bctr$i7io_errc~$qin0pv virtual
@std@__1@error_code@#$bctr$i7io_errc~$qin0pv:
; Line 497:	                                                                     ) noexcept 
; Line 498:	            {*this = make_error_code(__e);} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
L_17430:
	mov	eax,dword [esp+08h+010h]
	mov	ebx,dword [esp+04h+010h]
	push	eax
	lea	eax,[esp-0ch+014h]
	push	eax
	call	@std@__1@make_error_code$q7io_errc
	pop	ecx
	pop	ecx
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@error_code@$basn$qRx10error_code]
	pop	ecx
	pop	ecx
L_17446:
	mov	eax,ebx
L_17431:
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@ios_base@setf$qui virtual
@std@__1@ios_base@setf$qui:
; Line 457:	ios_base::setf(fmtflags __fmtfl) 
; Line 458:	{ 
L_17452:
	mov	ecx,dword [esp+08h]
	mov	edx,dword [esp+04h]
; Line 459:	    fmtflags __r = __fmtflags_; 
	mov	eax,dword [edx+074h]
; Line 460:	    __fmtflags_ |= __fmtfl; 
	or	dword [edx+074h],ecx
; Line 461:	    return __r; 
; Line 462:	} 
L_17453:
	ret
section code
	section vsc@std@__1@ios_base@unsetf$qui virtual
@std@__1@ios_base@unsetf$qui:
; Line 466:	ios_base::unsetf(fmtflags __mask) 
; Line 467:	{ 
L_17460:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
; Line 468:	    __fmtflags_ &= ~__mask; 
	not	eax
	and	dword [ecx+074h],eax
; Line 469:	} 
L_17461:
	ret
section code
	section vsc@std@__1@ios_base@setf$quiui virtual
@std@__1@ios_base@setf$quiui:
; Line 473:	ios_base::setf(fmtflags __fmtfl, fmtflags __mask) 
; Line 474:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
L_17468:
	mov	edx,dword [esp+0ch+014h]
	mov	ecx,dword [esp+08h+014h]
	mov	esi,dword [esp+04h+014h]
; Line 475:	    fmtflags __r = __fmtflags_; 
	mov	eax,dword [esi+074h]
; Line 476:	    unsetf(__mask); 
	mov	edi,esi
	mov	ebx,edx
; Line 468:	    __fmtflags_ &= ~__mask; 
	not	ebx
	and	dword [edi+074h],ebx
; Line 469:	} 
L_17486:
; Line 477:	    __fmtflags_ |= __fmtfl & __mask; 
	and	ecx,edx
	or	dword [esi+074h],ecx
; Line 478:	    return __r; 
; Line 479:	} 
L_17469:
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@__anontype_3238977210_2@$bctr$qRx23__anontype_3238977210_2 virtual
@__anontype_3238977210_2@$bctr$qRx23__anontype_3238977210_2:
	push	ebx
L_17492:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_17493:
	pop	ebx
	ret
section code
	section vsc@__anontype_3238977210_3@$bctr$qRx23__anontype_3238977210_3 virtual
@__anontype_3238977210_3@$bctr$qRx23__anontype_3238977210_3:
	push	ebx
	push	esi
L_17500:
	mov	esi,dword [esp+08h+08h]
	mov	eax,dword [esp+04h+08h]
	mov	ecx,esi
	mov	edx,dword [ecx+04h]
	mov	ecx,dword [ecx]
	mov	ebx,eax
	mov	dword [ebx],ecx
	mov	dword [ebx+04h],edx
	mov	ecx,dword [esi+08h]
	mov	edx,dword [esi+08h+04h]
	mov	dword [eax+08h],ecx
	mov	dword [eax+08h+04h],edx
L_17501:
	pop	esi
	pop	ebx
	ret
section code
	section vsc@islower_l$qipv virtual
@islower_l$qipv:
; Line 75:	    inline int islower_l(int __c, locale_t larg) { return __c >= 'a' && __c <= 'z'; } 
L_17508:
	mov	eax,dword [esp+04h]
	cmp	eax,byte 061h
	jl	short	L_17515
	cmp	eax,byte 07ah
	jle	short	L_17513
L_17515:
	xor	eax,eax
	jmp	short	L_17514
L_17513:
	mov	eax,01h
L_17514:
L_17509:
	ret
section code
	section vsc@isupper_l$qipv virtual
@isupper_l$qipv:
; Line 76:	    inline int isupper_l(int __c, locale_t larg) { return __c >= 'A' && __c <= 'Z'; } 
L_17519:
	mov	eax,dword [esp+04h]
	cmp	eax,byte 041h
	jl	short	L_17526
	cmp	eax,byte 05ah
	jle	short	L_17524
L_17526:
	xor	eax,eax
	jmp	short	L_17525
L_17524:
	mov	eax,01h
L_17525:
L_17520:
	ret
section code
	section vsc@tolower_l$qipv virtual
@tolower_l$qipv:
; Line 77:	    inline int tolower_l(int __ch, locale_t larg) 
; Line 78:	    { 
	push	ecx
	push	ecx
L_17530:
	mov	eax,dword [esp+04h+08h]
; Line 79:	        if (isupper_l(__ch, 0)) 
	mov	ecx,eax
	cmp	ecx,byte 041h
	jl	short	L_17557
	cmp	ecx,byte 05ah
	jle	short	L_17555
L_17557:
	xor	ecx,ecx
	jmp	short	L_17553
L_17555:
	mov	ecx,01h
L_17556:
L_17553:
	and	ecx,ecx
	je	short	L_17533
; Line 80:	            __ch += 'a' - 'A'; 
	add	eax,byte 020h
L_17533:
; Line 81:	        return __ch; 
; Line 82:	    } 
L_17531:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@toupper_l$qipv virtual
@toupper_l$qipv:
; Line 83:	    inline int toupper_l(int __ch, locale_t larg) 
; Line 84:	    { 
	push	ecx
	push	ecx
L_17562:
	mov	eax,dword [esp+04h+08h]
; Line 85:	        if (islower_l(__ch, 0)) 
	mov	ecx,eax
	cmp	ecx,byte 061h
	jl	short	L_17589
	cmp	ecx,byte 07ah
	jle	short	L_17587
L_17589:
	xor	ecx,ecx
	jmp	short	L_17585
L_17587:
	mov	ecx,01h
L_17588:
L_17585:
	and	ecx,ecx
	je	short	L_17565
; Line 86:	            __ch -= 'a' - 'A'; 
	sub	eax,byte 020h
L_17565:
; Line 87:	        return __ch; 
; Line 88:	    } 
L_17563:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@iswdigit_l$quipv virtual
@iswdigit_l$quipv:
; Line 90:	    inline int iswdigit_l(wint_t __wc, locale_t larg) { return __wc >= '0' && __wc <= '9'; } 
L_17594:
	mov	eax,dword [esp+04h]
	cmp	eax,byte 030h
	jc	short	L_17601
	cmp	eax,byte 039h
	jbe	short	L_17599
L_17601:
	xor	eax,eax
	jmp	short	L_17600
L_17599:
	mov	eax,01h
L_17600:
L_17595:
	ret
section code
	section vsc@iswlower_l$quipv virtual
@iswlower_l$quipv:
; Line 92:	    inline int iswlower_l(wint_t __wc, locale_t larg) { return __wc >= 'a' && __wc <= 'z'; } 
L_17605:
	mov	eax,dword [esp+04h]
	cmp	eax,byte 061h
	jc	short	L_17612
	cmp	eax,byte 07ah
	jbe	short	L_17610
L_17612:
	xor	eax,eax
	jmp	short	L_17611
L_17610:
	mov	eax,01h
L_17611:
L_17606:
	ret
section code
	section vsc@iswupper_l$quipv virtual
@iswupper_l$quipv:
; Line 97:	    inline int iswupper_l(wint_t __wc, locale_t larg) { return __wc >= 'A' && __wc <= 'Z'; } 
L_17616:
	mov	eax,dword [esp+04h]
	cmp	eax,byte 041h
	jc	short	L_17623
	cmp	eax,byte 05ah
	jbe	short	L_17621
L_17623:
	xor	eax,eax
	jmp	short	L_17622
L_17621:
	mov	eax,01h
L_17622:
L_17617:
	ret
section code
	section vsc@iswalpha_l$quipv virtual
@iswalpha_l$quipv:
; Line 102:	    inline int iswalpha_l(wint_t __wc, locale_t larg) { return iswlower_l(__wc, (locale_t)0) || iswupper_l(__wc, (locale_t)0); } 
	add	esp,byte 0fffffff0h
L_17627:
	mov	eax,dword [esp+04h+010h]
	mov	ecx,eax
	cmp	ecx,byte 061h
	jc	short	L_17651
	cmp	ecx,byte 07ah
	jbe	short	L_17649
L_17651:
	xor	ecx,ecx
	jmp	short	L_17647
L_17649:
	mov	ecx,01h
L_17650:
L_17647:
	and	ecx,ecx
	jne	short	L_17632
	cmp	eax,byte 041h
	jc	short	L_17670
	cmp	eax,byte 05ah
	jbe	short	L_17668
L_17670:
	xor	eax,eax
	jmp	short	L_17666
L_17668:
	mov	eax,01h
L_17669:
L_17666:
	and	eax,eax
	jne	short	L_17632
	xor	eax,eax
	jmp	short	L_17633
L_17632:
	mov	eax,01h
L_17633:
L_17628:
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__bitset$i$0&i$0&~@$bctr$qv virtual
@std@__1@#__bitset$i$0&i$0&~@$bctr$qv:
; Line 625:	__bitset<0, 0>::__bitset() noexcept 
; Line 626:	{ 
L_17675:
	mov	eax,dword [esp+04h]
; Line 627:	} 
L_17676:
	ret
section code
	section vsc@std@__1@#__bitset$i$0&i$0&~@$bctr$quL virtual
@std@__1@#__bitset$i$0&i$0&~@$bctr$quL:
; Line 631:	__bitset<0, 0>::__bitset(unsigned long long) noexcept 
; Line 632:	{ 
L_17683:
	mov	eax,dword [esp+04h]
; Line 633:	} 
L_17684:
	ret
section code
	section vsc@ResourceId@$bctr$qv virtual
@ResourceId@$bctr$qv:
; Line 36:	    ResourceId() : id(-1) {} 
	push	ebx
L_17691:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebx+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
	mov	eax,ebx
L_17692:
	pop	ebx
	ret
section code
	section vsc@ResourceId@$bctr$qrx#basic_string$C#char_traits$C~#allocator$C~~ virtual
@ResourceId@$bctr$qrx#basic_string$C#char_traits$C~#allocator$C~~:
; Line 37:	    ResourceId(const std::wstring& Name) : name(Name), id(-1) {} 
	push	ebx
L_17699:
	mov	eax,dword [esp+08h+04h]
	mov	ebx,dword [esp+04h+04h]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
	mov	dword [ebx+018h],0ffffffffh
; Line 37:	    ResourceId(const std::wstring& Name) : name(Name), id(-1) {} 
	mov	eax,ebx
L_17700:
	pop	ebx
	ret
section code
	section vsc@ResourceId@$bctr$qi virtual
@ResourceId@$bctr$qi:
; Line 38:	    ResourceId(int Id) : id(Id) {} 
	push	ebx
	push	esi
L_17707:
	mov	esi,dword [esp+08h+08h]
	mov	ebx,dword [esp+04h+08h]
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebx+018h],esi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
	mov	eax,ebx
L_17708:
	pop	esi
	pop	ebx
	ret
section code
	section vsc@ResourceId@$bctr$qrx10ResourceId virtual
@ResourceId@$bctr$qrx10ResourceId:
; Line 40:	    ResourceId(const ResourceId& Old) 
; Line 41:	    { 
	push	ebx
	push	esi
L_17715:
	mov	esi,dword [esp+08h+08h]
	mov	ebx,dword [esp+04h+08h]
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [esi+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,esi
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
	mov	eax,ebx
L_17716:
	pop	esi
	pop	ebx
	ret
section code
	section vsc@ResourceId@SetName$qrx#basic_string$C#char_traits$C~#allocator$C~~ virtual
@ResourceId@SetName$qrx#basic_string$C#char_traits$C~#allocator$C~~:
; Line 47:	    void SetName(const std::wstring& Name) { name = Name; } 
L_17723:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
L_17724:
	ret
section code
	section vsc@ResourceInfo@$bctr$qi virtual
@ResourceInfo@$bctr$qi:
; Line 42:	    ResourceInfo(int Language) : language(Language), memoryFlags(0), characteristics(0), version(0) {} 
L_17731:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	edx,eax
	mov	dword [edx],00h
	mov	dword [eax+04h],ecx
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
; Line 42:	    ResourceInfo(int Language) : language(Language), memoryFlags(0), characteristics(0), version(0) {} 
L_17732:
	ret
section code
	section vsc@ResourceInfo@SetFlags$qui virtual
@ResourceInfo@SetFlags$qui:
; Line 43:	    void SetFlags(unsigned flags) { memoryFlags = flags; } 
L_17739:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	mov	dword [ecx],eax
L_17740:
	ret
section code
	section vsc@Point@$bctr$qv virtual
@Point@$bctr$qv:
; Line 38:	    Point() : x(0), y(0) {} 
L_17747:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_17748:
	ret
section code
	section vsc@Resource@$bctr$q22@Resource@ResourceTyperx10ResourceIdrx12ResourceInfo virtual
@Resource@$bctr$q22@Resource@ResourceTyperx10ResourceIdrx12ResourceInfo:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
	add	esp,byte 0ffffffe8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_17755:
	mov	ecx,dword [esp+010h+028h]
	mov	edi,dword [esp+0ch+028h]
	mov	ebp,dword [esp+08h+028h]
	mov	ebx,dword [esp+04h+028h]
	mov	edx,0ch+@Resource@_$vt
	mov	eax,ebx
	mov	dword [eax],edx
	mov	edx,ebx
	add	edx,byte 04h
	mov	eax,ecx
	mov	eax,dword [eax]
	mov	esi,edx
	mov	dword [esi],eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx+08h]
	mov	dword [edx+08h],eax
	mov	eax,dword [ecx+0ch]
	mov	dword [edx+0ch],eax
L_17773:
	mov	esi,ebx
	add	esi,byte 014h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_17789:
	mov	esi,ebx
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [edi+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,edi
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_17805:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
	mov	eax,ebx
L_17756:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 018h
	ret
section code
	section vsc@Resource@$bctr$qrx10ResourceIdrxn0rx12ResourceInfo virtual
@Resource@$bctr$qrx10ResourceIdrxn0rx12ResourceInfo:
; Line 72:	    Resource(const ResourceId& ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
	add	esp,byte 0ffffffe8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_17811:
	mov	ecx,dword [esp+010h+028h]
	mov	edi,dword [esp+0ch+028h]
	mov	ebp,dword [esp+08h+028h]
	mov	ebx,dword [esp+04h+028h]
	mov	edx,0ch+@Resource@_$vt
	mov	eax,ebx
	mov	dword [eax],edx
	mov	edx,ebx
	add	edx,byte 04h
	mov	eax,ecx
	mov	eax,dword [eax]
	mov	esi,edx
	mov	dword [esi],eax
	mov	eax,dword [ecx+04h]
	mov	dword [edx+04h],eax
	mov	eax,dword [ecx+08h]
	mov	dword [edx+08h],eax
	mov	eax,dword [ecx+0ch]
	mov	dword [edx+0ch],eax
L_17829:
	mov	esi,ebx
	add	esi,byte 014h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebp
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_17845:
	mov	esi,ebx
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [edi+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,edi
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_17861:
; Line 72:	    Resource(const ResourceId& ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
	mov	eax,ebx
L_17812:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 018h
	ret
section code
	section vsc@Resource@$bdtr$qv virtual
@Resource@$bdtr$qv:
; Line 73:	    virtual ~Resource() {} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
L_17867:
	mov	ebx,dword [esp+04h+010h]
	mov	eax,ebx
	add	eax,byte 030h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_17883:
	mov	eax,ebx
	add	eax,byte 014h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_17897:
L_17911:
L_17868:
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@Resource@ReadRC$qr6RCFile virtual
@Resource@ReadRC$qr6RCFile:
; Line 76:	    virtual void ReadRC(RCFile& rcFile) {} 
L_17917:
L_17918:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8Resource#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$8Resource#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_17925:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_17926:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#unique_ptr$8Resource#default_delete$n0~~p#__tree_node$#unique_ptr$n0#default_delete$n0~~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#unique_ptr$8Resource#default_delete$n0~~p#__tree_node$#unique_ptr$n0#default_delete$n0~~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_17933:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_17934:
	ret
section code
	section vsc@ResFile@lt@$bctr$qv virtual
@ResFile@lt@$bctr$qv:
L_17941:
	mov	eax,dword [esp+04h]
L_17942:
	ret
section code
	section vsc@Accelerators@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@Accelerators@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 54:	    Accelerators(const ResourceId& Id, const ResourceInfo& info) : Resource(eAccelerators, Id, info) {} 
	add	esp,byte 0ffffffcch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_17949:
	mov	eax,dword [esp+0ch+044h]
	mov	ecx,dword [esp+08h+044h]
	mov	edx,dword [esp+04h+044h]
	mov	dword [esp-04h+044h],edx
	mov	edi,dword [esp-04h+044h]
	mov	dword [esp-08h+044h],09h
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_17982:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+044h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_17998:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_18014:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_17967:
	mov	ecx,0ch+@Accelerators@_$vt
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+044h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bctr$qv
	pop	ecx
L_18031:
; Line 54:	    Accelerators(const ResourceId& Id, const ResourceInfo& info) : Resource(eAccelerators, Id, info) {} 
	mov	eax,dword [esp-04h+044h]
L_17950:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#allocator$17@Accelerators@Key~@$bctr$qv virtual
@std@__1@#allocator$17@Accelerators@Key~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_18037:
	mov	eax,dword [esp+04h]
L_18038:
	ret
section code
	section vsc@std@__1@#allocator$p17@Accelerators@Key~@$bctr$qv virtual
@std@__1@#allocator$p17@Accelerators@Key~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_18045:
	mov	eax,dword [esp+04h]
L_18046:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@$bctr$qppn0 virtual
@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@$bctr$qppn0:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_18053:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18071:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_18087:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18054:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@$bctr$qppn0 virtual
@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@$bctr$qppn0:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_18093:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18126:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18142:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_18158:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18111:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_18094:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bctr$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_18165:
	mov	eax,dword [esp+04h+020h]
L_18183:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18229:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18245:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_18261:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18214:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_18199:
; Line 336:	} 
L_18166:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bctr$qv virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_18269:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_18270:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_18277:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18295:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_18311:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18278:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_18317:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18350:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18366:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_18382:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18335:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_18318:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bctr$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_18389:
	mov	ebx,dword [esp+04h+024h]
L_18407:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18453:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18469:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_18485:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18438:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_18423:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_18390:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$17@Accelerators@Key#allocator$n0~~@$bctr$qv virtual
@std@__1@#deque$17@Accelerators@Key#allocator$n0~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_18493:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_18494:
	pop	ebx
	ret
section code
	section vsc@Bitmap@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@Bitmap@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 38:	    Bitmap(const ResourceId& Id, const ResourceInfo& info) : Resource(eBitmap, Id, info), data(nullptr) {} 
	add	esp,byte 0ffffffb8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_18501:
	mov	edx,dword [esp+0ch+058h]
	mov	ecx,dword [esp+08h+058h]
	mov	eax,dword [esp+04h+058h]
	mov	dword [esp-04h+058h],eax
	mov	edi,dword [esp-04h+058h]
	mov	eax,02h
	mov	ebx,ecx
	mov	esi,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],esi
	mov	esi,edi
	add	esi,byte 04h
	mov	ecx,edx
	mov	ecx,dword [ecx]
	mov	ebp,esi
	mov	dword [ebp],ecx
	mov	ecx,dword [edx+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [edx+0ch]
	mov	dword [esi+0ch],ecx
L_18534:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_18550:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_18566:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_18519:
	mov	ecx,0ch+@Bitmap@_$vt
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax],ecx
	mov	ebx,dword [esp-04h+058h]
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [esp-014h+058h],eax
	lea	eax,[esp-014h+058h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18628:
	mov	eax,dword [eax]
	mov	dword [esp-0ch+058h],eax
	lea	eax,[esp-0ch+058h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	mov	dword [ebx],eax
	mov	eax,ebx
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$12ResourceData~@$bctr$qv
	pop	ecx
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_18613:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_18598:
; Line 2493:	        } 
L_18583:
	mov	eax,dword [esp-04h+058h]
; Line 38:	    Bitmap(const ResourceId& Id, const ResourceInfo& info) : Resource(eBitmap, Id, info), data(nullptr) {} 
L_18502:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 048h
	ret
section code
	section vsc@std@__1@#default_delete$12ResourceData~@$bctr$qv virtual
@std@__1@#default_delete$12ResourceData~@$bctr$qv:
	push	ebp
	mov	ebp,esp
L_18637:
	mov	eax,dword [ebp+08h]
L_18638:
	pop	ebp
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0 virtual
@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bctr$qpn0:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_18645:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18663:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_18679:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_18646:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@$bctr$qpn0 virtual
@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@$bctr$qpn0:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_18685:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18718:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18734:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_18750:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_18703:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_18686:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@$bctr$q9nullptr_t virtual
@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@$bctr$q9nullptr_t:
; Line 2488:	     constexpr unique_ptr(nullptr_t) noexcept 
; Line 2489:	        : __ptr_(pointer()) 
; Line 2490:	        { 
	add	esp,byte 0ffffffe4h
L_18757:
	mov	eax,dword [esp+04h+01ch]
	mov	ecx,eax
	xor	edx,edx
	mov	dword [esp-018h+01ch],edx
	lea	edx,[esp-018h+01ch]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18805:
	mov	edx,dword [edx]
	mov	dword [esp-010h+01ch],edx
	lea	edx,[esp-010h+01ch]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18821:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_18837:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_18790:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_18775:
; Line 2493:	        } 
L_18758:
	add	esp,byte 01ch
	ret
section code
	section vsc@GroupIcon@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@GroupIcon@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 87:	    GroupIcon(const ResourceId& Id, const ResourceInfo& info) : Resource(eGroupIcon, Id, info) {} 
	add	esp,byte 0ffffffcch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_18845:
	mov	eax,dword [esp+0ch+044h]
	mov	ecx,dword [esp+08h+044h]
	mov	edx,dword [esp+04h+044h]
	mov	dword [esp-04h+044h],edx
	mov	edi,dword [esp-04h+044h]
	mov	dword [esp-08h+044h],0eh
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_18878:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+044h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_18894:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_18910:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_18863:
	mov	ecx,0ch+@GroupIcon@_$vt
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+044h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bctr$qv
	pop	ecx
L_18927:
; Line 87:	    GroupIcon(const ResourceId& Id, const ResourceInfo& info) : Resource(eGroupIcon, Id, info) {} 
	mov	eax,dword [esp-04h+044h]
L_18846:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#allocator$p4Icon~@$bctr$qv virtual
@std@__1@#allocator$p4Icon~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_18933:
	mov	eax,dword [esp+04h]
L_18934:
	ret
section code
	section vsc@std@__1@#allocator$pp4Icon~@$bctr$qv virtual
@std@__1@#allocator$pp4Icon~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_18941:
	mov	eax,dword [esp+04h]
L_18942:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@$bctr$qpppn0 virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@$bctr$qpppn0:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_18949:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_18967:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_18983:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_18950:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@$bctr$qpppn0 virtual
@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@$bctr$qpppn0:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_18989:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19022:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19038:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_19054:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19007:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_18990:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bctr$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_19061:
	mov	eax,dword [esp+04h+020h]
L_19079:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19125:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19141:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_19157:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19110:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19095:
; Line 336:	} 
L_19062:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qv virtual
@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_19165:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_19166:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_19173:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19191:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_19207:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19174:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_19213:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19246:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19262:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_19278:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19231:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19214:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bctr$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_19285:
	mov	ebx,dword [esp+04h+024h]
L_19303:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19349:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19365:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_19381:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19334:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19319:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_19286:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$p4Icon#allocator$pn0~~@$bctr$qv virtual
@std@__1@#deque$p4Icon#allocator$pn0~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_19389:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_19390:
	pop	ebx
	ret
section code
	section vsc@GroupCursor@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@GroupCursor@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 56:	    GroupCursor(const ResourceId& Id, const ResourceInfo& info) : Resource(eGroupCursor, Id, info) {} 
	add	esp,byte 0ffffffcch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_19397:
	mov	eax,dword [esp+0ch+044h]
	mov	ecx,dword [esp+08h+044h]
	mov	edx,dword [esp+04h+044h]
	mov	dword [esp-04h+044h],edx
	mov	edi,dword [esp-04h+044h]
	mov	dword [esp-08h+044h],0ch
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_19430:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+044h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_19446:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_19462:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_19415:
	mov	ecx,0ch+@GroupCursor@_$vt
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+044h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bctr$qv
	pop	ecx
L_19479:
; Line 56:	    GroupCursor(const ResourceId& Id, const ResourceInfo& info) : Resource(eGroupCursor, Id, info) {} 
	mov	eax,dword [esp-04h+044h]
L_19398:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#allocator$p6Cursor~@$bctr$qv virtual
@std@__1@#allocator$p6Cursor~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_19485:
	mov	eax,dword [esp+04h]
L_19486:
	ret
section code
	section vsc@std@__1@#allocator$pp6Cursor~@$bctr$qv virtual
@std@__1@#allocator$pp6Cursor~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_19493:
	mov	eax,dword [esp+04h]
L_19494:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@$bctr$qpppn0 virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@$bctr$qpppn0:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_19501:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19519:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_19535:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19502:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@$bctr$qpppn0 virtual
@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@$bctr$qpppn0:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_19541:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19574:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19590:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_19606:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19559:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19542:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bctr$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_19613:
	mov	eax,dword [esp+04h+020h]
L_19631:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19677:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19693:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_19709:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19662:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19647:
; Line 336:	} 
L_19614:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qv virtual
@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_19717:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_19718:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_19725:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19743:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_19759:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19726:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_19765:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19798:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19814:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_19830:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19783:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19766:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bctr$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_19837:
	mov	ebx,dword [esp+04h+024h]
L_19855:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19901:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19917:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_19933:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19886:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_19871:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_19838:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$p6Cursor#allocator$pn0~~@$bctr$qv virtual
@std@__1@#deque$p6Cursor#allocator$pn0~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_19941:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_19942:
	pop	ebx
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_19949:
	mov	eax,dword [esp+04h]
L_19950:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_19957:
	mov	eax,dword [esp+04h]
L_19958:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_19965:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_19983:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_19999:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_19966:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_20005:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20038:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20054:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_20070:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20023:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20006:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_20077:
	mov	eax,dword [esp+04h+020h]
L_20095:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20141:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20157:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_20173:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20126:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20111:
; Line 336:	} 
L_20078:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_20181:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_20182:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_20189:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20207:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_20223:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20190:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_20229:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20262:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20278:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_20294:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20247:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20230:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_20301:
	mov	ebx,dword [esp+04h+024h]
L_20319:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20365:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20381:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_20397:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20350:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20335:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_20302:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_20405:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_20406:
	pop	ebx
	ret
section code
	section vsc@Dialog@$bctr$qrx10ResourceIdrx12ResourceInfo4bool virtual
@Dialog@$bctr$qrx10ResourceIdrx12ResourceInfo4bool:
; Line 93:	    Dialog(const ResourceId& Id, const ResourceInfo& info, bool Extended) : 
; Line 94:	        Resource(eDialog, Id, info), 
; Line 95:	        style(0), 
; Line 96:	        exStyle(0), 
; Line 97:	        pointSize(0), 
; Line 98:	        extended(Extended), 
; Line 99:	        weight(0), 
; Line 100:	        italics(0), 
; Line 101:	        charset(1), 
; Line 102:	        helpIndex(0) 
; Line 103:	    { 
	add	esp,byte 0ffffffb8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_20413:
	mov	al,byte [esp+010h+058h]
	mov	byte [esp-0ch+058h],al
	mov	eax,dword [esp+0ch+058h]
	mov	ecx,dword [esp+08h+058h]
	mov	edx,dword [esp+04h+058h]
	mov	dword [esp-04h+058h],edx
	mov	edi,dword [esp-04h+058h]
	mov	dword [esp-08h+058h],05h
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_20446:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+058h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_20462:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_20478:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_20431:
	mov	ecx,0ch+@Dialog@_$vt
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+04ch],00h
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+050h],00h
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+054h],00h
	mov	eax,dword [esp-04h+058h]
	add	eax,byte 058h
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_20495:
	mov	eax,dword [esp-04h+058h]
	add	eax,byte 060h
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 38:	    Point() : x(0), y(0) {} 
L_20511:
	mov	ebx,dword [esp-04h+058h]
	add	ebx,byte 068h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebx+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_20527:
	mov	ebx,dword [esp-04h+058h]
	add	ebx,dword 084h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebx+018h],0ffffffffh
; Line 36:	    ResourceId() : id(-1) {} 
L_20543:
	mov	eax,dword [esp-04h+058h]
	add	eax,dword 0a0h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	eax,dword [esp-04h+058h]
	add	eax,dword 0b8h
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	eax,dword [esp-04h+058h]
	add	eax,dword 0d0h
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
L_20559:
	mov	al,byte [esp-0ch+058h]
	mov	ecx,dword [esp-04h+058h]
	mov	byte [ecx+0fch],al
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+0100h],00h
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+0104h],00h
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+0108h],01h
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax+010ch],00h
; Line 104:	    } 
	mov	eax,dword [esp-04h+058h]
L_20414:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 048h
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_20565:
	mov	eax,dword [esp+04h]
L_20566:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_20573:
	mov	eax,dword [esp+04h]
L_20574:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_20581:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20599:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_20615:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20582:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_20621:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20654:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20670:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_20686:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20639:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20622:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_20693:
	mov	eax,dword [esp+04h+020h]
L_20711:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20757:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20773:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_20789:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20742:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20727:
; Line 336:	} 
L_20694:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_20797:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_20798:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_20805:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20823:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_20839:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20806:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_20845:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20878:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20894:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_20910:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20863:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20846:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_20917:
	mov	ebx,dword [esp+04h+024h]
L_20935:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20981:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_20997:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_21013:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_20966:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_20951:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_20918:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_21021:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_21022:
	pop	ebx
	ret
section code
	section vsc@DlgInclude@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@DlgInclude@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 38:	    DlgInclude(const ResourceId& Id, const ResourceInfo& info) : Resource(eDlgInclude, Id, info), data(nullptr) {} 
	add	esp,byte 0ffffffb8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_21029:
	mov	edx,dword [esp+0ch+058h]
	mov	ecx,dword [esp+08h+058h]
	mov	eax,dword [esp+04h+058h]
	mov	dword [esp-04h+058h],eax
	mov	edi,dword [esp-04h+058h]
	mov	eax,011h
	mov	ebx,ecx
	mov	esi,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],esi
	mov	esi,edi
	add	esi,byte 04h
	mov	ecx,edx
	mov	ecx,dword [ecx]
	mov	ebp,esi
	mov	dword [ebp],ecx
	mov	ecx,dword [edx+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [edx+0ch]
	mov	dword [esi+0ch],ecx
L_21062:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_21078:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_21094:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_21047:
	mov	ecx,0ch+@DlgInclude@_$vt
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax],ecx
	mov	ebx,dword [esp-04h+058h]
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [esp-014h+058h],eax
	lea	eax,[esp-014h+058h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21156:
	mov	eax,dword [eax]
	mov	dword [esp-0ch+058h],eax
	lea	eax,[esp-0ch+058h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	mov	dword [ebx],eax
	mov	eax,ebx
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$12ResourceData~@$bctr$qv
	pop	ecx
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_21141:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_21126:
; Line 2493:	        } 
L_21111:
	mov	eax,dword [esp-04h+058h]
; Line 38:	    DlgInclude(const ResourceId& Id, const ResourceInfo& info) : Resource(eDlgInclude, Id, info), data(nullptr) {} 
L_21030:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 048h
	ret
section code
	section vsc@FileHeader@$bctr$qv virtual
@FileHeader@$bctr$qv:
; Line 36:	    FileHeader() : Resource(eFileHeader, ResourceId(0), ResourceInfo(0)) {} 
	push	ebp
	mov	ebp,esp
	add	esp,0ffffff54h
	push	ebx
	push	esi
	push	edi
L_21165:
	mov	eax,dword [ebp+08h]
	mov	dword [ebp-04h],eax
	push	dword @$xc@FileHeader@$bctr$qv
	lea	eax,[ebp-040h]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_21168:
	mov	esi,dword [ebp-04h]
	xor	ebx,ebx
	xor	edi,edi
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-040h+014h],01h
	mov	dword [ebp-0ach+018h],edi
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_21200:
	mov	dword [ebp-040h+014h],02h
	lea	eax,[ebp-090h]
	xor	ecx,ecx
	mov	dword [ebp-090h],00h
	mov	dword [ebp-090h+04h],ecx
	mov	dword [ebp-090h+08h],00h
	mov	dword [ebp-090h+0ch],00h
; Line 42:	    ResourceInfo(int Language) : language(Language), memoryFlags(0), characteristics(0), version(0) {} 
L_21216:
	mov	dword [ebp-040h+014h],03h
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,esi
	mov	dword [ecx],edx
	mov	ecx,esi
	add	ecx,byte 04h
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [ebp-090h+04h]
	mov	dword [ecx+04h],eax
	mov	eax,dword [ebp-090h+08h]
	mov	dword [ecx+08h],eax
	mov	eax,dword [ebp-090h+0ch]
	mov	dword [ecx+0ch],eax
L_21232:
	mov	dword [ebp-040h+014h],04h
	mov	eax,esi
	add	eax,byte 014h
	mov	edi,eax
	mov	eax,edi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-040h+014h],05h
	mov	dword [edi+018h],ebx
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_21248:
	mov	dword [ebp-040h+014h],06h
	mov	ebx,esi
	add	ebx,byte 030h
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [ebp-040h+014h],07h
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp-0ach+018h]
	mov	dword [ebx+018h],eax
; Line 43:	        name = Old.name; 
	lea	eax,[ebp-0ach]
	push	eax
	mov	eax,ebx
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_21264:
	mov	dword [ebp-040h+014h],08h
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_21185:
	mov	dword [ebp-040h+014h],09h
	mov	ecx,0ch+@FileHeader@_$vt
	mov	eax,dword [ebp-04h]
	mov	dword [eax],ecx
; Line 36:	    FileHeader() : Resource(eFileHeader, ResourceId(0), ResourceInfo(0)) {} 
	mov	dword [ebp-040h+014h],0ah
L_21279:
	mov	dword [ebp-040h+014h],0bh
	lea	eax,[ebp-0ach]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_21293:
	mov	eax,dword [ebp-04h]
L_21166:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@FileHeader@$bctr$qv virtual
@$xc@FileHeader@$bctr$qv:
	dd	00h
	dd	0ffffffc0h
	dd	0400h
	dd	@$xt@10ResourceId+0
	dd	0ffffff54h
	dd	02h
	dd	0bh
	dd	0400h
	dd	@$xt@12ResourceInfo+0
	dd	0ffffff70h
	dd	03h
	dd	0ah
	dd	00h
section code
	section vsc@GenericResource@$bctr$qrx10ResourceIdrxn0rx12ResourceInfo virtual
@GenericResource@$bctr$qrx10ResourceIdrxn0rx12ResourceInfo:
; Line 38:	    GenericResource(const ResourceId& type, const ResourceId& Id, const ResourceInfo& info) : 
; Line 39:	        Resource(type, Id, info), 
; Line 40:	        data(nullptr) 
; Line 41:	    { 
	add	esp,byte 0ffffffb4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_21299:
	mov	ecx,dword [esp+010h+05ch]
	mov	eax,dword [esp+0ch+05ch]
	mov	edx,dword [esp+08h+05ch]
	mov	ebx,dword [esp+04h+05ch]
	mov	esi,ebx
	mov	dword [esp-04h+05ch],esi
	mov	dword [esp-08h+05ch],edx
	mov	edi,eax
	mov	edx,0ch+@Resource@_$vt
	mov	eax,dword [esp-04h+05ch]
	mov	dword [eax],edx
	mov	eax,dword [esp-04h+05ch]
	add	eax,byte 04h
	mov	edx,ecx
	mov	esi,dword [edx]
	mov	edx,eax
	mov	dword [edx],esi
	mov	edx,dword [ecx+04h]
	mov	dword [eax+04h],edx
	mov	edx,dword [ecx+08h]
	mov	dword [eax+08h],edx
	mov	ecx,dword [ecx+0ch]
	mov	dword [eax+0ch],ecx
L_21332:
	mov	esi,dword [esp-04h+05ch]
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+05ch]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebp+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebp
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_21348:
	mov	esi,dword [esp-04h+05ch]
	add	esi,byte 030h
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [edi+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,edi
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_21364:
; Line 72:	    Resource(const ResourceId& ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_21317:
	mov	ecx,0ch+@GenericResource@_$vt
	mov	eax,ebx
	mov	dword [eax],ecx
	mov	esi,ebx
	add	esi,byte 04ch
	xor	eax,eax
	mov	dword [esp-018h+05ch],eax
	lea	eax,[esp-018h+05ch]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21426:
	mov	eax,dword [eax]
	mov	dword [esp-010h+05ch],eax
	lea	eax,[esp-010h+05ch]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	ecx,dword [eax]
	mov	eax,esi
	mov	dword [eax],ecx
	mov	eax,esi
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$12ResourceData~@$bctr$qv
	pop	ecx
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_21411:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_21396:
; Line 2493:	        } 
L_21381:
; Line 42:	    } 
	mov	eax,ebx
L_21300:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 04ch
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_21435:
	mov	eax,dword [esp+04h]
L_21436:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_21443:
	mov	eax,dword [esp+04h]
L_21444:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_21451:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21469:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_21485:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_21452:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_21491:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21524:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21540:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_21556:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_21509:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_21492:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_21563:
	mov	eax,dword [esp+04h+020h]
L_21581:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21627:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21643:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_21659:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_21612:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_21597:
; Line 336:	} 
L_21564:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_21667:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_21668:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_21675:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21693:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_21709:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_21676:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_21715:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21748:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21764:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_21780:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_21733:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_21716:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_21787:
	mov	ebx,dword [esp+04h+024h]
L_21805:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21851:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_21867:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_21883:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_21836:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_21821:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_21788:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_21891:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_21892:
	pop	ebx
	ret
section code
	section vsc@Menu@$bctr$qrx10ResourceIdrx12ResourceInfo4bool virtual
@Menu@$bctr$qrx10ResourceIdrx12ResourceInfo4bool:
; Line 91:	    Menu(const ResourceId& Id, const ResourceInfo& info, bool Ext) : Resource(eMenu, Id, info), helpIndex(0), extended(Ext) {} 
	add	esp,byte 0ffffffc8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_21899:
	mov	al,byte [esp+010h+048h]
	mov	byte [esp-0ch+048h],al
	mov	eax,dword [esp+0ch+048h]
	mov	ecx,dword [esp+08h+048h]
	mov	edx,dword [esp+04h+048h]
	mov	dword [esp-04h+048h],edx
	mov	edi,dword [esp-04h+048h]
	mov	dword [esp-08h+048h],04h
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_21932:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+048h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_21948:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_21964:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_21917:
	mov	ecx,0ch+@Menu@_$vt
	mov	eax,dword [esp-04h+048h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+048h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
L_21981:
	mov	eax,dword [esp-04h+048h]
	mov	dword [eax+078h],00h
	mov	al,byte [esp-0ch+048h]
	mov	ecx,dword [esp-04h+048h]
	mov	byte [ecx+07ch],al
; Line 91:	    Menu(const ResourceId& Id, const ResourceInfo& info, bool Ext) : Resource(eMenu, Id, info), helpIndex(0), extended(Ext) {} 
	mov	eax,dword [esp-04h+048h]
L_21900:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 038h
	ret
section code
	section vsc@MessageTable@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@MessageTable@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 38:	    MessageTable(const ResourceId& Id, const ResourceInfo& info) : Resource(eMessageTable, Id, info), data(nullptr) {} 
	add	esp,byte 0ffffffb8h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_21987:
	mov	edx,dword [esp+0ch+058h]
	mov	ecx,dword [esp+08h+058h]
	mov	eax,dword [esp+04h+058h]
	mov	dword [esp-04h+058h],eax
	mov	edi,dword [esp-04h+058h]
	mov	eax,0bh
	mov	ebx,ecx
	mov	esi,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],esi
	mov	esi,edi
	add	esi,byte 04h
	mov	ecx,edx
	mov	ecx,dword [ecx]
	mov	ebp,esi
	mov	dword [ebp],ecx
	mov	ecx,dword [edx+04h]
	mov	dword [esi+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [esi+08h],ecx
	mov	ecx,dword [edx+0ch]
	mov	dword [esi+0ch],ecx
L_22020:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_22036:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_22052:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_22005:
	mov	ecx,0ch+@MessageTable@_$vt
	mov	eax,dword [esp-04h+058h]
	mov	dword [eax],ecx
	mov	ebx,dword [esp-04h+058h]
	add	ebx,byte 04ch
	xor	eax,eax
	mov	dword [esp-014h+058h],eax
	lea	eax,[esp-014h+058h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_22114:
	mov	eax,dword [eax]
	mov	dword [esp-0ch+058h],eax
	lea	eax,[esp-0ch+058h]
	push	eax
	call	@std@__1@#forward$p12ResourceData~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	mov	dword [ebx],eax
	mov	eax,ebx
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$12ResourceData~@$bctr$qv
	pop	ecx
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
; Line 1955:	        : __first_(std::__1::forward<_T1_param>(__t1)) {} 
L_22099:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
; Line 2317:	        : base(std::__1::forward<_T1_param>(__t1)) {} 
L_22084:
; Line 2493:	        } 
L_22069:
	mov	eax,dword [esp-04h+058h]
; Line 38:	    MessageTable(const ResourceId& Id, const ResourceInfo& info) : Resource(eMessageTable, Id, info), data(nullptr) {} 
L_21988:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 048h
	ret
section code
	section vsc@RCData@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@RCData@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 39:	    RCData(const ResourceId& Id, const ResourceInfo& info) : Resource(eRCData, Id, info) {} 
	add	esp,byte 0ffffffcch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_22123:
	mov	eax,dword [esp+0ch+044h]
	mov	ecx,dword [esp+08h+044h]
	mov	edx,dword [esp+04h+044h]
	mov	dword [esp-04h+044h],edx
	mov	edi,dword [esp-04h+044h]
	mov	dword [esp-08h+044h],0ah
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_22156:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+044h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_22172:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_22188:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_22141:
	mov	ecx,0ch+@RCData@_$vt
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+044h]
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
L_22205:
; Line 39:	    RCData(const ResourceId& Id, const ResourceInfo& info) : Resource(eRCData, Id, info) {} 
	mov	eax,dword [esp-04h+044h]
L_22124:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@StringTable@$bdtr$qv virtual
@StringTable@$bdtr$qv:
; Line 39:	    virtual ~StringTable() {} 
	push	ecx
	push	ebx
L_22211:
	mov	ebx,dword [esp+04h+08h]
L_22227:
	push	byte 018h
	push	byte 010h
	push	dword @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv
	push	byte 00h
	mov	eax,ebx
	add	eax,byte 050h
	push	eax
	call	dword [@__arrCall$qpvpvpvii]
	add	esp,byte 014h
	push	ebx
	call	@Resource@$bdtr$qv
	pop	ecx
L_22212:
	pop	ebx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__value_type$ip11StringTable~@$bdtr$qv virtual
@std@__1@#__value_type$ip11StringTable~@$bdtr$qv:
; Line 617:	    ~__value_type() {__cc.~value_type();} 
	push	ecx
	push	ecx
	push	ecx
L_22233:
L_22249:
L_22263:
L_22277:
L_22234:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~@deallocate$qp#__tree_node$#__value_type$ipn0~pv~ui virtual
@std@__1@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~@deallocate$qp#__tree_node$#__value_type$ipn0~pv~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_22283:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_22301:
L_22284:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@deallocate$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__tree_node$#__value_type$ipn0~pv~ui virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@deallocate$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__tree_node$#__value_type$ipn0~pv~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_22307:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_22325:
L_22308:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_22331:
	mov	eax,dword [esp+04h]
L_22332:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_22339:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_22340:
	ret
section code
	section vsc@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@first$qv virtual
@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_22347:
	mov	eax,dword [esp+04h+04h]
L_22365:
L_22348:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@second$qv virtual
@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_22371:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_22389:
L_22372:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@__end_node$qv virtual
@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@__end_node$qv:
; Line 832:	    __node_pointer __end_node() noexcept 
; Line 833:	    { 
	add	esp,byte 0fffffff0h
L_22395:
	mov	eax,dword [esp+04h+010h]
; Line 837:	               ); 
	add	eax,byte 04h
L_22443:
L_22428:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_22460:
L_22413:
	and	eax,eax
	jne	short	L_22465
L_22464:
L_22465:
; Line 838:	    } 
L_22396:
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@__node_alloc$qv virtual
@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@__node_alloc$qv:
; Line 848:	          __node_allocator& __node_alloc() noexcept {return __pair1_.second();} 
	push	ecx
	push	ecx
L_22469:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
	add	eax,byte 04h
L_22502:
L_22487:
L_22470:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@__root$qv virtual
@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@__root$qv:
; Line 874:	    __node_pointer __root() noexcept 
; Line 875:	        {return static_cast<__node_pointer>      (__end_node()->__left_);} 
	add	esp,byte 0ffffffe8h
L_22509:
	mov	eax,dword [esp+04h+018h]
; Line 837:	               ); 
	add	eax,byte 04h
L_22572:
L_22557:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_22589:
L_22542:
	mov	dword [esp-018h+018h],eax
	and	eax,eax
	je	short	L_22593
	mov	eax,dword [esp-018h+018h]
	jmp	short	L_22527
L_22593:
	mov	eax,dword [esp-018h+018h]
L_22594:
; Line 838:	    } 
L_22527:
	mov	eax,dword [eax]
	and	eax,eax
	jne	short	L_22597
L_22596:
L_22597:
L_22510:
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bctr$qv:
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_22601:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_22602:
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bctr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bctr$qv:
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_22609:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_22610:
	ret
section code
	section vsc@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@$bdtr$qv virtual
@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@$bdtr$qv:
	add	esp,byte 0ffffffcch
	push	ebx
L_22617:
	mov	ebx,dword [esp+04h+038h]
; Line 1433:	    destroy(__root()); 
	mov	eax,ebx
; Line 837:	               ); 
	add	eax,byte 04h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@first$qv
	pop	ecx
L_22680:
	push	eax
	call	@std@__1@#addressof$#__tree_end_node$p#__tree_node_base$pv~~~$qr#__tree_end_node$p#__tree_node_base$pv~~
	pop	ecx
L_22665:
	mov	dword [esp-034h+038h],eax
	and	eax,eax
	je	short	L_22684
	mov	eax,dword [esp-034h+038h]
	jmp	short	L_22650
L_22684:
	mov	eax,dword [esp-034h+038h]
L_22685:
; Line 838:	    } 
L_22650:
	mov	eax,dword [eax]
	mov	dword [esp-030h+038h],eax
	and	eax,eax
	je	short	L_22687
	mov	eax,dword [esp-030h+038h]
	jmp	short	L_22635
L_22687:
	mov	eax,dword [esp-030h+038h]
L_22688:
L_22635:
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@destroy$qp#__tree_node$#__value_type$ipn0~pv~
	pop	ecx
	pop	ecx
; Line 1434:	} 
	mov	eax,ebx
	add	eax,dword 0ch+04h
	push	eax
	call	@std@__1@#less$i~@$bdtr$qv
	pop	ecx
L_22727:
L_22714:
L_22701:
L_22769:
L_22783:
L_22756:
L_22743:
L_22618:
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bcall$qp#__tree_node$#__value_type$ipn0~pv~ virtual
@std@__1@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bcall$qp#__tree_node$#__value_type$ipn0~pv~:
; Line 531:	    void operator()(pointer __p) noexcept 
; Line 532:	    { 
	add	esp,byte 0ffffff8ch
	push	ebx
L_22791:
	mov	ebx,dword [esp+08h+078h]
	mov	ecx,dword [esp+04h+078h]
; Line 533:	        if (__value_constructed) 
	cmp	byte [ecx+04h],byte 00h
	je	short	L_22794
; Line 534:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_)); 
	mov	eax,dword [ecx]
	mov	ecx,ebx
	add	ecx,byte 010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_22836:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_22867:
L_22852:
	lea	eax,[esp-071h+084h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	add	esp,byte 0ch
L_22895:
L_22882:
L_22821:
L_22794:
; Line 535:	        if (__p) 
	and	ebx,ebx
	je	short	L_22799
; Line 536:	            __alloc_traits::deallocate(__na_, __p, 1); 
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_22928:
L_22913:
L_22799:
; Line 537:	    } 
L_22792:
	pop	ebx
	add	esp,byte 074h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_22935:
	mov	eax,dword [esp+04h]
L_22936:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_22943:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_22944:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@first$qv virtual
@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_22951:
	mov	eax,dword [esp+04h+04h]
L_22969:
L_22952:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@second$qv virtual
@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_22975:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_22993:
L_22976:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv virtual
@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,0ffffff70h
	push	ebx
	push	esi
	push	edi
L_22999:
	mov	eax,dword [esp+04h+09ch]
	xor	edx,edx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	ecx,eax
L_23052:
L_23037:
	mov	ebx,dword [ecx]
; Line 2628:	        __ptr_.first() = __p; 
	mov	ecx,eax
L_23084:
L_23069:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	and	ebx,ebx
	je	short	L_23005
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	edi,eax
	add	edi,byte 04h
L_23141:
L_23126:
; Line 533:	        if (__value_constructed) 
	cmp	byte [edi+04h],byte 00h
	je	short	L_23089
; Line 534:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_)); 
	mov	eax,dword [edi]
	mov	ecx,ebx
	add	ecx,byte 010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_23175:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	esi,esp
	lea	eax,[esp-08dh+0a8h]
	push	eax
	call	@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~@$bctr$qv
	pop	ecx
	push	eax
	push	esi
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	add	esp,byte 0ch
	lea	eax,[esp-08dh+09ch]
	push	eax
	call	@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~@$bdtr$qv
	pop	ecx
L_23160:
L_23089:
; Line 535:	        if (__p) 
	and	ebx,ebx
	je	short	L_23094
; Line 536:	            __alloc_traits::deallocate(__na_, __p, 1); 
	mov	eax,dword [edi]
	push	byte 01h
	push	ebx
	push	eax
	call	@std@__1@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~@deallocate$qp#__tree_node$#__value_type$ipn0~pv~ui
	add	esp,byte 0ch
L_23192:
L_23094:
; Line 537:	    } 
L_23111:
L_23005:
; Line 2631:	    } 
L_23022:
L_23234:
L_23221:
L_23208:
L_23000:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,090h
	ret
section code
	section vsc@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@reset$qp#__tree_node$#__value_type$ipn0~pv~ virtual
@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@reset$qp#__tree_node$#__value_type$ipn0~pv~:
; Line 2626:	    { 
	add	esp,0ffffff70h
	push	ebx
	push	esi
L_23242:
	mov	edx,dword [esp+08h+098h]
	mov	eax,dword [esp+04h+098h]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	ecx,eax
L_23280:
L_23265:
	mov	ecx,dword [ecx]
	mov	dword [esp-04h+098h],ecx
; Line 2628:	        __ptr_.first() = __p; 
	mov	ecx,eax
L_23312:
L_23297:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+098h],byte 00h
	je	short	L_23245
; Line 2630:	            __ptr_.second()(__tmp); 
	add	eax,byte 04h
L_23369:
L_23354:
	mov	ebx,dword [esp-04h+098h]
; Line 533:	        if (__value_constructed) 
	cmp	byte [eax+04h],byte 00h
	je	short	L_23317
; Line 534:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_)); 
	mov	eax,dword [eax]
	mov	ecx,ebx
	add	ecx,byte 010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_23403:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	esi,esp
	lea	eax,[esp-08dh+0a4h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qv
	pop	ecx
L_23419:
	lea	eax,[esp-08dh+0a4h]
	push	eax
	push	esi
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	add	esp,byte 0ch
	lea	eax,[esp-08dh+098h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bdtr$qv
	pop	ecx
L_23433:
L_23388:
L_23317:
; Line 535:	        if (__p) 
	and	ebx,ebx
	je	short	L_23322
; Line 536:	            __alloc_traits::deallocate(__na_, __p, 1); 
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_23465:
L_23450:
L_23322:
; Line 537:	    } 
L_23339:
L_23245:
; Line 2631:	    } 
L_23243:
	pop	esi
	pop	ebx
	add	esp,090h
	ret
section code
	section vsc@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@destroy$qp#__tree_node$#__value_type$ipn0~pv~ virtual
@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@destroy$qp#__tree_node$#__value_type$ipn0~pv~:
	add	esp,byte 0ffffff80h
	push	ebx
	push	esi
L_23473:
	mov	ebx,dword [esp+08h+088h]
	mov	esi,dword [esp+04h+088h]
; Line 1440:	    if (__nd != nullptr) 
	and	ebx,ebx
	je	short	L_23476
; Line 1441:	    { 
; Line 1442:	        destroy(static_cast<__node_pointer>(__nd->__left_)); 
	mov	eax,dword [ebx]
	and	eax,eax
	jne	short	L_23486
L_23485:
L_23486:
	push	eax
	mov	eax,esi
	push	eax
	call	@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@destroy$qp#__tree_node$#__value_type$ipn0~pv~
	pop	ecx
	pop	ecx
; Line 1443:	        destroy(static_cast<__node_pointer>(__nd->__right_)); 
	mov	eax,dword [ebx+04h]
	and	eax,eax
	jne	short	L_23488
L_23487:
L_23488:
	push	eax
	mov	eax,esi
	push	eax
	call	@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@destroy$qp#__tree_node$#__value_type$ipn0~pv~
	pop	ecx
	pop	ecx
; Line 1444:	        __node_allocator& __na = __node_alloc(); 
	mov	eax,esi
	add	eax,byte 04h
	add	eax,byte 04h
L_23532:
L_23517:
L_23502:
; Line 1445:	        __node_traits::destroy(__na, std::__1::addressof(__nd->__value_)); 
	mov	ecx,ebx
	add	ecx,byte 010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_23567:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_23598:
L_23583:
	lea	eax,[esp-07dh+094h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	add	esp,byte 0ch
L_23626:
L_23613:
L_23552:
; Line 1446:	        __node_traits::deallocate(__na, __nd, 1); 
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_23659:
L_23644:
L_23476:
; Line 1448:	} 
L_23474:
	pop	esi
	pop	ebx
	add	esp,080h
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bctr$qv:
; Line 669:	    __map_iterator() noexcept {} 
	push	ecx
L_23666:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 644:	     __tree_iterator() noexcept 
; Line 646:	    : __ptr_(nullptr) 
L_23684:
L_23667:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bctr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bctr$qv:
; Line 734:	    __map_const_iterator() noexcept {} 
	push	ecx
L_23690:
	mov	eax,dword [esp+04h+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
; Line 719:	     __tree_const_iterator() noexcept 
; Line 721:	    : __ptr_(nullptr) 
L_23708:
L_23691:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bdtr$qv virtual
@std@__1@#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bdtr$qv:
L_23714:
L_23715:
	ret
section code
	section vsc@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bdtr$qv virtual
@std@__1@#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bdtr$qv:
	push	ecx
L_23720:
L_23734:
L_23721:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bdtr$qv virtual
@std@__1@#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~@$bdtr$qv:
L_23740:
L_23741:
	ret
section code
	section vsc@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bdtr$qv virtual
@std@__1@#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~@$bdtr$qv:
	push	ecx
L_23746:
L_23760:
L_23747:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bcall$qp#__tree_node$#__value_type$ipn0~pv~ virtual
@std@__1@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bcall$qp#__tree_node$#__value_type$ipn0~pv~:
; Line 561:	    void operator()(pointer __p) noexcept 
; Line 562:	    { 
	add	esp,0ffffff34h
	push	ebx
	push	esi
L_23766:
	mov	ebx,dword [esp+08h+0d4h]
	mov	esi,dword [esp+04h+0d4h]
; Line 563:	        if (__second_constructed) 
	cmp	byte [esi+05h],byte 00h
	je	short	L_23769
; Line 564:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_.__cc.second)); 
	mov	eax,dword [esi]
	mov	ecx,ebx
	add	ecx,dword 04h+010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_23816:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_23847:
L_23832:
	lea	eax,[esp-0cah+0e0h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0
	add	esp,byte 0ch
L_23875:
L_23862:
L_23801:
L_23769:
; Line 565:	        if (__first_constructed) 
	cmp	byte [esi+04h],byte 00h
	je	short	L_23774
; Line 566:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_.__cc.first)); 
	mov	eax,dword [esi]
	mov	ecx,ebx
	add	ecx,dword 010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_23910:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_23941:
L_23926:
	lea	eax,[esp-0c9h+0e0h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi
	add	esp,byte 0ch
L_23969:
L_23956:
L_23895:
L_23774:
; Line 567:	        if (__p) 
	and	ebx,ebx
	je	short	L_23779
; Line 568:	            __alloc_traits::deallocate(__na_, __p, 1); 
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_24002:
L_23987:
L_23779:
; Line 569:	    } 
L_23767:
	pop	esi
	pop	ebx
	add	esp,0cch
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_24009:
	mov	eax,dword [esp+04h]
L_24010:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_24017:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_24018:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@first$qv virtual
@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_24025:
	mov	eax,dword [esp+04h+04h]
L_24043:
L_24026:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@second$qv virtual
@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_24049:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_24067:
L_24050:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv virtual
@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffd0h
	push	ebx
L_24073:
	mov	eax,dword [esp+04h+034h]
	xor	ebx,ebx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	ecx,eax
L_24126:
L_24111:
	mov	ecx,dword [ecx]
; Line 2628:	        __ptr_.first() = __p; 
	mov	edx,eax
L_24158:
L_24143:
	mov	dword [edx],ebx
; Line 2629:	        if (__tmp) 
	and	ecx,ecx
	je	short	L_24079
; Line 2630:	            __ptr_.second()(__tmp); 
	push	ecx
	add	eax,byte 04h
L_24190:
L_24175:
	push	eax
	call	@std@__1@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bcall$qp#__tree_node$#__value_type$ipn0~pv~
	pop	ecx
	pop	ecx
L_24079:
; Line 2631:	    } 
L_24096:
L_24232:
L_24219:
L_24206:
L_24074:
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@reset$qp#__tree_node$#__value_type$ipn0~pv~ virtual
@std@__1@#unique_ptr$#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@reset$qp#__tree_node$#__value_type$ipn0~pv~:
; Line 2626:	    { 
	add	esp,0ffffff20h
	push	ebx
	push	esi
	push	edi
L_24240:
	mov	edx,dword [esp+08h+0ech]
	mov	eax,dword [esp+04h+0ech]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	ecx,eax
L_24278:
L_24263:
	mov	ecx,dword [ecx]
	mov	dword [esp-04h+0ech],ecx
; Line 2628:	        __ptr_.first() = __p; 
	mov	ecx,eax
L_24310:
L_24295:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+0ech],byte 00h
	je	near	L_24243
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	esi,eax
	add	esi,byte 04h
L_24372:
L_24357:
	mov	ebx,dword [esp-04h+0ech]
; Line 563:	        if (__second_constructed) 
	cmp	byte [esi+05h],byte 00h
	je	short	L_24315
; Line 564:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_.__cc.second)); 
	mov	eax,dword [esi]
	mov	ecx,ebx
	add	ecx,dword 04h+010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_24406:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0deh+0f8h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qv
	pop	ecx
L_24422:
	lea	eax,[esp-0deh+0f8h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0
	add	esp,byte 0ch
	lea	eax,[esp-0deh+0ech]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bdtr$qv
	pop	ecx
L_24436:
L_24391:
L_24315:
; Line 565:	        if (__first_constructed) 
	cmp	byte [esi+04h],byte 00h
	je	short	L_24320
; Line 566:	            __alloc_traits::destroy(__na_, std::__1::addressof(__p->__value_.__cc.first)); 
	mov	eax,dword [esi]
	mov	ecx,ebx
	add	ecx,dword 010h
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_24470:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	esi,esp
	lea	eax,[esp-0ddh+0f8h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qv
	pop	ecx
L_24486:
	lea	eax,[esp-0ddh+0f8h]
	push	eax
	push	esi
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi
	add	esp,byte 0ch
	lea	eax,[esp-0ddh+0ech]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bdtr$qv
	pop	ecx
L_24500:
L_24455:
L_24320:
; Line 567:	        if (__p) 
	and	ebx,ebx
	je	short	L_24325
; Line 568:	            __alloc_traits::deallocate(__na_, __p, 1); 
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_24532:
L_24517:
L_24325:
; Line 569:	    } 
L_24342:
L_24243:
; Line 2631:	    } 
L_24241:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,0e0h
	ret
section code
	section vsc@std@__1@#__deque_iterator$19@StringVerInfo@Infopn0rn0ppn0i9_DiffType$85&~@$bctr$qv virtual
@std@__1@#__deque_iterator$19@StringVerInfo@Infopn0rn0ppn0i9_DiffType$85&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_24540:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_24541:
	ret
section code
	section vsc@std@__1@#__deque_iterator$16@VarVerInfo@Infopn0rn0ppn0i9_DiffType$60&~@$bctr$qv virtual
@std@__1@#__deque_iterator$16@VarVerInfo@Infopn0rn0ppn0i9_DiffType$60&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_24548:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_24549:
	ret
section code
	section vsc@VersionInfo@$bctr$qrx10ResourceIdrx12ResourceInfo virtual
@VersionInfo@$bctr$qrx10ResourceIdrx12ResourceInfo:
; Line 108:	    VersionInfo(const ResourceId& Id, const ResourceInfo& info) : 
; Line 109:	        Resource(eVersion, Id, info), 
; Line 110:	        fixed(false), 
; Line 111:	        fileVersionMS(0), 
; Line 112:	        fileVersionLS(0), 
; Line 113:	        productVersionMS(0), 
; Line 114:	        productVersionLS(0), 
; Line 115:	        fileFlagsMask(0), 
; Line 116:	        fileFlags(0), 
; Line 117:	        fileOS(0), 
; Line 118:	        fileType(0), 
; Line 119:	        fileSubType(0), 
; Line 120:	        fileDateMS(0), 
; Line 121:	        fileDateLS(0) 
; Line 122:	    { 
	add	esp,byte 0ffffffcch
	push	ebx
	push	ebp
	push	esi
	push	edi
L_24556:
	mov	eax,dword [esp+0ch+044h]
	mov	ecx,dword [esp+08h+044h]
	mov	edx,dword [esp+04h+044h]
	mov	dword [esp-04h+044h],edx
	mov	edi,dword [esp-04h+044h]
	mov	dword [esp-08h+044h],010h
	mov	ebx,ecx
	mov	edx,0ch+@Resource@_$vt
	mov	ecx,edi
	mov	dword [ecx],edx
	mov	ecx,edi
	add	ecx,byte 04h
	mov	edx,eax
	mov	esi,dword [edx]
	mov	edx,ecx
	mov	dword [edx],esi
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	eax,dword [eax+0ch]
	mov	dword [ecx+0ch],eax
L_24589:
	mov	esi,edi
	add	esi,byte 014h
	mov	ebp,dword [esp-08h+044h]
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
	mov	dword [esi+018h],ebp
; Line 38:	    ResourceId(int Id) : id(Id) {} 
L_24605:
	mov	esi,edi
	add	esi,byte 030h
	push	esi
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	pop	ecx
; Line 42:	        id = Old.id; 
	mov	eax,dword [ebx+018h]
	mov	dword [esi+018h],eax
; Line 43:	        name = Old.name; 
	mov	eax,ebx
	push	eax
	mov	eax,esi
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	pop	ecx
	pop	ecx
; Line 44:	    } 
L_24621:
; Line 71:	    Resource(ResourceType ResType, const ResourceId& Id, const ResourceInfo& info) : type(ResType), id(Id), resInfo(info) {} 
L_24574:
	mov	ecx,0ch+@VersionInfo@_$vt
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax],ecx
	mov	eax,dword [esp-04h+044h]
	mov	byte [eax+04ch],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+050h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+054h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+058h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+05ch],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+060h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+064h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+068h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+06ch],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+070h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+074h],00h
	mov	eax,dword [esp-04h+044h]
	mov	dword [eax+078h],00h
	mov	eax,dword [esp-04h+044h]
	add	eax,byte 07ch
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
L_24638:
; Line 123:	    } 
	mov	eax,dword [esp-04h+044h]
L_24557:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 034h
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_24644:
	mov	eax,dword [esp+04h]
L_24645:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv:
; Line 1627:	     allocator() noexcept {} 
L_24652:
	mov	eax,dword [esp+04h]
L_24653:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_24660:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24678:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_24694:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_24661:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_24700:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24733:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24749:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_24765:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_24718:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_24701:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
	add	esp,byte 0ffffffe0h
L_24772:
	mov	eax,dword [esp+04h+020h]
L_24790:
	mov	dword [eax+04h],00h
	mov	dword [eax+08h],00h
	mov	dword [eax+0ch],00h
	mov	ecx,eax
	add	ecx,byte 010h
	xor	edx,edx
	mov	dword [esp-018h+020h],edx
	lea	edx,[esp-018h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24836:
	mov	edx,dword [edx]
	mov	dword [esp-010h+020h],edx
	lea	edx,[esp-010h+020h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24852:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_24868:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_24821:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_24806:
; Line 336:	} 
L_24773:
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qv:
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_24876:
	mov	eax,dword [esp+04h]
	mov	ecx,eax
	mov	dword [ecx],00h
	mov	dword [eax+04h],00h
; Line 282:	     __deque_iterator() noexcept 
; Line 284:	     : __m_iter_(nullptr), __ptr_(nullptr) 
L_24877:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@$bctr$qui virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@$bctr$qui:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_24884:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24902:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_24918:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_24885:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bctr$qui virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bctr$qui:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_24924:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24957:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_24973:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_24989:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_24942:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_24925:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1094:	    : __start_(0), __size_(0) {} 
	add	esp,byte 0ffffffe0h
	push	ebx
L_24996:
	mov	ebx,dword [esp+04h+024h]
L_25014:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	dword [ebx+020h],00h
	mov	eax,ebx
	add	eax,byte 024h
	xor	ecx,ecx
	mov	dword [esp-018h+024h],ecx
	lea	ecx,[esp-018h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25060:
	mov	ecx,dword [ecx]
	mov	dword [esp-010h+024h],ecx
	lea	ecx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25076:
	mov	ecx,dword [ecx]
	mov	dword [eax],ecx
L_25092:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_25045:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_25030:
; Line 1094:	    : __start_(0), __size_(0) {} 
	mov	eax,ebx
L_24997:
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv virtual
@std@__1@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv:
; Line 1210:	        {} 
	push	ebx
L_25100:
	mov	ebx,dword [esp+04h+04h]
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bctr$qv
	pop	ecx
	mov	eax,ebx
L_25101:
	pop	ebx
	ret
section code
	section vsc@std@__1@#pointer_traits$pxC~@pointer_to$qrxC virtual
@std@__1@#pointer_traits$pxC~@pointer_to$qrxC:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_25108:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_25126:
L_25109:
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$xC~$qrxC virtual
@std@__1@#addressof$xC~$qrxC:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_25132:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_25133:
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$xC~$qpxC virtual
@std@__1@#__to_raw_pointer$xC~$qpxC:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_25140:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_25141:
	ret
section code
	section vsc@std@__1@#max$ui#__less$uiui~~$qrxuirxui#__less$uiui~ virtual
@std@__1@#max$ui#__less$uiui~~$qrxuirxui#__less$uiui~:
; Line 2644:	inline  constexpr 
; Line 2645:	const _Tp& 
; Line 2646:	max(const _Tp& __a, const _Tp& __b, _Compare __comp) 
; Line 2647:	{ 
	add	esp,byte 0ffffffech
	push	ebx
L_25148:
	mov	ecx,dword [esp+08h+018h]
	mov	eax,dword [esp+04h+018h]
; Line 2648:	    return __comp(__a, __b) ? __b : __a; 
	mov	ebx,eax
	mov	edx,ecx
	mov	ebx,dword [ebx]
	mov	edx,dword [edx]
L_25168:
	cmp	ebx,edx
	jc	short	L_25154
L_25153:
	mov	ecx,eax
L_25154:
L_25182:
	mov	eax,ecx
; Line 2649:	} 
L_25196:
L_25149:
	pop	ebx
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#max$ui~$qrxuirxui virtual
@std@__1@#max$ui~$qrxuirxui:
; Line 2652:	inline  constexpr 
; Line 2653:	const _Tp& 
; Line 2654:	max(const _Tp& __a, const _Tp& __b) 
; Line 2655:	{ 
	add	esp,byte 0fffffff0h
	push	ebx
	push	esi
L_25202:
	mov	esi,dword [esp+08h+018h]
	mov	ebx,dword [esp+04h+018h]
; Line 2656:	    return std::__1::max(__a, __b, __less<_Tp>()); 
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_25220:
	lea	eax,[esp-010h+01ch]
	push	eax
	push	ecx
	call	@std@__1@#__less$uiui~@$bctr$qRx#__less$uiui~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#max$ui#__less$uiui~~$qrxuirxui#__less$uiui~
	add	esp,byte 0ch
L_25234:
; Line 2657:	} 
L_25248:
L_25203:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$C~@$basn$qRx#allocator$C~ virtual
@std@__1@#allocator$C~@$basn$qRx#allocator$C~:
L_25254:
L_25255:
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__rep@$basn$qr51@#basic_string$C#char_traits$C~#allocator$C~~@__rep virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__rep@$basn$qr51@#basic_string$C#char_traits$C~#allocator$C~~@__rep:
	push	ebx
	push	esi
L_25260:
	mov	esi,dword [esp+08h+08h]
	mov	ebx,dword [esp+04h+08h]
	mov	eax,esi
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$basn$qrx52@#basic_string$C#char_traits$C~#allocator$C~~@__long
	pop	ecx
	pop	ecx
	mov	eax,esi
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$basn$qr53@#basic_string$C#char_traits$C~#allocator$C~~@__short
	pop	ecx
	pop	ecx
	mov	eax,esi
	push	eax
	push	ebx
	call	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$basn$qrx51@#basic_string$C#char_traits$C~#allocator$C~~@__raw
	pop	ecx
	pop	ecx
L_25261:
	pop	esi
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$basn$qrx52@#basic_string$C#char_traits$C~#allocator$C~~@__long virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__long@$basn$qrx52@#basic_string$C#char_traits$C~#allocator$C~~@__long:
	push	ebx
L_25266:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
L_25267:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$basn$qr53@#basic_string$C#char_traits$C~#allocator$C~~@__short virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__short@$basn$qr53@#basic_string$C#char_traits$C~#allocator$C~~@__short:
	push	ebx
L_25272:
	mov	eax,dword [esp+08h+04h]
	mov	ecx,dword [esp+04h+04h]
	mov	edx,eax
	mov	dl,byte [edx]
	mov	ebx,ecx
	mov	byte [ebx],dl
	mov	edx,eax
	mov	bx,word [edx]
	mov	edx,ecx
	mov	word [edx],bx
	add	ecx,byte 02h
	add	eax,byte 02h
	mov	dx,word [eax+08h]
	mov	word [ecx+08h],dx
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax]
	mov	dword [ecx],edx
L_25273:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$basn$qrx51@#basic_string$C#char_traits$C~#allocator$C~~@__raw virtual
@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__raw@$basn$qrx51@#basic_string$C#char_traits$C~#allocator$C~~@__raw:
L_25278:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax]
	mov	dword [ecx],edx
L_25279:
	ret
section code
	section vsc@std@__1@#move$#allocator$C~~$qR#allocator$C~ virtual
@std@__1@#move$#allocator$C~~$qR#allocator$C~:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_25284:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_25285:
	ret
section code
	section vsc@std@__1@#allocator$c~@$basn$qRx#allocator$c~ virtual
@std@__1@#allocator$c~@$basn$qRx#allocator$c~:
L_25292:
L_25293:
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__rep@$basn$qr51@#basic_string$c#char_traits$c~#allocator$c~~@__rep virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__rep@$basn$qr51@#basic_string$c#char_traits$c~#allocator$c~~@__rep:
	push	ebx
	push	esi
L_25298:
	mov	esi,dword [esp+08h+08h]
	mov	ebx,dword [esp+04h+08h]
	mov	eax,esi
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$basn$qrx52@#basic_string$c#char_traits$c~#allocator$c~~@__long
	pop	ecx
	pop	ecx
	mov	eax,esi
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$basn$qr53@#basic_string$c#char_traits$c~#allocator$c~~@__short
	pop	ecx
	pop	ecx
	mov	eax,esi
	push	eax
	push	ebx
	call	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$basn$qrx51@#basic_string$c#char_traits$c~#allocator$c~~@__raw
	pop	ecx
	pop	ecx
L_25299:
	pop	esi
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$basn$qrx52@#basic_string$c#char_traits$c~#allocator$c~~@__long virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__long@$basn$qrx52@#basic_string$c#char_traits$c~#allocator$c~~@__long:
	push	ebx
L_25304:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
L_25305:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$basn$qr53@#basic_string$c#char_traits$c~#allocator$c~~@__short virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__short@$basn$qr53@#basic_string$c#char_traits$c~#allocator$c~~@__short:
	push	ebx
L_25310:
	mov	eax,dword [esp+08h+04h]
	mov	edx,dword [esp+04h+04h]
	mov	ecx,eax
	mov	cl,byte [ecx]
	mov	ebx,edx
	mov	byte [ebx],cl
	mov	ecx,eax
	mov	cl,byte [ecx]
	mov	ebx,edx
	mov	byte [ebx],cl
	mov	ecx,edx
	inc	ecx
	inc	eax
	mov	dl,byte [eax+0ah]
	mov	byte [ecx+0ah],dl
	mov	dx,word [eax+08h]
	mov	word [ecx+08h],dx
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax]
	mov	dword [ecx],edx
L_25311:
	pop	ebx
	ret
section code
	section vsc@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$basn$qrx51@#basic_string$c#char_traits$c~#allocator$c~~@__raw virtual
@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__raw@$basn$qrx51@#basic_string$c#char_traits$c~#allocator$c~~@__raw:
L_25316:
	mov	eax,dword [esp+08h]
	mov	ecx,dword [esp+04h]
	mov	edx,dword [eax+08h]
	mov	dword [ecx+08h],edx
	mov	edx,dword [eax+04h]
	mov	dword [ecx+04h],edx
	mov	edx,dword [eax]
	mov	dword [ecx],edx
L_25317:
	ret
section code
	section vsc@std@__1@#move$#allocator$c~~$qR#allocator$c~ virtual
@std@__1@#move$#allocator$c~~$qR#allocator$c~:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_25322:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_25323:
	ret
section code
	section vsc@std@__1@#__str_find_first_not_of$cui#char_traits$c~6_SizeT$4294967295&~$qpxcuipxcuiui virtual
@std@__1@#__str_find_first_not_of$cui#char_traits$c~6_SizeT$4294967295&~$qpxcuipxcuiui:
; Line 1056:	_SizeT constexpr  
; Line 1057:	__str_find_first_not_of(const _CharT *__p, _SizeT __sz, 
; Line 1058:	                    const _CharT* __s, _SizeT __pos, _SizeT __n) noexcept 
; Line 1059:	{ 
	add	esp,byte 0ffffffech
	push	ebx
	push	ebp
	push	esi
	push	edi
L_25330:
	mov	eax,dword [esp+014h+024h]
	mov	dword [esp-04h+024h],eax
	mov	ecx,dword [esp+010h+024h]
	mov	esi,dword [esp+0ch+024h]
	mov	eax,dword [esp+08h+024h]
	mov	ebx,dword [esp+04h+024h]
; Line 1060:	    if (__pos < __sz) 
	cmp	ecx,eax
	jnc	short	L_25333
; Line 1061:	    { 
; Line 1062:	        const _CharT* __pe = __p + __sz; 
	add	eax,ebx
	mov	edi,eax
	mov	eax,ebx
	add	eax,ecx
	mov	ebp,eax
	cmp	ebp,edi
	je	short	L_25339
L_25337:
; Line 1064:	            if (_Traits::find(__s, __n, *__ps) == 0) 
	mov	eax,esi
	mov	ecx,dword [esp-04h+024h]
	mov	edx,ebp
	push	ecx
	mov	cl,byte [edx]
	movzx	ecx,cl
L_25383:
	push	ecx
	push	eax
	call	dword [_memchr]
	add	esp,byte 0ch
L_25368:
	and	eax,eax
	jne	short	L_25343
; Line 1065:	                return static_cast<_SizeT>(__ps - __p); 
	mov	eax,ebp
	sub	eax,ebx
	jmp	short	L_25331
L_25343:
L_25340:
	inc	ebp
	mov	eax,ebp
; Line 1063:	        for (const _CharT* __ps = __p + __pos; __ps != __pe; ++__ps) 
L_25338:
	cmp	ebp,edi
	jne	short	L_25337
L_25339:
L_25333:
; Line 1067:	    return __npos; 
	mov	eax,0ffffffffh
; Line 1068:	} 
L_25331:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__find_first_of_ce$pxcpxcpqcc$4bool~$qpxcpxcpxcpxcpqcc$n0 virtual
@std@__1@#__find_first_of_ce$pxcpxcpqcc$4bool~$qpxcpxcpxcpxcpqcc$n0:
; Line 1046:	constexpr _ForwardIterator1 
; Line 1047:	__find_first_of_ce(_ForwardIterator1 __first1, _ForwardIterator1 __last1, 
; Line 1048:	              _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred) 
; Line 1049:	{ 
	push	ecx
	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
L_25390:
	mov	edi,dword [esp+014h+018h]
	mov	esi,dword [esp+010h+018h]
	mov	eax,dword [esp+0ch+018h]
	mov	dword [esp-08h+018h],eax
	mov	eax,dword [esp+08h+018h]
	mov	dword [esp-04h+018h],eax
	mov	ebx,dword [esp+04h+018h]
	cmp	ebx,dword [esp-04h+018h]
	je	short	L_25395
L_25393:
	mov	ebp,dword [esp-08h+018h]
	cmp	ebp,esi
	je	short	L_25400
L_25398:
; Line 1052:	            if (__pred(*__first1, *__j)) 
	mov	eax,ebp
	mov	al,byte [eax]
	cbw
	cwde
	push	eax
	mov	eax,ebx
	mov	al,byte [eax]
	cbw
	cwde
	push	eax
	call	edi
	pop	ecx
	pop	ecx
	and	al,al
	je	short	L_25404
; Line 1053:	                return __first1; 
	mov	eax,ebx
	jmp	short	L_25391
L_25404:
L_25401:
	inc	ebp
; Line 1051:	        for (_ForwardIterator2 __j = __first2; __j != __last2; ++__j) 
L_25399:
	cmp	ebp,esi
	jne	short	L_25398
L_25400:
L_25396:
	inc	ebx
; Line 1050:	    for (; __first1 != __last1; ++__first1) 
L_25394:
	cmp	ebx,dword [esp-04h+018h]
	jne	short	L_25393
L_25395:
; Line 1054:	    return __last1; 
	mov	eax,dword [esp-04h+018h]
; Line 1055:	} 
L_25391:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__str_find_first_of$cui#char_traits$c~6_SizeT$4294967295&~$qpxcuipxcuiui virtual
@std@__1@#__str_find_first_of$cui#char_traits$c~6_SizeT$4294967295&~$qpxcuipxcuiui:
; Line 1017:	_SizeT constexpr  
; Line 1018:	__str_find_first_of(const _CharT *__p, _SizeT __sz, 
; Line 1019:	                const _CharT* __s, _SizeT __pos, _SizeT __n) noexcept 
; Line 1020:	{ 
	push	ebx
	push	ebp
	push	esi
	push	edi
L_25417:
	mov	edx,dword [esp+014h+010h]
	mov	eax,dword [esp+010h+010h]
	mov	edi,dword [esp+0ch+010h]
	mov	esi,dword [esp+08h+010h]
	mov	ebx,dword [esp+04h+010h]
; Line 1021:	    if (__pos >= __sz || __n == 0) 
	cmp	eax,esi
	jnc	short	L_25432
	and	edx,edx
	jne	short	L_25420
L_25432:
; Line 1022:	        return __npos; 
	mov	eax,0ffffffffh
	jmp	short	L_25418
L_25420:
	push	dword @std@__1@#char_traits$c~@eq$qcc
	mov	ecx,edi
	add	ecx,edx
	push	ecx
	push	edi
	mov	edx,ebx
	mov	ecx,esi
	add	ecx,edx
	push	ecx
	add	eax,edx
	push	eax
	call	@std@__1@#__find_first_of_ce$pxcpxcpqcc$4bool~$qpxcpxcpxcpxcpqcc$n0
	add	esp,byte 014h
; Line 1025:	    if (__r == __p + __sz) 
	mov	edx,eax
	mov	ecx,ebx
	add	ecx,esi
	cmp	ecx,edx
	jne	short	L_25425
; Line 1026:	        return __npos; 
	mov	eax,0ffffffffh
	jmp	short	L_25418
L_25425:
; Line 1027:	    return static_cast<_SizeT>(__r - __p); 
	sub	eax,ebx
; Line 1028:	} 
L_25418:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret
section code
	section vsc@std@__1@#forward$#allocator$c~~$qr#allocator$c~ virtual
@std@__1@#forward$#allocator$c~~$qr#allocator$c~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25436:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25437:
	ret
section code
	section vsc@std@__1@#allocator$c~@$bctr$qRx#allocator$c~ virtual
@std@__1@#allocator$c~@$bctr$qRx#allocator$c~:
L_25444:
	mov	eax,dword [esp+04h]
L_25445:
	ret
section code
	section vsc@ResourceId@$bdtr$qv virtual
@ResourceId@$bdtr$qv:
L_25452:
	mov	eax,dword [esp+04h]
	push	eax
	call	dword [@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	pop	ecx
L_25453:
	ret
section code
	section vsc@ResourceInfo@$bdtr$qv virtual
@ResourceInfo@$bdtr$qv:
L_25458:
L_25459:
	ret
section code
	section vsc@std@__1@#__has_select_on_container_copy_construction$x#allocator$C~~@$bctr$qv virtual
@std@__1@#__has_select_on_container_copy_construction$x#allocator$C~~@$bctr$qv:
	push	ecx
L_25464:
	mov	eax,dword [esp+04h+04h]
L_25482:
L_25465:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$C~@$bctr$qRx#allocator$C~ virtual
@std@__1@#allocator$C~@$bctr$qRx#allocator$C~:
L_25488:
	mov	eax,dword [esp+04h]
L_25489:
	ret
section code
	section vsc@std@__1@#forward$#allocator$C~~$qr#allocator$C~ virtual
@std@__1@#forward$#allocator$C~~$qr#allocator$C~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25496:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25497:
	ret
section code
	section vsc@std@__1@#forward$p12ResourceData~$qrpn0 virtual
@std@__1@#forward$p12ResourceData~$qrpn0:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25504:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25505:
	ret
section code
	section vsc@ResourceInfo@$bctr$qrx12ResourceInfo virtual
@ResourceInfo@$bctr$qrx12ResourceInfo:
	push	ebx
L_25512:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
	mov	ecx,dword [edx+08h]
	mov	dword [eax+08h],ecx
	mov	ecx,dword [edx+0ch]
	mov	dword [eax+0ch],ecx
L_25513:
	pop	ebx
	ret
section code
	section vsc@std@__1@#forward$ui~$qrui virtual
@std@__1@#forward$ui~$qrui:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25520:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25521:
	ret
section code
	section vsc@std@__1@#__deque_base_common$4bool$1&~@$bctr$qv virtual
@std@__1@#__deque_base_common$4bool$1&~@$bctr$qv:
L_25528:
	mov	eax,dword [esp+04h]
L_25529:
	ret
section code
	section vsc@std@__1@#forward$pp17@Accelerators@Key~$qrppn0 virtual
@std@__1@#forward$pp17@Accelerators@Key~$qrppn0:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25536:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25537:
	ret
section code
	section vsc@std@__1@#__split_buffer_common$4bool$1&~@$bctr$qv virtual
@std@__1@#__split_buffer_common$4bool$1&~@$bctr$qv:
L_25544:
	mov	eax,dword [esp+04h]
L_25545:
	ret
section code
	section vsc@std@__1@#forward$ppp6Cursor~$qrpppn0 virtual
@std@__1@#forward$ppp6Cursor~$qrpppn0:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25552:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25553:
	ret
section code
	section vsc@std@__1@#forward$pp#unique_ptr$7Control#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#forward$pp#unique_ptr$7Control#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25560:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25561:
	ret
section code
	section vsc@std@__1@#forward$ppp4Icon~$qrpppn0 virtual
@std@__1@#forward$ppp4Icon~$qrpppn0:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25568:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25569:
	ret
section code
	section vsc@std@__1@#forward$pp#unique_ptr$8MenuItem#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#forward$pp#unique_ptr$8MenuItem#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25576:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25577:
	ret
section code
	section vsc@std@__1@#forward$pp#unique_ptr$12ResourceData#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#forward$pp#unique_ptr$12ResourceData#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25584:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25585:
	ret
section code
	section vsc@std@__1@#forward$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#forward$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~~$qrpp#unique_ptr$n0#default_delete$n0~~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_25592:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25593:
	ret
section code
	section vsc@std@__1@#default_delete$11StringTable~@$bctr$qv virtual
@std@__1@#default_delete$11StringTable~@$bctr$qv:
	push	ebp
	mov	ebp,esp
L_25600:
	mov	eax,dword [ebp+08h]
L_25601:
	pop	ebp
	ret
section code
	section vsc@std@__1@#default_delete$11StringTable~@$bcall$xqpn0 virtual
@std@__1@#default_delete$11StringTable~@$bcall$xqpn0:
; Line 2427:	     void operator() (_Tp* __ptr) const noexcept 
; Line 2428:	        { 
	push	ebx
L_25608:
	mov	ebx,dword [esp+08h+04h]
; Line 2431:	            delete __ptr; 
	and	ebx,ebx
	je	short	L_25613
	mov	eax,ebx
	push	eax
	call	@StringTable@$bdtr$qv
	pop	ecx
	push	ebx
	call	dword [@$bdel$qpv]
	pop	ecx
L_25613:
; Line 2432:	        } 
L_25609:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bctr$qpn0 virtual
@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bctr$qpn0:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
	push	ecx
	push	ecx
L_25617:
	mov	eax,dword [esp+04h+08h]
	lea	ecx,[esp+08h+08h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25635:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
L_25651:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_25618:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bctr$qpn0#default_delete$n0~ virtual
@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bctr$qpn0#default_delete$n0~:
; Line 1958:	     __libcpp_compressed_pair_imp(_T1_param __t1, _T2_param __t2) 
; Line 1959:	        : __first_(std::__1::forward<_T1_param>(__t1)), __second_(std::__1::forward<_T2_param>(__t2)) {} 
	add	esp,byte 0ffffffech
L_25657:
	mov	eax,dword [esp+04h+014h]
	lea	ecx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25675:
	mov	edx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],edx
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25706:
L_25691:
L_25721:
L_25658:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_25727:
	mov	eax,dword [esp+04h]
L_25728:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_25735:
	mov	eax,dword [esp+04h]
L_25736:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_25743:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_25744:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0 virtual
@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
	add	esp,byte 0ffffffech
L_25751:
	mov	eax,dword [esp+04h+014h]
	mov	ecx,eax
	lea	edx,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25784:
	mov	edx,dword [edx]
	mov	dword [esp-010h+014h],edx
	lea	edx,[esp-010h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25800:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_25816:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_25769:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_25752:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0#default_delete$n0~ virtual
@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0#default_delete$n0~:
; Line 2320:	     __compressed_pair(_T1_param __t1, _T2_param __t2) 
; Line 2321:	        : base(std::__1::forward<_T1_param>(__t1), std::__1::forward<_T2_param>(__t2)) {} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
L_25823:
	mov	ebx,dword [esp+04h+010h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25841:
	lea	eax,[esp+0ch+014h]
	push	eax
	push	ecx
	call	@std@__1@#default_delete$11StringTable~@$bctr$qRx#default_delete$n0~
	pop	ecx
	pop	ecx
	lea	eax,[esp+08h+014h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_25857:
	mov	eax,dword [eax]
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bctr$qpn0#default_delete$n0~
	add	esp,byte 0ch
L_25871:
	mov	eax,ebx
L_25824:
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@first$qv virtual
@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_25877:
	mov	eax,dword [esp+04h+04h]
L_25895:
L_25878:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@first$xqv virtual
@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_25901:
	mov	eax,dword [esp+04h+04h]
L_25919:
L_25902:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@second$qv virtual
@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_25925:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_25943:
L_25926:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bctr$qpn0 virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bctr$qpn0:
; Line 2494:	     explicit unique_ptr(pointer __p) noexcept 
; Line 2495:	        : __ptr_(std::__1::move(__p)) 
; Line 2496:	        { 
	add	esp,byte 0ffffffdch
L_25949:
	mov	eax,dword [esp+04h+024h]
	mov	ecx,eax
	lea	edx,[esp+08h+024h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_25982:
	mov	edx,dword [edx]
	mov	dword [esp-020h+024h],edx
	lea	edx,[esp-020h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26013:
	mov	edx,dword [edx]
	mov	dword [esp-010h+024h],edx
	lea	edx,[esp-010h+024h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26029:
	mov	edx,dword [edx]
	mov	dword [ecx],edx
L_26045:
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_25998:
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_25967:
; Line 2499:	        } 
L_25950:
	add	esp,byte 024h
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bctr$qR#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bctr$qR#unique_ptr$n0#default_delete$n0~~:
; Line 2515:	     unique_ptr(unique_ptr&& __u) noexcept 
; Line 2516:	        : __ptr_(__u.release(), std::__1::forward<deleter_type>(__u.get_deleter())) {} 
	add	esp,byte 0ffffffd8h
	push	ebx
	push	esi
L_26053:
	mov	esi,dword [esp+08h+030h]
	mov	ebx,dword [esp+04h+030h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
	mov	eax,esi
	add	eax,byte 04h
L_26116:
L_26101:
L_26086:
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26071:
	push	eax
	push	ecx
	call	@std@__1@#default_delete$11StringTable~@$bctr$qRx#default_delete$n0~
	pop	ecx
	pop	ecx
; Line 2620:	        pointer __t = __ptr_.first(); 
	mov	eax,esi
L_26165:
L_26150:
	mov	eax,dword [eax]
	mov	dword [esp-014h+034h],eax
; Line 2621:	        __ptr_.first() = pointer(); 
	mov	eax,esi
L_26197:
L_26182:
	mov	dword [eax],00h
; Line 2622:	        return __t; 
	mov	eax,dword [esp-014h+034h]
; Line 2623:	    } 
L_26135:
	push	eax
	mov	eax,ebx
	push	eax
	call	@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0#default_delete$n0~
	add	esp,byte 0ch
	mov	eax,ebx
L_26054:
	pop	esi
	pop	ebx
	add	esp,byte 028h
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffc4h
L_26205:
	mov	eax,dword [esp+04h+03ch]
	xor	ecx,ecx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	edx,eax
L_26258:
L_26243:
	mov	edx,dword [edx]
	mov	dword [esp-030h+03ch],edx
; Line 2628:	        __ptr_.first() = __p; 
L_26290:
L_26275:
	mov	dword [eax],ecx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-030h+03ch],byte 00h
	je	short	L_26211
; Line 2630:	            __ptr_.second()(__tmp); 
L_26337:
L_26322:
	mov	eax,dword [esp-030h+03ch]
; Line 2431:	            delete __ptr; 
	mov	dword [esp-03ch+03ch],eax
	and	eax,eax
	je	short	L_26341
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	@StringTable@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_26341:
; Line 2432:	        } 
L_26307:
L_26211:
; Line 2631:	    } 
L_26228:
L_26381:
L_26368:
L_26355:
L_26206:
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$barrow$xqv virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@$barrow$xqv:
; Line 2608:	     pointer operator->() const noexcept {return __ptr_.first();} 
	push	ecx
	push	ecx
L_26389:
	mov	eax,dword [esp+04h+08h]
L_26422:
L_26407:
	mov	eax,dword [eax]
L_26390:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@get_deleter$qv virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@get_deleter$qv:
; Line 2610:	           _Dp_reference get_deleter() noexcept 
; Line 2611:	        {return __ptr_.second();} 
	push	ecx
	push	ecx
L_26429:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 04h
L_26462:
L_26447:
L_26430:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@release$qv virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@release$qv:
; Line 2618:	     pointer release() noexcept 
; Line 2619:	    { 
	add	esp,byte 0ffffffech
L_26469:
	mov	eax,dword [esp+04h+014h]
; Line 2620:	        pointer __t = __ptr_.first(); 
	mov	ecx,eax
L_26502:
L_26487:
	mov	ecx,dword [ecx]
	mov	dword [esp-04h+014h],ecx
; Line 2621:	        __ptr_.first() = pointer(); 
L_26534:
L_26519:
	mov	dword [eax],00h
; Line 2622:	        return __t; 
	mov	eax,dword [esp-04h+014h]
; Line 2623:	    } 
L_26470:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@reset$qpn0 virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@reset$qpn0:
; Line 2626:	    { 
	add	esp,byte 0ffffffd8h
L_26541:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	edx,eax
L_26579:
L_26564:
	mov	edx,dword [edx]
	mov	dword [esp-04h+028h],edx
; Line 2628:	        __ptr_.first() = __p; 
L_26611:
L_26596:
	mov	dword [eax],ecx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+028h],byte 00h
	je	short	L_26544
; Line 2630:	            __ptr_.second()(__tmp); 
L_26658:
L_26643:
	mov	eax,dword [esp-04h+028h]
; Line 2431:	            delete __ptr; 
	mov	dword [esp-028h+028h],eax
	and	eax,eax
	je	short	L_26662
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	@StringTable@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_26662:
; Line 2432:	        } 
L_26628:
L_26544:
; Line 2631:	    } 
L_26542:
	add	esp,byte 028h
	ret
section code
	section vsc@std@__1@#forward$12ResourceInfo~$qrn0 virtual
@std@__1@#forward$12ResourceInfo~$qrn0:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_26667:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26668:
	ret
section code
	section vsc@std@__1@#move$p11StringTable~$qRpn0 virtual
@std@__1@#move$p11StringTable~$qRpn0:
; Line 1630:	inline  constexpr 
; Line 1631:	typename remove_reference<_Tp>::type&& 
; Line 1632:	move(_Tp&& __t) noexcept 
; Line 1633:	{ 
L_26675:
	mov	eax,dword [esp+04h]
; Line 1635:	    return static_cast<_Up&&>(__t); 
; Line 1636:	} 
L_26676:
	ret
section code
	section vsc@std@__1@#forward$p11StringTable~$qrpn0 virtual
@std@__1@#forward$p11StringTable~$qrpn0:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_26683:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26684:
	ret
section code
	section vsc@std@__1@#default_delete$11StringTable~@$bdtr$qv virtual
@std@__1@#default_delete$11StringTable~@$bdtr$qv:
L_26691:
L_26692:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@$bdtr$qv:
	push	ecx
L_26697:
L_26711:
L_26698:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_26717:
L_26744:
L_26731:
L_26718:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@__nat@$bctr$qv virtual
@std@__1@#unique_ptr$11StringTable#default_delete$n0~~@__nat@$bctr$qv:
L_26751:
	mov	eax,dword [esp+04h]
L_26752:
	ret
section code
	section vsc@std@__1@#forward$#default_delete$11StringTable~~$qr#default_delete$n0~ virtual
@std@__1@#forward$#default_delete$11StringTable~~$qr#default_delete$n0~:
; Line 1639:	inline  constexpr 
; Line 1640:	_Tp&& 
; Line 1641:	forward(typename std::remove_reference<_Tp>::type& __t) noexcept 
; Line 1642:	{ 
L_26759:
	mov	eax,dword [esp+04h]
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26760:
	ret
section code
	section vsc@std@__1@#default_delete$11StringTable~@$bctr$qRx#default_delete$n0~ virtual
@std@__1@#default_delete$11StringTable~@$bctr$qRx#default_delete$n0~:
L_26767:
	mov	eax,dword [esp+04h]
L_26768:
	ret
section code
	section vsc@std@__1@#make_unique$11StringTabler12ResourceInfo~$qrn1 virtual
@std@__1@#make_unique$11StringTabler12ResourceInfo~$qrn1:
; Line 3043:	inline  
; Line 3044:	typename __unique_if<_Tp>::__unique_single 
; Line 3045:	make_unique(_Args&&... __args) 
; Line 3046:	{ 
	push	ebp
	mov	ebp,esp
	add	esp,0ffffff30h
	push	ebx
	push	esi
	push	edi
L_26775:
	mov	ebx,dword [ebp+08h]
	mov	edi,dword [ebp+0ch]
	push	dword @$xc@std@__1@#make_unique$11StringTabler12ResourceInfo~$qrn1
	lea	eax,[ebp-040h]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_26778:
	mov	dword [ebp-04h],ebx
	lea	ebx,[ebp-0d0h]
	push	dword 01e0h
	call	@$bnew$qui
	pop	ecx
	mov	esi,eax
	and	eax,eax
	je	short	L_26812
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26826:
	push	edi
	mov	eax,esi
	push	eax
	call	@StringTable@$bctr$qrx12ResourceInfo
	pop	ecx
	pop	ecx
L_26812:
	mov	dword [ebp-0bch],esi
	lea	eax,[ebp-0bch]
	push	eax
	call	@std@__1@#move$p11StringTable~$qRpn0
	pop	ecx
	mov	eax,dword [eax]
	mov	dword [ebp-0b0h],eax
	lea	eax,[ebp-0b0h]
	push	eax
	call	@std@__1@#forward$p11StringTable~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	mov	dword [ebp-0a8h],eax
	lea	eax,[ebp-0a8h]
	push	eax
	call	@std@__1@#forward$p11StringTable~$qrpn0
	pop	ecx
	mov	eax,dword [eax]
	mov	dword [ebx],eax
	lea	eax,[ebp-0d0h+04h]
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bctr$qv
	pop	ecx
	mov	dword [ebp-040h+014h],01h
; Line 1954:	     explicit __libcpp_compressed_pair_imp(_T1_param __t1) 
L_26857:
	mov	dword [ebp-040h+014h],02h
; Line 2316:	     explicit __compressed_pair(_T1_param __t1) 
L_26842:
	mov	dword [ebp-040h+014h],03h
; Line 2499:	        } 
L_26810:
	mov	dword [ebp-040h+014h],04h
	add	esp,byte 0fffffffch
	mov	ebx,esp
	lea	eax,[ebp-0d0h]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_26905:
L_26890:
; Line 1643:	    return static_cast<_Tp&&>(__t); 
; Line 1644:	} 
L_26875:
	push	eax
	push	ebx
	call	@std@__1@#default_delete$11StringTable~@$bctr$qRx#default_delete$n0~
	pop	ecx
	pop	ecx
	mov	dword [ebp-040h+014h],05h
; Line 2620:	        pointer __t = __ptr_.first(); 
	lea	eax,[ebp-0d0h]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_26938:
	mov	eax,dword [eax]
	mov	dword [ebp-094h],eax
; Line 2621:	        __ptr_.first() = pointer(); 
	lea	eax,[ebp-0d0h]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_26954:
	mov	dword [eax],00h
; Line 2622:	        return __t; 
	mov	eax,dword [ebp-094h]
; Line 2623:	    } 
L_26923:
	push	eax
	mov	eax,dword [ebp-04h]
	push	eax
	call	@std@__1@#__compressed_pair$p11StringTable#default_delete$n0~~@$bctr$qpn0#default_delete$n0~
	add	esp,byte 0ch
	mov	dword [ebp-040h+014h],06h
L_26795:
	mov	dword [ebp-040h+014h],07h
	mov	ebx,dword [ebp+08h]
	mov	dword [ebp-040h+014h],08h
	xor	esi,esi
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	lea	eax,[ebp-0d0h]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_27007:
	mov	eax,dword [eax]
	mov	dword [ebp-07ch],eax
; Line 2628:	        __ptr_.first() = __p; 
	lea	eax,[ebp-0d0h]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_27023:
	mov	dword [eax],esi
; Line 2629:	        if (__tmp) 
	cmp	dword [ebp-07ch],byte 00h
	je	short	L_26975
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	eax,dword [ebp-07ch]
	push	eax
	lea	eax,[ebp-0d0h]
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p11StringTable#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_27039:
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_26975:
; Line 2631:	    } 
L_26992:
	lea	eax,[ebp-0d0h+04h]
	push	eax
	call	@std@__1@#default_delete$11StringTable~@$bdtr$qv
	pop	ecx
L_27067:
L_27054:
L_26972:
	mov	eax,ebx
; Line 3048:	} 
; Line 2627:	        pointer __tmp = __ptr_.first(); 
L_27120:
L_27136:
L_27152:
L_27088:
L_27105:
L_27180:
L_27167:
L_27085:
L_26776:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#make_unique$11StringTabler12ResourceInfo~$qrn1 virtual
@$xc@std@__1@#make_unique$11StringTabler12ResourceInfo~$qrn1:
	dd	00h
	dd	0ffffffc0h
	dd	0400h
	dd	@$xt@#unique_ptr$11StringTable#default_delete$n0~~+0
	dd	0ffffff30h
	dd	04h
	dd	09h
	dd	00h
section code
	section vsc@std@__1@#pair$xip11StringTable~@$bdtr$qv virtual
@std@__1@#pair$xip11StringTable~@$bdtr$qv:
L_27188:
L_27189:
	ret
section code
	section vsc@std@__1@#pair$ip11StringTable~@$bdtr$qv virtual
@std@__1@#pair$ip11StringTable~@$bdtr$qv:
L_27194:
L_27195:
	ret
section code
	section vsc@std@__1@#allocator$#pair$xip11StringTable~~@$bdtr$qv virtual
@std@__1@#allocator$#pair$xip11StringTable~~@$bdtr$qv:
L_27200:
L_27201:
	ret
section code
	section vsc@std@__1@#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~@$bdtr$qv virtual
@std@__1@#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~@$bdtr$qv:
	push	ecx
	push	ecx
L_27206:
L_27233:
L_27220:
L_27207:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$#__value_type$ip11StringTable~~@$bdtr$qv virtual
@std@__1@#allocator$#__value_type$ip11StringTable~~@$bdtr$qv:
L_27240:
L_27241:
	ret
section code
	section vsc@std@__1@#allocator_traits$6_Alloc~@$bdtr$qv virtual
@std@__1@#allocator_traits$6_Alloc~@$bdtr$qv:
L_27246:
L_27247:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__value_type$ip11StringTable~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#__value_type$ip11StringTable~~~@$bdtr$qv:
L_27252:
L_27253:
	ret
section code
	section vsc@std@__1@#__tree_end_node$p#__tree_node_base$pv~~@$bdtr$qv virtual
@std@__1@#__tree_end_node$p#__tree_node_base$pv~~@$bdtr$qv:
L_27258:
L_27259:
	ret
section code
	section vsc@std@__1@#__tree_node_base$pv~@$bdtr$qv virtual
@std@__1@#__tree_node_base$pv~@$bdtr$qv:
	push	ecx
L_27264:
L_27278:
L_27265:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_node$#__value_type$ip11StringTable~pv~@$bdtr$qv virtual
@std@__1@#__tree_node$#__value_type$ip11StringTable~pv~@$bdtr$qv:
	add	esp,byte 0ffffffe8h
L_27284:
L_27313:
L_27327:
L_27341:
L_27300:
L_27369:
L_27356:
L_27285:
	add	esp,byte 018h
	ret
section code
	section vsc@std@__1@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~@$bdtr$qv virtual
@std@__1@#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~@$bdtr$qv:
L_27376:
L_27377:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv:
L_27382:
L_27383:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~i$0&~@$bdtr$qv:
	push	ecx
	push	ecx
L_27388:
L_27402:
L_27416:
L_27389:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$#__tree_end_node$p#__tree_node_base$pv~~#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_27422:
L_27449:
L_27463:
L_27436:
L_27423:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~i$0&~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_27470:
L_27510:
L_27497:
L_27484:
L_27471:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#__map_value_compare$i#__value_type$ip11StringTable~#less$i~4bool$0&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_27518:
	mov	eax,dword [esp+04h+0ch]
	add	eax,byte 04h
	push	eax
	call	@std@__1@#binary_function$ii4bool~@$bdtr$qv
	pop	ecx
L_27558:
L_27545:
L_27532:
L_27519:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv virtual
@std@__1@#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv:
L_27566:
L_27567:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@$bdtr$qv:
	push	ecx
L_27572:
L_27586:
L_27573:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__tree_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_27592:
L_27619:
L_27606:
L_27593:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$#__value_type$ip11StringTable~~$qr#__value_type$ipn0~ virtual
@std@__1@#addressof$#__value_type$ip11StringTable~~$qr#__value_type$ipn0~:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_27626:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_27627:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~@$bctr$qv:
	push	ecx
L_27634:
	mov	eax,dword [esp+04h+04h]
L_27652:
L_27635:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~@$bdtr$qv virtual
@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~@$bdtr$qv:
	push	ecx
L_27658:
L_27672:
L_27659:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~ virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb4h
L_27678:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_27681:
; Line 1589:	                __p->~_Tp(); 
	mov	dword [ebp-03ch+014h],01h
	mov	dword [ebp-03ch+014h],02h
L_27711:
L_27725:
L_27739:
L_27698:
; Line 1590:	            } 
L_27679:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__value_type$ip11StringTable~+0
	dd	00h
	dd	00h
	dd	01h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$#__value_type$ipn0~~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~ virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$#__value_type$ipn0~~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_27746:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$#__value_type$ipn0~~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_27749:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_27781:
	mov	dword [ebp-03ch+014h],01h
L_27766:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$#__value_type$ipn0~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_27809:
L_27796:
L_27747:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~ virtual
@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$#__value_type$ipn0~~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$#__value_type$ipn0~~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~p#__value_type$ipn0~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~p#__value_type$ipn0~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#pointer_traits$p#__tree_end_node$p#__tree_node_base$pv~~~@pointer_to$qr#__tree_end_node$p#__tree_node_base$pv~~ virtual
@std@__1@#pointer_traits$p#__tree_end_node$p#__tree_node_base$pv~~~@pointer_to$qr#__tree_end_node$p#__tree_node_base$pv~~:
; Line 915:	    static pointer pointer_to(typename conditional<is_void<element_type>::value, 
; Line 916:	                                      __nat, element_type>::type& __r) noexcept 
; Line 917:	        {return std::__1::addressof(__r);} 
	push	ecx
L_27816:
	mov	eax,dword [esp+04h+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_27834:
L_27817:
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$#__tree_end_node$p#__tree_node_base$pv~~~$qr#__tree_end_node$p#__tree_node_base$pv~~ virtual
@std@__1@#addressof$#__tree_end_node$p#__tree_node_base$pv~~~$qr#__tree_end_node$p#__tree_node_base$pv~~:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_27840:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_27841:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#pair$xip11StringTable~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#pair$xip11StringTable~~~@$bdtr$qv:
L_27848:
L_27849:
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__map_iterator$#__tree_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~@$bdtr$qv:
	add	esp,byte 0ffffffech
L_27854:
L_27881:
L_27868:
L_27909:
L_27896:
L_27924:
L_27855:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__map_const_iterator$#__tree_const_iterator$#__value_type$ip11StringTable~p#__tree_node$#__value_type$ipn0~pv~i~~~@$bdtr$qv:
	add	esp,byte 0ffffffech
L_27930:
L_27957:
L_27944:
L_27985:
L_27972:
L_28000:
L_27931:
	add	esp,byte 014h
	ret
section code
	section vsc@std@__1@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv virtual
@std@__1@#__map_node_destructor$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@$bdtr$qv:
L_28006:
L_28007:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~i$0&~@$bdtr$qv:
	push	ecx
L_28012:
L_28026:
L_28013:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p#__tree_node$#__value_type$ip11StringTable~pv~#__map_node_destructor$#allocator$#__tree_node$#__value_type$ipn0~pv~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_28032:
L_28059:
L_28046:
L_28033:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#addressof$p11StringTable~$qrpn0 virtual
@std@__1@#addressof$p11StringTable~$qrpn0:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_28066:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_28067:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~ppn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~ppn0~@$bctr$qv:
	push	ecx
L_28074:
	mov	eax,dword [esp+04h+04h]
L_28092:
L_28075:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0 virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_28098:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_28101:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_28099:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$pn0~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0 virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$pn0~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_28108:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$pn0~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_28111:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_28143:
	mov	dword [ebp-03ch+014h],01h
L_28128:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_28171:
L_28158:
L_28109:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~ppn0~ virtual
@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~ppn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$pn0~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$pn0~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~ppn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#addressof$xi~$qrxi virtual
@std@__1@#addressof$xi~$qrxi:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_28178:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_28179:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~pxi~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~pxi~@$bctr$qv:
	push	ecx
L_28186:
	mov	eax,dword [esp+04h+04h]
L_28204:
L_28187:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_28210:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_28213:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_28211:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi virtual
@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$xi~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi virtual
@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$xi~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_28220:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$xi~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_28223:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_28255:
	mov	dword [ebp-03ch+014h],01h
L_28240:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],02h
	call	@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#__destroy$xi~$q#integral_constant$4bool3_Tp$0&~r#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_28283:
L_28270:
L_28221:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~pxi~ virtual
@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~pxi~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$xi~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi virtual
@$xc@std@__1@#allocator_traits$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~~@#destroy$xi~$qr#allocator$#__tree_node$#__value_type$ipn0~pv~~pxi:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#__tree_node$#__value_type$ip11StringTable~pv~~pxi~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#map$ip11StringTable#less$i~#allocator$#pair$xipn0~~~@$bdtr$qv virtual
@std@__1@#map$ip11StringTable#less$i~#allocator$#pair$xipn0~~~@$bdtr$qv:
L_28290:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__tree$#__value_type$ip11StringTable~#__map_value_compare$i#__value_type$ipn0~#less$i~4bool$0&~#allocator$#__value_type$ipn0~~~@$bdtr$qv
	pop	ecx
L_28291:
	ret
section code
section data
	section vsd@Resource@_$vt virtual
@Resource@_$vt:
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
	dd	@Resource@$bdtr$qv+0
	dd	@Resource@WriteRes$qr7ResFile+0
	dd	@Resource@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@17@Accelerators@Key virtual
@$xt@17@Accelerators@Key:
	dd	@Accelerators@Key@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	041h
	db	063h
	db	063h
	db	065h
	db	06ch
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	073h
	db	04bh
	db	065h
	db	079h
	db	00h
	dd	00h
section code
	section vsc@$xt@26random_access_iterator_tag virtual
@$xt@26random_access_iterator_tag:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	061h
	db	06eh
	db	064h
	db	06fh
	db	06dh
	db	05fh
	db	061h
	db	063h
	db	063h
	db	065h
	db	073h
	db	073h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	061h
	db	067h
	db	00h
	dd	0800h
	dd	@$xt@26bidirectional_iterator_tag+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~ virtual
@$xt@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~:
	dd	@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base_common$4bool$1&~ virtual
@$xt@#__deque_base_common$4bool$1&~:
	dd	@std@__1@#__deque_base_common$4bool$1&~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	06dh
	db	06fh
	db	06eh
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$17@Accelerators@Key~ virtual
@$xt@#allocator$17@Accelerators@Key~:
	dd	@std@__1@#allocator$17@Accelerators@Key~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$17@Accelerators@Key~~ virtual
@$xt@#allocator_traits$#allocator$17@Accelerators@Key~~:
	dd	@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p17@Accelerators@Key~ virtual
@$xt@#allocator$p17@Accelerators@Key~:
	dd	@std@__1@#allocator$p17@Accelerators@Key~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p17@Accelerators@Key~~ virtual
@$xt@#allocator_traits$#allocator$p17@Accelerators@Key~~:
	dd	@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$px17@Accelerators@Key~ virtual
@$xt@#allocator$px17@Accelerators@Key~:
	dd	@std@__1@#allocator$px17@Accelerators@Key~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer_common$4bool$1&~ virtual
@$xt@#__split_buffer_common$4bool$1&~:
	dd	@std@__1@#__split_buffer_common$4bool$1&~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	06dh
	db	06fh
	db	06eh
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~ virtual
@$xt@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~:
	dd	@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~ virtual
@$xt@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~:
	dd	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$17@Accelerators@Keypxn0rxn0pxpn0i9_DiffType$341&~ virtual
@$xt@#__deque_iterator$17@Accelerators@Keypxn0rxn0pxpn0i9_DiffType$341&~:
	dd	@std@__1@#__deque_iterator$17@Accelerators@Keypxn0rxn0pxpn0i9_DiffType$341&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$17@Accelerators@Key~~ virtual
@$xt@#__compressed_pair$ui#allocator$17@Accelerators@Key~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$17@Accelerators@Key#allocator$n0~~ virtual
@$xt@#__deque_base$17@Accelerators@Key#allocator$n0~~:
	dd	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tag17@Accelerators@Keyipn1rn1~ virtual
@$xt@#iterator$26random_access_iterator_tag17@Accelerators@Keyipn1rn1~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tag17@Accelerators@Keyipn1rn1~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$17@Accelerators@Key#allocator$n0~~ virtual
@$xt@#deque$17@Accelerators@Key#allocator$n0~~:
	dd	@std@__1@#deque$17@Accelerators@Key#allocator$n0~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$17@Accelerators@Key#allocator$n0~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@12Accelerators virtual
@$xt@12Accelerators:
	dd	@Accelerators@$bdtr$qv+0
	dd	078h
	dd	0400h
	db	041h
	db	063h
	db	063h
	db	065h
	db	06ch
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	073h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@Accelerators@_$vt virtual
@Accelerators@_$vt:
	dd	@$xt@12Accelerators+0
	dd	00h
	dd	00h
	dd	@Accelerators@$bdtr$qv+0
	dd	@Accelerators@WriteRes$qr7ResFile+0
	dd	@Accelerators@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@#default_delete$puc~ virtual
@$xt@#default_delete$puc~:
	dd	@std@__1@#default_delete$puc~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	066h
	db	061h
	db	075h
	db	06ch
	db	074h
	db	05fh
	db	064h
	db	065h
	db	06ch
	db	065h
	db	074h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$puc#default_delete$puc~~ virtual
@$xt@#__compressed_pair$puc#default_delete$puc~~:
	dd	@std@__1@#__compressed_pair$puc#default_delete$puc~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$puc#default_delete$puc~~ virtual
@$xt@#unique_ptr$puc#default_delete$puc~~:
	dd	@std@__1@#unique_ptr$puc#default_delete$puc~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@12ResourceData virtual
@$xt@12ResourceData:
	dd	@ResourceData@$bdtr$qv+0
	dd	010h
	dd	0400h
	db	052h
	db	065h
	db	073h
	db	06fh
	db	075h
	db	072h
	db	063h
	db	065h
	db	044h
	db	061h
	db	074h
	db	061h
	db	00h
	dd	00h
section code
	section vsc@$xt@#default_delete$12ResourceData~ virtual
@$xt@#default_delete$12ResourceData~:
	dd	@std@__1@#default_delete$12ResourceData~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	066h
	db	061h
	db	075h
	db	06ch
	db	074h
	db	05fh
	db	064h
	db	065h
	db	06ch
	db	065h
	db	074h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p12ResourceData#default_delete$n0~~ virtual
@$xt@#__compressed_pair$p12ResourceData#default_delete$n0~~:
	dd	@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$12ResourceData#default_delete$n0~~ virtual
@$xt@#unique_ptr$12ResourceData#default_delete$n0~~:
	dd	@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@6Bitmap virtual
@$xt@6Bitmap:
	dd	@Bitmap@$bdtr$qv+0
	dd	054h
	dd	0400h
	db	042h
	db	069h
	db	074h
	db	06dh
	db	061h
	db	070h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@Bitmap@_$vt virtual
@Bitmap@_$vt:
	dd	@$xt@6Bitmap+0
	dd	00h
	dd	00h
	dd	@Bitmap@$bdtr$qv+0
	dd	@Bitmap@WriteRes$qr7ResFile+0
	dd	@Bitmap@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~ virtual
@$xt@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~:
	dd	@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p4Icon~ virtual
@$xt@#allocator$p4Icon~:
	dd	@std@__1@#allocator$p4Icon~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p4Icon~~ virtual
@$xt@#allocator_traits$#allocator$p4Icon~~:
	dd	@std@__1@#allocator_traits$#allocator$p4Icon~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$pp4Icon~ virtual
@$xt@#allocator$pp4Icon~:
	dd	@std@__1@#allocator$pp4Icon~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$pp4Icon~~ virtual
@$xt@#allocator_traits$#allocator$pp4Icon~~:
	dd	@std@__1@#allocator_traits$#allocator$pp4Icon~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$pxp4Icon~ virtual
@$xt@#allocator$pxp4Icon~:
	dd	@std@__1@#allocator$pxp4Icon~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ppp4Icon#allocator$ppn0~~ virtual
@$xt@#__compressed_pair$ppp4Icon#allocator$ppn0~~:
	dd	@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$pp4Icon#allocator$ppn0~~ virtual
@$xt@#__split_buffer$pp4Icon#allocator$ppn0~~:
	dd	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$p4Iconpxpn0rxpn0pxppn0i9_DiffType$1024&~ virtual
@$xt@#__deque_iterator$p4Iconpxpn0rxpn0pxppn0i9_DiffType$1024&~:
	dd	@std@__1@#__deque_iterator$p4Iconpxpn0rxpn0pxppn0i9_DiffType$1024&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$p4Icon~~ virtual
@$xt@#__compressed_pair$ui#allocator$p4Icon~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$p4Icon#allocator$pn0~~ virtual
@$xt@#__deque_base$p4Icon#allocator$pn0~~:
	dd	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tagp4Iconippn1rpn1~ virtual
@$xt@#iterator$26random_access_iterator_tagp4Iconippn1rpn1~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tagp4Iconippn1rpn1~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$p4Icon#allocator$pn0~~ virtual
@$xt@#deque$p4Icon#allocator$pn0~~:
	dd	@std@__1@#deque$p4Icon#allocator$pn0~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$p4Icon#allocator$pn0~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@9GroupIcon virtual
@$xt@9GroupIcon:
	dd	@GroupIcon@$bdtr$qv+0
	dd	078h
	dd	0400h
	db	047h
	db	072h
	db	06fh
	db	075h
	db	070h
	db	049h
	db	063h
	db	06fh
	db	06eh
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@GroupIcon@_$vt virtual
@GroupIcon@_$vt:
	dd	@$xt@9GroupIcon+0
	dd	00h
	dd	00h
	dd	@GroupIcon@$bdtr$qv+0
	dd	@GroupIcon@WriteRes$qr7ResFile+0
	dd	@GroupIcon@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~ virtual
@$xt@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~:
	dd	@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p6Cursor~ virtual
@$xt@#allocator$p6Cursor~:
	dd	@std@__1@#allocator$p6Cursor~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p6Cursor~~ virtual
@$xt@#allocator_traits$#allocator$p6Cursor~~:
	dd	@std@__1@#allocator_traits$#allocator$p6Cursor~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$pp6Cursor~ virtual
@$xt@#allocator$pp6Cursor~:
	dd	@std@__1@#allocator$pp6Cursor~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$pp6Cursor~~ virtual
@$xt@#allocator_traits$#allocator$pp6Cursor~~:
	dd	@std@__1@#allocator_traits$#allocator$pp6Cursor~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$pxp6Cursor~ virtual
@$xt@#allocator$pxp6Cursor~:
	dd	@std@__1@#allocator$pxp6Cursor~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ppp6Cursor#allocator$ppn0~~ virtual
@$xt@#__compressed_pair$ppp6Cursor#allocator$ppn0~~:
	dd	@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$pp6Cursor#allocator$ppn0~~ virtual
@$xt@#__split_buffer$pp6Cursor#allocator$ppn0~~:
	dd	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$p6Cursorpxpn0rxpn0pxppn0i9_DiffType$1024&~ virtual
@$xt@#__deque_iterator$p6Cursorpxpn0rxpn0pxppn0i9_DiffType$1024&~:
	dd	@std@__1@#__deque_iterator$p6Cursorpxpn0rxpn0pxppn0i9_DiffType$1024&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$p6Cursor~~ virtual
@$xt@#__compressed_pair$ui#allocator$p6Cursor~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$p6Cursor#allocator$pn0~~ virtual
@$xt@#__deque_base$p6Cursor#allocator$pn0~~:
	dd	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tagp6Cursorippn1rpn1~ virtual
@$xt@#iterator$26random_access_iterator_tagp6Cursorippn1rpn1~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tagp6Cursorippn1rpn1~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$p6Cursor#allocator$pn0~~ virtual
@$xt@#deque$p6Cursor#allocator$pn0~~:
	dd	@std@__1@#deque$p6Cursor#allocator$pn0~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$p6Cursor#allocator$pn0~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@11GroupCursor virtual
@$xt@11GroupCursor:
	dd	@GroupCursor@$bdtr$qv+0
	dd	078h
	dd	0400h
	db	047h
	db	072h
	db	06fh
	db	075h
	db	070h
	db	043h
	db	075h
	db	072h
	db	073h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@GroupCursor@_$vt virtual
@GroupCursor@_$vt:
	dd	@$xt@11GroupCursor+0
	dd	00h
	dd	00h
	dd	@GroupCursor@$bdtr$qv+0
	dd	@GroupCursor@WriteRes$qr7ResFile+0
	dd	@GroupCursor@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@5Point virtual
@$xt@5Point:
	dd	@Point@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	050h
	db	06fh
	db	069h
	db	06eh
	db	074h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~ virtual
@$xt@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~:
	dd	@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~ virtual
@$xt@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~:
	dd	@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$px#unique_ptr$12ResourceData#default_delete$n0~~~ virtual
@$xt@#allocator$px#unique_ptr$12ResourceData#default_delete$n0~~~:
	dd	@std@__1@#allocator$px#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tag#unique_ptr$12ResourceData#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~ virtual
@$xt@#iterator$26random_access_iterator_tag#unique_ptr$12ResourceData#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tag#unique_ptr$12ResourceData#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@7Control virtual
@$xt@7Control:
	dd	@Control@$bdtr$qv+0
	dd	084h
	dd	0400h
	db	043h
	db	06fh
	db	06eh
	db	074h
	db	072h
	db	06fh
	db	06ch
	db	00h
	dd	00h
section code
	section vsc@$xt@#default_delete$7Control~ virtual
@$xt@#default_delete$7Control~:
	dd	@std@__1@#default_delete$7Control~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	066h
	db	061h
	db	075h
	db	06ch
	db	074h
	db	05fh
	db	064h
	db	065h
	db	06ch
	db	065h
	db	074h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p7Control#default_delete$n0~~ virtual
@$xt@#__compressed_pair$p7Control#default_delete$n0~~:
	dd	@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$7Control#default_delete$n0~~ virtual
@$xt@#unique_ptr$7Control#default_delete$n0~~:
	dd	@std@__1@#unique_ptr$7Control#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$#unique_ptr$7Control#default_delete$n0~~~ virtual
@$xt@#allocator$#unique_ptr$7Control#default_delete$n0~~~:
	dd	@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p#unique_ptr$7Control#default_delete$n0~~~ virtual
@$xt@#allocator$p#unique_ptr$7Control#default_delete$n0~~~:
	dd	@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$px#unique_ptr$7Control#default_delete$n0~~~ virtual
@$xt@#allocator$px#unique_ptr$7Control#default_delete$n0~~~:
	dd	@std@__1@#allocator$px#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tag#unique_ptr$7Control#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~ virtual
@$xt@#iterator$26random_access_iterator_tag#unique_ptr$7Control#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tag#unique_ptr$7Control#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@6Dialog virtual
@$xt@6Dialog:
	dd	@Dialog@$bdtr$qv+0
	dd	0110h
	dd	0400h
	db	044h
	db	069h
	db	061h
	db	06ch
	db	06fh
	db	067h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@Dialog@_$vt virtual
@Dialog@_$vt:
	dd	@$xt@6Dialog+0
	dd	00h
	dd	00h
	dd	@Dialog@$bdtr$qv+0
	dd	@Dialog@WriteRes$qr7ResFile+0
	dd	@Dialog@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@10DlgInclude virtual
@$xt@10DlgInclude:
	dd	@DlgInclude@$bdtr$qv+0
	dd	054h
	dd	0400h
	db	044h
	db	06ch
	db	067h
	db	049h
	db	06eh
	db	063h
	db	06ch
	db	075h
	db	064h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@DlgInclude@_$vt virtual
@DlgInclude@_$vt:
	dd	@$xt@10DlgInclude+0
	dd	00h
	dd	00h
	dd	@DlgInclude@$bdtr$qv+0
	dd	@DlgInclude@WriteRes$qr7ResFile+0
	dd	@DlgInclude@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@10FileHeader virtual
@$xt@10FileHeader:
	dd	@FileHeader@$bdtr$qv+0
	dd	04ch
	dd	0400h
	db	046h
	db	069h
	db	06ch
	db	065h
	db	048h
	db	065h
	db	061h
	db	064h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@FileHeader@_$vt virtual
@FileHeader@_$vt:
	dd	@$xt@10FileHeader+0
	dd	00h
	dd	00h
	dd	@FileHeader@$bdtr$qv+0
	dd	@FileHeader@WriteRes$qr7ResFile+0
	dd	@FileHeader@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@15GenericResource virtual
@$xt@15GenericResource:
	dd	@GenericResource@$bdtr$qv+0
	dd	054h
	dd	0400h
	db	047h
	db	065h
	db	06eh
	db	065h
	db	072h
	db	069h
	db	063h
	db	052h
	db	065h
	db	073h
	db	06fh
	db	075h
	db	072h
	db	063h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@GenericResource@_$vt virtual
@GenericResource@_$vt:
	dd	@$xt@15GenericResource+0
	dd	00h
	dd	00h
	dd	@GenericResource@$bdtr$qv+0
	dd	@GenericResource@WriteRes$qr7ResFile+0
	dd	@GenericResource@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~ virtual
@$xt@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~:
	dd	@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~ virtual
@$xt@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~:
	dd	@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$px#unique_ptr$8MenuItem#default_delete$n0~~~ virtual
@$xt@#allocator$px#unique_ptr$8MenuItem#default_delete$n0~~~:
	dd	@std@__1@#allocator$px#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tag#unique_ptr$8MenuItem#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~ virtual
@$xt@#iterator$26random_access_iterator_tag#unique_ptr$8MenuItem#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tag#unique_ptr$8MenuItem#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@8MenuItem virtual
@$xt@8MenuItem:
	dd	@MenuItem@$bdtr$qv+0
	dd	058h
	dd	0400h
	db	04dh
	db	065h
	db	06eh
	db	075h
	db	049h
	db	074h
	db	065h
	db	06dh
	db	00h
	dd	00h
section code
	section vsc@$xt@#default_delete$8MenuItem~ virtual
@$xt@#default_delete$8MenuItem~:
	dd	@std@__1@#default_delete$8MenuItem~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	066h
	db	061h
	db	075h
	db	06ch
	db	074h
	db	05fh
	db	064h
	db	065h
	db	06ch
	db	065h
	db	074h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p8MenuItem#default_delete$n0~~ virtual
@$xt@#__compressed_pair$p8MenuItem#default_delete$n0~~:
	dd	@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$8MenuItem#default_delete$n0~~ virtual
@$xt@#unique_ptr$8MenuItem#default_delete$n0~~:
	dd	@std@__1@#unique_ptr$8MenuItem#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@4Menu virtual
@$xt@4Menu:
	dd	@Menu@$bdtr$qv+0
	dd	080h
	dd	0400h
	db	04dh
	db	065h
	db	06eh
	db	075h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@Menu@_$vt virtual
@Menu@_$vt:
	dd	@$xt@4Menu+0
	dd	00h
	dd	00h
	dd	@Menu@$bdtr$qv+0
	dd	@Menu@WriteRes$qr7ResFile+0
	dd	@Menu@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@12MessageTable virtual
@$xt@12MessageTable:
	dd	@MessageTable@$bdtr$qv+0
	dd	054h
	dd	0400h
	db	04dh
	db	065h
	db	073h
	db	073h
	db	061h
	db	067h
	db	065h
	db	054h
	db	061h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@MessageTable@_$vt virtual
@MessageTable@_$vt:
	dd	@$xt@12MessageTable+0
	dd	00h
	dd	00h
	dd	@MessageTable@$bdtr$qv+0
	dd	@MessageTable@WriteRes$qr7ResFile+0
	dd	@MessageTable@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@6RCData virtual
@$xt@6RCData:
	dd	@RCData@$bdtr$qv+0
	dd	078h
	dd	0400h
	db	052h
	db	043h
	db	044h
	db	061h
	db	074h
	db	061h
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@RCData@_$vt virtual
@RCData@_$vt:
	dd	@$xt@6RCData+0
	dd	00h
	dd	00h
	dd	@RCData@$bdtr$qv+0
	dd	@RCData@WriteRes$qr7ResFile+0
	dd	@RCData@ReadRC$qr6RCFile+0
section data
section code
	section vsc@$xt@15InternalVerInfo virtual
@$xt@15InternalVerInfo:
	dd	@InternalVerInfo@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	049h
	db	06eh
	db	074h
	db	065h
	db	072h
	db	06eh
	db	061h
	db	06ch
	db	056h
	db	065h
	db	072h
	db	049h
	db	06eh
	db	066h
	db	06fh
	db	00h
	dd	00h
section code
	section vsc@$xt@#default_delete$15InternalVerInfo~ virtual
@$xt@#default_delete$15InternalVerInfo~:
	dd	@std@__1@#default_delete$15InternalVerInfo~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	066h
	db	061h
	db	075h
	db	06ch
	db	074h
	db	05fh
	db	064h
	db	065h
	db	06ch
	db	065h
	db	074h
	db	065h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~ virtual
@$xt@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~:
	dd	@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#unique_ptr$15InternalVerInfo#default_delete$n0~~ virtual
@$xt@#unique_ptr$15InternalVerInfo#default_delete$n0~~:
	dd	@std@__1@#unique_ptr$15InternalVerInfo#default_delete$n0~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	075h
	db	06eh
	db	069h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	070h
	db	074h
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~ virtual
@$xt@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~:
	dd	@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~ virtual
@$xt@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~:
	dd	@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~ virtual
@$xt@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~:
	dd	@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	05fh
	db	074h
	db	072h
	db	061h
	db	069h
	db	074h
	db	073h
	db	00h
	dd	00h
section code
	section vsc@$xt@#allocator$px#unique_ptr$15InternalVerInfo#default_delete$n0~~~ virtual
@$xt@#allocator$px#unique_ptr$15InternalVerInfo#default_delete$n0~~~:
	dd	@std@__1@#allocator$px#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv+0
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	061h
	db	06ch
	db	06ch
	db	06fh
	db	063h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	018h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	073h
	db	070h
	db	06ch
	db	069h
	db	074h
	db	05fh
	db	062h
	db	075h
	db	066h
	db	066h
	db	065h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__split_buffer_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~ virtual
@$xt@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~:
	dd	@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv+0
	dd	0ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~ virtual
@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~:
	dd	@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	05fh
	db	069h
	db	06dh
	db	070h
	db	00h
	dd	00h
section code
	section vsc@$xt@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~ virtual
@$xt@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~:
	dd	@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv+0
	dd	08h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	063h
	db	06fh
	db	06dh
	db	070h
	db	072h
	db	065h
	db	073h
	db	073h
	db	065h
	db	064h
	db	05fh
	db	070h
	db	061h
	db	069h
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	05fh
	db	062h
	db	061h
	db	073h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base_common$4bool$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#iterator$26random_access_iterator_tag#unique_ptr$15InternalVerInfo#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~ virtual
@$xt@#iterator$26random_access_iterator_tag#unique_ptr$15InternalVerInfo#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~:
	dd	00h
	dd	04h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	00h
section code
	section vsc@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~ virtual
@$xt@#reverse_iterator$#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~:
	dd	@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv+0
	dd	01ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	072h
	db	065h
	db	076h
	db	065h
	db	072h
	db	073h
	db	065h
	db	05fh
	db	069h
	db	074h
	db	065h
	db	072h
	db	061h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#iterator$26random_access_iterator_tag#unique_ptr$15InternalVerInfo#default_delete$n1~~ip#unique_ptr$n1#default_delete$n1~~r#unique_ptr$n1#default_delete$n1~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~ virtual
@$xt@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~:
	dd	@std@__1@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv+0
	dd	02ch
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	064h
	db	065h
	db	071h
	db	075h
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@11VersionInfo virtual
@$xt@11VersionInfo:
	dd	@VersionInfo@$bdtr$qv+0
	dd	0a8h
	dd	0400h
	db	056h
	db	065h
	db	072h
	db	073h
	db	069h
	db	06fh
	db	06eh
	db	049h
	db	06eh
	db	066h
	db	06fh
	db	00h
	dd	0800h
	dd	@$xt@8Resource+0
	dd	00h
	dd	00h
section code
section data
	section vsd@VersionInfo@_$vt virtual
@VersionInfo@_$vt:
	dd	@$xt@11VersionInfo+0
	dd	00h
	dd	00h
	dd	@VersionInfo@$bdtr$qv+0
	dd	@VersionInfo@WriteRes$qr7ResFile+0
	dd	@VersionInfo@ReadRC$qr6RCFile+0
section data
section code
	section vsc@std@__1@#integral_constant$4bool3_Tp$0&~@$bdtr$qv virtual
@std@__1@#integral_constant$4bool3_Tp$0&~@$bdtr$qv:
L_28296:
L_28297:
	ret
section code
	section vsc@std@__1@#binary_function$ii4bool~@$bdtr$qv virtual
@std@__1@#binary_function$ii4bool~@$bdtr$qv:
L_28302:
L_28303:
	ret
section code
	section vsc@std@__1@#less$i~@$bdtr$qv virtual
@std@__1@#less$i~@$bdtr$qv:
	push	ecx
L_28308:
L_28322:
L_28309:
	pop	ecx
	ret
section code
	section vsc@Accelerators@$bdtr$qv virtual
@Accelerators@$bdtr$qv:
; Line 55:	    virtual ~Accelerators() {} 
	push	ecx
	push	ebx
L_28328:
	mov	ebx,dword [esp+04h+08h]
	mov	eax,ebx
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bdtr$qv
	pop	ecx
L_28344:
	push	ebx
	call	@Resource@$bdtr$qv
	pop	ecx
L_28329:
	pop	ebx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$17@Accelerators@Key~@deallocate$qpn0ui virtual
@std@__1@#allocator$17@Accelerators@Key~@deallocate$qpn0ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_28350:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_28368:
L_28351:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@deallocate$qr#allocator$n0~pn0ui virtual
@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@deallocate$qr#allocator$n0~pn0ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_28374:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_28392:
L_28375:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p17@Accelerators@Key~@deallocate$qppn0ui virtual
@std@__1@#allocator$p17@Accelerators@Key~@deallocate$qppn0ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_28398:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_28416:
L_28399:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@deallocate$qr#allocator$pn0~ppn0ui virtual
@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@deallocate$qr#allocator$pn0~ppn0ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_28422:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_28440:
L_28423:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_28446:
	mov	eax,dword [esp+04h]
L_28447:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_28454:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_28455:
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@first$xqv virtual
@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_28462:
	mov	eax,dword [esp+04h+04h]
L_28480:
L_28463:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@second$qv virtual
@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_28486:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_28504:
L_28487:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__alloc$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_28510:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_28543:
L_28528:
L_28511:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_28550:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_28583:
L_28568:
L_28551:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bdtr$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_28590:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_28645:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_28659:
L_28630:
L_28613:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_28593
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_28722:
L_28707:
L_28692:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@first$xqv
	pop	ecx
L_28770:
L_28755:
L_28740:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_28788:
L_28677:
L_28593:
; Line 358:	} 
L_28829:
L_28816:
L_28803:
L_28845:
L_28591:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@begin$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_28851:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_28852:
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@end$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_28859:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_28860:
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@clear$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_28867:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_28902:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_28916:
L_28887:
L_28868:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@size$xqv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_28923:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_28924:
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@empty$xqv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_28931:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_28932:
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@capacity$xqv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_28940:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_28988:
L_28973:
L_28958:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_28941:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@front$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_28996:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_28997:
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@pop_front$qv virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_29004:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_29054:
L_29039:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_29082:
L_29069:
L_29024:
L_29005:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0 virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_29090:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_29093:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_29140:
	mov	dword [ebp-03ch+014h],01h
L_29125:
	mov	dword [ebp-03ch+014h],02h
L_29110:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_29182:
L_29169:
L_29156:
L_29091:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$p17@Accelerators@Key~ virtual
@$xt@#__libcpp_trivial_destructor$p17@Accelerators@Key~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$p17@Accelerators@Key~ virtual
@$xt@#is_trivially_destructible$p17@Accelerators@Key~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$p17@Accelerators@Key~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0 virtual
@$xc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$p17@Accelerators@Key~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_29190:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_29193:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_29191:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0 virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_29200:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_29220:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_29234:
L_29201:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_29240:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_29244
L_29243:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_29314:
L_29299:
L_29284:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_29332:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_29363:
L_29348:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	add	esp,byte 0ch
L_29391:
L_29378:
L_29269:
L_29245:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_29243
L_29244:
; Line 311:	} 
L_29241:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_29399:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_29400:
	ret
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$binc$qv virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_29407:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 0ch
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	imul	ecx,dword 0aaaaaaabh
	sar	ecx,02h
	cmp	ecx,dword 0155h
	jne	short	L_29410
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_29410:
; Line 304:	        return *this; 
; Line 305:	    } 
L_29408:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~ virtual
@$bequ$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_29422:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_29423:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~ virtual
@$bneq$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_29431:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_29432:
	ret
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bctr$qppn0pn0 virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bctr$qppn0pn0:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_29440:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
; Line 415:	        : __m_iter_(__m), __ptr_(__p) {} 
L_29441:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_29448:
	mov	eax,dword [esp+04h]
L_29449:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_29456:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_29457:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_29464:
	mov	eax,dword [esp+04h+04h]
L_29482:
L_29465:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_29488:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_29506:
L_29489:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@begin$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_29512:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_29530:
	mov	eax,dword [ebp+020h]
	mul	dword [L_29612]
	mov	eax,dword [ebp+020h]
	sub	eax,edx
	shr	eax,01h
	add	eax,edx
	shr	eax,08h
	shl	eax,02h
	mov	edi,ebx
	add	edi,eax
	mov	ebx,ecx
	lea	ecx,[esp-030h+040h]
	mov	esi,edi
	mov	eax,ebp
	add	eax,byte 08h
	mov	edx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
L_29578:
	cmp	edx,eax
	jne	short	L_29563
	xor	eax,eax
	jmp	short	L_29564
L_29563:
	mov	eax,dword [ebp+020h]
	mul	dword [L_29612]
	mov	eax,dword [ebp+020h]
	sub	eax,edx
	shr	eax,01h
	add	eax,edx
	shr	eax,08h
	imul	eax,dword 0155h
	mov	edx,dword [ebp+020h]
	sub	edx,eax
	imul	edx,byte 0ch
	mov	eax,dword [edi]
	add	eax,edx
L_29564:
	mov	dword [esp-030h+040h],esi
	mov	dword [esp-030h+04h+040h],eax
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
; Line 415:	        : __m_iter_(__m), __ptr_(__p) {} 
L_29561:
	mov	ecx,dword [ecx]
	mov	eax,ebx
	mov	dword [eax],ecx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ebx+04h],eax
L_29546:
	mov	eax,dword [esp+04h+040h]
L_29594:
; Line 1062:	} 
L_29608:
L_29513:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@end$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@end$qv:
	add	esp,byte 0ffffffc0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_29615:
	mov	ecx,dword [esp+04h+050h]
	mov	esi,dword [esp+08h+050h]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,esi
	mov	edx,eax
	add	edx,byte 024h
L_29663:
L_29648:
L_29633:
	mov	eax,dword [esi+020h]
	add	eax,dword [edx]
	mov	edi,eax
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,esi
	add	eax,byte 08h
	mov	ebp,dword [eax+08h]
L_29681:
	mov	ebx,edi
	mov	eax,edi
	mul	dword [L_29612]
	mov	eax,ebx
	sub	eax,edx
	shr	eax,01h
	add	eax,edx
	shr	eax,08h
	shl	eax,02h
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	mov	dword [esp-04h+050h],ecx
	lea	ecx,[esp-040h+050h]
	mov	ebx,ebp
	mov	eax,esi
	add	eax,byte 08h
	mov	edx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
L_29729:
	cmp	edx,eax
	jne	short	L_29714
	xor	eax,eax
	jmp	short	L_29715
L_29714:
	mov	esi,edi
	mov	eax,edi
	mul	dword [L_29612]
	mov	eax,esi
	sub	eax,edx
	shr	eax,01h
	add	eax,edx
	shr	eax,08h
	imul	edx,eax,0155h
	mov	eax,esi
	sub	eax,edx
	imul	edx,eax,byte 0ch
	mov	eax,ebp
	mov	eax,dword [eax]
	add	eax,edx
L_29715:
	mov	dword [esp-040h+050h],ebx
	mov	dword [esp-040h+04h+050h],eax
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
; Line 415:	        : __m_iter_(__m), __ptr_(__p) {} 
L_29712:
	mov	ecx,dword [ecx]
	mov	eax,dword [esp-04h+050h]
	mov	dword [eax],ecx
	mov	ecx,dword [esp-040h+04h+050h]
	mov	eax,dword [esp-04h+050h]
	mov	dword [eax+04h],ecx
L_29697:
	mov	eax,dword [esp+04h+050h]
L_29745:
; Line 1079:	} 
L_29759:
L_29616:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 040h
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@size$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_29765:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_29798:
L_29783:
L_29766:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@__alloc$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_29805:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_29838:
L_29823:
L_29806:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bdtr$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_29845:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_29869:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_29885:
	cmp	edi,esi
	je	short	L_29850
L_29848:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_29946:
L_29931:
L_29916:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_29964:
L_29901:
L_29851:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_29849:
	cmp	edi,esi
	jne	short	L_29946
L_29850:
; Line 1109:	} 
L_30005:
L_29992:
L_29979:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@$bdtr$qv
	pop	ecx
L_30021:
L_29846:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@clear$qv virtual
@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_30027:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_30100:
L_30085:
L_30070:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_30118:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_30134:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_30032
L_30030:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_30182:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_30167:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_30214:
L_30199:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0
	add	esp,byte 0ch
L_30242:
L_30229:
L_30152:
L_30033:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 0ch
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	imul	eax,dword 0aaaaaaabh
	sar	eax,02h
	cmp	eax,dword 0155h
	jne	short	L_30267
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_30248:
; Line 304:	        return *this; 
; Line 305:	    } 
L_30267:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_30031:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~rx#__deque_iterator$n0pn0rn0ppn0in1$341&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_30030
L_30032:
L_30281:
L_30295:
L_30309:
L_30323:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_30369:
L_30354:
L_30339:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_30387:
	cmp	eax,byte 02h
	jbe	short	L_30039
L_30038:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_30418:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_30434:
L_30403:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p17@Accelerators@Key~@$bctr$qv
	pop	ecx
L_30483:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$p17@Accelerators@Key#allocator$pn0~~@__destruct_at_begin$qppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p17@Accelerators@Key~@$bdtr$qv
	pop	ecx
L_30497:
L_30468:
L_30451:
L_30040:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_30515:
	cmp	eax,byte 02h
	ja	short	L_30038
L_30039:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_30531:
	cmp	eax,byte 01h
	je	short	L_30050
	cmp	eax,byte 02h
	je	short	L_30051
	jmp	short	L_30053
; Line 1171:	    { 
L_30050:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0aah
; Line 1174:	        break; 
	jmp	short	L_30047
L_30051:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0155h
; Line 1177:	        break; 
L_30053:
L_30047:
; Line 1179:	} 
L_30028:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bdtr$qv:
L_30537:
L_30538:
	ret
section code
	section vsc@std@__1@#default_delete$12ResourceData~@$bcall$xqpn0 virtual
@std@__1@#default_delete$12ResourceData~@$bcall$xqpn0:
; Line 2427:	     void operator() (_Tp* __ptr) const noexcept 
; Line 2428:	        { 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_30543:
	mov	ebx,dword [esp+08h+014h]
; Line 2431:	            delete __ptr; 
	and	ebx,ebx
	je	short	L_30548
	mov	eax,ebx
	mov	esi,eax
	add	esi,byte 04h
	mov	eax,esi
	push	eax
	call	@std@__1@#unique_ptr$puc#default_delete$puc~~@reset$qv
	pop	ecx
	push	esi
	call	@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@$bdtr$qv
	pop	ecx
L_30590:
L_30577:
L_30562:
	push	ebx
	call	dword [@$bdel$qpv]
	pop	ecx
L_30548:
; Line 2432:	        } 
L_30544:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_30598:
	mov	eax,dword [esp+04h]
L_30599:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_30606:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_30607:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@first$qv virtual
@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_30614:
	mov	eax,dword [esp+04h+04h]
L_30632:
L_30615:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@second$qv virtual
@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_30638:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_30656:
L_30639:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffc0h
L_30662:
	mov	ecx,dword [esp+04h+040h]
	xor	edx,edx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,ecx
L_30715:
L_30700:
	mov	eax,dword [eax]
; Line 2628:	        __ptr_.first() = __p; 
L_30747:
L_30732:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	and	eax,eax
	je	short	L_30668
; Line 2630:	            __ptr_.second()(__tmp); 
L_30794:
L_30779:
; Line 2431:	            delete __ptr; 
	mov	dword [esp-040h+040h],eax
	and	eax,eax
	je	short	L_30798
	mov	eax,dword [esp-040h+040h]
	add	eax,byte 04h
	push	eax
	call	@std@__1@#unique_ptr$puc#default_delete$puc~~@$bdtr$qv
	pop	ecx
L_30812:
	mov	eax,dword [esp-040h+040h]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_30798:
; Line 2432:	        } 
L_30764:
L_30668:
; Line 2631:	    } 
L_30685:
L_30854:
L_30841:
L_30828:
L_30663:
	add	esp,byte 040h
	ret
section code
	section vsc@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@reset$qpn0 virtual
@std@__1@#unique_ptr$12ResourceData#default_delete$n0~~@reset$qpn0:
; Line 2626:	    { 
	add	esp,byte 0ffffffd0h
	push	ebx
L_30862:
	mov	ecx,dword [esp+08h+034h]
	mov	eax,dword [esp+04h+034h]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	edx,eax
L_30900:
L_30885:
	mov	edx,dword [edx]
	mov	dword [esp-04h+034h],edx
; Line 2628:	        __ptr_.first() = __p; 
L_30932:
L_30917:
	mov	dword [eax],ecx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+034h],byte 00h
	je	short	L_30865
; Line 2630:	            __ptr_.second()(__tmp); 
L_30979:
L_30964:
	mov	eax,dword [esp-04h+034h]
; Line 2431:	            delete __ptr; 
	mov	dword [esp-030h+034h],eax
	and	eax,eax
	je	short	L_30983
	mov	eax,dword [esp-030h+034h]
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,ebx
	push	eax
	call	@std@__1@#unique_ptr$puc#default_delete$puc~~@reset$qv
	pop	ecx
	push	ebx
	call	@std@__1@#__compressed_pair$puc#default_delete$puc~~@$bdtr$qv
	pop	ecx
L_31012:
L_30997:
	mov	eax,dword [esp-030h+034h]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_30983:
; Line 2432:	        } 
L_30949:
L_30865:
; Line 2631:	    } 
L_30863:
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@ResourceData@$bdtr$qv virtual
@ResourceData@$bdtr$qv:
; Line 40:	    ~ResourceData() {} 
	add	esp,byte 0ffffffe0h
	push	ebx
	push	esi
	push	edi
L_31020:
	mov	eax,dword [esp+04h+02ch]
	mov	ebx,eax
	add	ebx,byte 04h
	mov	esi,ebx
; Line 2836:	        pointer __tmp = __ptr_.first(); 
	mov	eax,esi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@first$qv
	pop	ecx
L_31073:
	mov	edi,dword [eax]
; Line 2837:	        __ptr_.first() = nullptr; 
	mov	eax,esi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@first$qv
	pop	ecx
L_31089:
	mov	dword [eax],00h
; Line 2838:	        if (__tmp) 
	and	edi,edi
	je	short	L_31041
; Line 2839:	            __ptr_.second()(__tmp); 
	push	byte 00h
	push	edi
	mov	eax,esi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@second$qv
	pop	ecx
L_31105:
	push	eax
	call	@std@__1@#default_delete$puc~@#$bcall$uc~$xqpucpv
	add	esp,byte 0ch
L_31041:
; Line 2840:	    } 
L_31058:
	mov	eax,ebx
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$puc~@$bdtr$qv
	pop	ecx
L_31133:
L_31120:
L_31038:
L_31021:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 020h
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_31141:
	mov	eax,dword [esp+04h]
L_31142:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_31149:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_31150:
	ret
section code
	section vsc@std@__1@#__compressed_pair$puc#default_delete$puc~~@first$qv virtual
@std@__1@#__compressed_pair$puc#default_delete$puc~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_31157:
	mov	eax,dword [esp+04h+04h]
L_31175:
L_31158:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$puc#default_delete$puc~~@second$qv virtual
@std@__1@#__compressed_pair$puc#default_delete$puc~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_31181:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_31199:
L_31182:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$puc#default_delete$puc~~@$bdtr$qv virtual
@std@__1@#unique_ptr$puc#default_delete$puc~~@$bdtr$qv:
; Line 2790:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffc4h
L_31205:
	mov	eax,dword [esp+04h+03ch]
; Line 2836:	        pointer __tmp = __ptr_.first(); 
	mov	ecx,eax
L_31258:
L_31243:
	mov	ecx,dword [ecx]
	mov	dword [esp-034h+03ch],ecx
; Line 2837:	        __ptr_.first() = nullptr; 
L_31290:
L_31275:
	mov	dword [eax],00h
; Line 2838:	        if (__tmp) 
	cmp	dword [esp-034h+03ch],byte 00h
	je	short	L_31211
; Line 2839:	            __ptr_.second()(__tmp); 
L_31337:
L_31322:
	mov	eax,dword [esp-034h+03ch]
; Line 2454:	            delete [] __ptr; 
	mov	dword [esp-03ch+03ch],eax
	and	eax,eax
	je	short	L_31341
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	dword [@$bdla$qpv]
	pop	ecx
L_31341:
; Line 2455:	        } 
L_31307:
L_31211:
; Line 2840:	    } 
L_31228:
L_31381:
L_31368:
L_31355:
L_31206:
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#unique_ptr$puc#default_delete$puc~~@reset$qv virtual
@std@__1@#unique_ptr$puc#default_delete$puc~~@reset$qv:
; Line 2834:	     void reset() noexcept 
; Line 2835:	    { 
	add	esp,byte 0ffffffd4h
L_31389:
	mov	eax,dword [esp+04h+02ch]
; Line 2836:	        pointer __tmp = __ptr_.first(); 
	mov	ecx,eax
L_31427:
L_31412:
	mov	ecx,dword [ecx]
	mov	dword [esp-04h+02ch],ecx
; Line 2837:	        __ptr_.first() = nullptr; 
L_31459:
L_31444:
	mov	dword [eax],00h
; Line 2838:	        if (__tmp) 
	cmp	dword [esp-04h+02ch],byte 00h
	je	short	L_31392
; Line 2839:	            __ptr_.second()(__tmp); 
L_31506:
L_31491:
	mov	eax,dword [esp-04h+02ch]
; Line 2454:	            delete [] __ptr; 
	mov	dword [esp-02ch+02ch],eax
	and	eax,eax
	je	short	L_31510
	mov	eax,dword [esp-02ch+02ch]
	push	eax
	call	dword [@$bdla$qpv]
	pop	ecx
L_31510:
; Line 2455:	        } 
L_31476:
L_31392:
; Line 2840:	    } 
L_31390:
	add	esp,byte 02ch
	ret
section code
	section vsc@GroupIcon@$bdtr$qv virtual
@GroupIcon@$bdtr$qv:
; Line 88:	    virtual ~GroupIcon() {} 
	push	ecx
	push	ebx
L_31515:
	mov	ebx,dword [esp+04h+08h]
	mov	eax,ebx
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bdtr$qv
	pop	ecx
L_31531:
	push	ebx
	call	@Resource@$bdtr$qv
	pop	ecx
L_31516:
	pop	ebx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p4Icon~@deallocate$qppn0ui virtual
@std@__1@#allocator$p4Icon~@deallocate$qppn0ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_31537:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_31555:
L_31538:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p4Icon~~@deallocate$qr#allocator$pn0~ppn0ui virtual
@std@__1@#allocator_traits$#allocator$p4Icon~~@deallocate$qr#allocator$pn0~ppn0ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_31561:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_31579:
L_31562:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$pp4Icon~@deallocate$qpppn0ui virtual
@std@__1@#allocator$pp4Icon~@deallocate$qpppn0ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_31585:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_31603:
L_31586:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp4Icon~~@deallocate$qr#allocator$ppn0~pppn0ui virtual
@std@__1@#allocator_traits$#allocator$pp4Icon~~@deallocate$qr#allocator$ppn0~pppn0ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_31609:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_31627:
L_31610:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_31633:
	mov	eax,dword [esp+04h]
L_31634:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_31641:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_31642:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@first$xqv virtual
@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_31649:
	mov	eax,dword [esp+04h+04h]
L_31667:
L_31650:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@second$qv virtual
@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_31673:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_31691:
L_31674:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__alloc$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_31697:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_31730:
L_31715:
L_31698:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_31737:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_31770:
L_31755:
L_31738:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bdtr$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_31777:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_31832:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_31846:
L_31817:
L_31800:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_31780
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_31909:
L_31894:
L_31879:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@first$xqv
	pop	ecx
L_31957:
L_31942:
L_31927:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_31975:
L_31864:
L_31780:
; Line 358:	} 
L_32016:
L_32003:
L_31990:
L_32032:
L_31778:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@begin$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_32038:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_32039:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@end$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_32046:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_32047:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@clear$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_32054:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_32089:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_32103:
L_32074:
L_32055:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@size$xqv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_32110:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_32111:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@empty$xqv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_32118:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_32119:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@capacity$xqv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_32127:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_32175:
L_32160:
L_32145:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_32128:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@front$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_32183:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_32184:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@pop_front$qv virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_32191:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_32241:
L_32226:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_32269:
L_32256:
L_32211:
L_32192:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0 virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_32277:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_32280:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_32327:
	mov	dword [ebp-03ch+014h],01h
L_32312:
	mov	dword [ebp-03ch+014h],02h
L_32297:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_32369:
L_32356:
L_32343:
L_32278:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$pp4Icon~ virtual
@$xt@#__libcpp_trivial_destructor$pp4Icon~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$pp4Icon~ virtual
@$xt@#is_trivially_destructible$pp4Icon~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$pp4Icon~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0 virtual
@$xc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$pp4Icon~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_32377:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_32380:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_32378:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0 virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_32387:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_32407:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_32421:
L_32388:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_32427:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_32431
L_32430:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_32501:
L_32486:
L_32471:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_32519:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_32550:
L_32535:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0
	add	esp,byte 0ch
L_32578:
L_32565:
L_32456:
L_32432:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_32430
L_32431:
; Line 311:	} 
L_32428:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_32586:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_32587:
	ret
section code
	section vsc@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$binc$qv virtual
@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_32594:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 04h
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	sar	ecx,02h
	cmp	ecx,dword 0400h
	jne	short	L_32597
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_32597:
; Line 304:	        return *this; 
; Line 305:	    } 
L_32595:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~ virtual
@$bequ$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_32609:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_32610:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~ virtual
@$bneq$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_32618:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_32619:
	ret
section code
	section vsc@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qpppn0ppn0 virtual
@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qpppn0ppn0:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_32627:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_32628:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_32635:
	mov	eax,dword [esp+04h]
L_32636:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_32643:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_32644:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_32651:
	mov	eax,dword [esp+04h+04h]
L_32669:
L_32652:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_32675:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_32693:
L_32676:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@begin$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_32699:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	eax,dword [eax+08h]
L_32717:
	mov	edx,dword [ebp+020h]
	shr	edx,0ah
	shl	edx,02h
	add	edx,eax
	lea	eax,[esp-030h+040h]
	mov	edi,edx
	mov	ebx,ebp
	add	ebx,byte 08h
	mov	esi,dword [ebx+0ch]
	mov	ebx,dword [ebx+08h]
L_32765:
	cmp	esi,ebx
	jne	short	L_32750
	xor	edx,edx
	jmp	short	L_32751
L_32750:
	mov	ebx,dword [ebp+020h]
	and	ebx,dword 03ffh
	shl	ebx,02h
	mov	edx,dword [edx]
	add	edx,ebx
L_32751:
	mov	dword [esp-030h+040h],edi
	mov	dword [esp-030h+04h+040h],edx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_32748:
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ecx+04h],eax
L_32733:
	mov	eax,dword [esp+04h+040h]
L_32781:
; Line 1062:	} 
L_32795:
L_32700:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@end$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@end$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_32801:
	mov	edx,dword [esp+04h+04ch]
	mov	ecx,dword [esp+08h+04ch]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,ecx
	add	eax,byte 024h
L_32849:
L_32834:
L_32819:
	mov	ebx,dword [ecx+020h]
	mov	edi,dword [eax]
	add	edi,ebx
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,ecx
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_32867:
	mov	eax,edi
	shr	eax,0ah
	shl	eax,02h
	mov	ebp,ebx
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	lea	eax,[esp-03ch+04ch]
	mov	ebx,ebp
	add	ecx,byte 08h
	mov	esi,dword [ecx+0ch]
	mov	ecx,dword [ecx+08h]
L_32915:
	cmp	esi,ecx
	jne	short	L_32900
	xor	ecx,ecx
	jmp	short	L_32901
L_32900:
	mov	ecx,edi
	and	ecx,dword 03ffh
	mov	esi,ecx
	shl	esi,02h
	mov	ecx,dword [ebp]
	add	ecx,esi
L_32901:
	mov	dword [esp-03ch+04ch],ebx
	mov	dword [esp-03ch+04h+04ch],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_32898:
	mov	ecx,dword [eax]
	mov	eax,edx
	mov	dword [eax],ecx
	mov	eax,dword [esp-03ch+04h+04ch]
	mov	dword [edx+04h],eax
L_32883:
	mov	eax,dword [esp+04h+04ch]
L_32931:
; Line 1079:	} 
L_32945:
L_32802:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@size$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_32951:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_32984:
L_32969:
L_32952:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@__alloc$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_32991:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_33024:
L_33009:
L_32992:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bdtr$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_33031:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_33055:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_33071:
	cmp	edi,esi
	je	short	L_33036
L_33034:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_33132:
L_33117:
L_33102:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_33150:
L_33087:
L_33037:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_33035:
	cmp	edi,esi
	jne	short	L_33132
L_33036:
; Line 1109:	} 
L_33191:
L_33178:
L_33165:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@$bdtr$qv
	pop	ecx
L_33207:
L_33032:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$p4Icon#allocator$pn0~~@clear$qv virtual
@std@__1@#__deque_base$p4Icon#allocator$pn0~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_33213:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_33286:
L_33271:
L_33256:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_33304:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_33320:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_33218
L_33216:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_33368:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_33353:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_33400:
L_33385:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	add	esp,byte 0ch
L_33428:
L_33415:
L_33338:
L_33219:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 04h
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	sar	eax,02h
	cmp	eax,dword 0400h
	jne	short	L_33453
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_33434:
; Line 304:	        return *this; 
; Line 305:	    } 
L_33453:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_33217:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_33216
L_33218:
L_33467:
L_33481:
L_33495:
L_33509:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_33555:
L_33540:
L_33525:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_33573:
	cmp	eax,byte 02h
	jbe	short	L_33225
L_33224:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_33604:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_33620:
L_33589:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$pp4Icon~@$bctr$qv
	pop	ecx
L_33669:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$pp4Icon#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$pp4Icon~@$bdtr$qv
	pop	ecx
L_33683:
L_33654:
L_33637:
L_33226:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_33701:
	cmp	eax,byte 02h
	ja	short	L_33224
L_33225:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_33717:
	cmp	eax,byte 01h
	je	short	L_33236
	cmp	eax,byte 02h
	je	short	L_33237
	jmp	short	L_33239
; Line 1171:	    { 
L_33236:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0200h
; Line 1174:	        break; 
	jmp	short	L_33233
L_33237:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0400h
; Line 1177:	        break; 
L_33239:
L_33233:
; Line 1179:	} 
L_33214:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bdtr$qv:
L_33723:
L_33724:
	ret
section code
	section vsc@GroupCursor@$bdtr$qv virtual
@GroupCursor@$bdtr$qv:
; Line 57:	    virtual ~GroupCursor() {} 
	push	ecx
	push	ebx
L_33729:
	mov	ebx,dword [esp+04h+08h]
	mov	eax,ebx
	add	eax,byte 04ch
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bdtr$qv
	pop	ecx
L_33745:
	push	ebx
	call	@Resource@$bdtr$qv
	pop	ecx
L_33730:
	pop	ebx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p6Cursor~@deallocate$qppn0ui virtual
@std@__1@#allocator$p6Cursor~@deallocate$qppn0ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_33751:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_33769:
L_33752:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p6Cursor~~@deallocate$qr#allocator$pn0~ppn0ui virtual
@std@__1@#allocator_traits$#allocator$p6Cursor~~@deallocate$qr#allocator$pn0~ppn0ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_33775:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_33793:
L_33776:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$pp6Cursor~@deallocate$qpppn0ui virtual
@std@__1@#allocator$pp6Cursor~@deallocate$qpppn0ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_33799:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_33817:
L_33800:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@deallocate$qr#allocator$ppn0~pppn0ui virtual
@std@__1@#allocator_traits$#allocator$pp6Cursor~~@deallocate$qr#allocator$ppn0~pppn0ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_33823:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_33841:
L_33824:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_33847:
	mov	eax,dword [esp+04h]
L_33848:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_33855:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_33856:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@first$xqv virtual
@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_33863:
	mov	eax,dword [esp+04h+04h]
L_33881:
L_33864:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@second$qv virtual
@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_33887:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_33905:
L_33888:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__alloc$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_33911:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_33944:
L_33929:
L_33912:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_33951:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_33984:
L_33969:
L_33952:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bdtr$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_33991:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_34046:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_34060:
L_34031:
L_34014:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_33994
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_34123:
L_34108:
L_34093:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@first$xqv
	pop	ecx
L_34171:
L_34156:
L_34141:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_34189:
L_34078:
L_33994:
; Line 358:	} 
L_34230:
L_34217:
L_34204:
L_34246:
L_33992:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@begin$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_34252:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_34253:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@end$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_34260:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_34261:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@clear$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_34268:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_34303:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_34317:
L_34288:
L_34269:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@size$xqv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_34324:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_34325:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@empty$xqv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_34332:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_34333:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@capacity$xqv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_34341:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_34389:
L_34374:
L_34359:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_34342:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@front$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_34397:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_34398:
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@pop_front$qv virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_34405:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_34455:
L_34440:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_34483:
L_34470:
L_34425:
L_34406:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0 virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_34491:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_34494:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_34541:
	mov	dword [ebp-03ch+014h],01h
L_34526:
	mov	dword [ebp-03ch+014h],02h
L_34511:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_34583:
L_34570:
L_34557:
L_34492:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$pp6Cursor~ virtual
@$xt@#__libcpp_trivial_destructor$pp6Cursor~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$pp6Cursor~ virtual
@$xt@#is_trivially_destructible$pp6Cursor~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$pp6Cursor~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0 virtual
@$xc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$pp6Cursor~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_34591:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_34594:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_34592:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0 virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_34601:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_34621:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_34635:
L_34602:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_end$qpppn0#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_34641:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_34645
L_34644:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_34715:
L_34700:
L_34685:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_34733:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_34764:
L_34749:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0
	add	esp,byte 0ch
L_34792:
L_34779:
L_34670:
L_34646:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_34644
L_34645:
; Line 311:	} 
L_34642:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_34800:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_34801:
	ret
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$binc$qv virtual
@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_34808:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 04h
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	sar	ecx,02h
	cmp	ecx,dword 0400h
	jne	short	L_34811
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_34811:
; Line 304:	        return *this; 
; Line 305:	    } 
L_34809:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~ virtual
@$bequ$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_34823:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_34824:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~ virtual
@$bneq$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_34832:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_34833:
	ret
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qpppn0ppn0 virtual
@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qpppn0ppn0:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_34841:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_34842:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_34849:
	mov	eax,dword [esp+04h]
L_34850:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_34857:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_34858:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_34865:
	mov	eax,dword [esp+04h+04h]
L_34883:
L_34866:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_34889:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_34907:
L_34890:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@begin$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_34913:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	eax,dword [eax+08h]
L_34931:
	mov	edx,dword [ebp+020h]
	shr	edx,0ah
	shl	edx,02h
	add	edx,eax
	lea	eax,[esp-030h+040h]
	mov	edi,edx
	mov	ebx,ebp
	add	ebx,byte 08h
	mov	esi,dword [ebx+0ch]
	mov	ebx,dword [ebx+08h]
L_34979:
	cmp	esi,ebx
	jne	short	L_34964
	xor	edx,edx
	jmp	short	L_34965
L_34964:
	mov	ebx,dword [ebp+020h]
	and	ebx,dword 03ffh
	shl	ebx,02h
	mov	edx,dword [edx]
	add	edx,ebx
L_34965:
	mov	dword [esp-030h+040h],edi
	mov	dword [esp-030h+04h+040h],edx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_34962:
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ecx+04h],eax
L_34947:
	mov	eax,dword [esp+04h+040h]
L_34995:
; Line 1062:	} 
L_35009:
L_34914:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@end$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@end$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_35015:
	mov	edx,dword [esp+04h+04ch]
	mov	ecx,dword [esp+08h+04ch]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,ecx
	add	eax,byte 024h
L_35063:
L_35048:
L_35033:
	mov	ebx,dword [ecx+020h]
	mov	edi,dword [eax]
	add	edi,ebx
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,ecx
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_35081:
	mov	eax,edi
	shr	eax,0ah
	shl	eax,02h
	mov	ebp,ebx
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	lea	eax,[esp-03ch+04ch]
	mov	ebx,ebp
	add	ecx,byte 08h
	mov	esi,dword [ecx+0ch]
	mov	ecx,dword [ecx+08h]
L_35129:
	cmp	esi,ecx
	jne	short	L_35114
	xor	ecx,ecx
	jmp	short	L_35115
L_35114:
	mov	ecx,edi
	and	ecx,dword 03ffh
	mov	esi,ecx
	shl	esi,02h
	mov	ecx,dword [ebp]
	add	ecx,esi
L_35115:
	mov	dword [esp-03ch+04ch],ebx
	mov	dword [esp-03ch+04h+04ch],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_35112:
	mov	ecx,dword [eax]
	mov	eax,edx
	mov	dword [eax],ecx
	mov	eax,dword [esp-03ch+04h+04ch]
	mov	dword [edx+04h],eax
L_35097:
	mov	eax,dword [esp+04h+04ch]
L_35145:
; Line 1079:	} 
L_35159:
L_35016:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@size$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_35165:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_35198:
L_35183:
L_35166:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@__alloc$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_35205:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_35238:
L_35223:
L_35206:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bdtr$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_35245:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_35269:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_35285:
	cmp	edi,esi
	je	short	L_35250
L_35248:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_35346:
L_35331:
L_35316:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_35364:
L_35301:
L_35251:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_35249:
	cmp	edi,esi
	jne	short	L_35346
L_35250:
; Line 1109:	} 
L_35405:
L_35392:
L_35379:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@$bdtr$qv
	pop	ecx
L_35421:
L_35246:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@clear$qv virtual
@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_35427:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_35500:
L_35485:
L_35470:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_35518:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_35534:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_35432
L_35430:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_35582:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_35567:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_35614:
L_35599:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	add	esp,byte 0ch
L_35642:
L_35629:
L_35552:
L_35433:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 04h
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	sar	eax,02h
	cmp	eax,dword 0400h
	jne	short	L_35667
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_35648:
; Line 304:	        return *this; 
; Line 305:	    } 
L_35667:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_35431:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~rx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_35430
L_35432:
L_35681:
L_35695:
L_35709:
L_35723:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_35769:
L_35754:
L_35739:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_35787:
	cmp	eax,byte 02h
	jbe	short	L_35439
L_35438:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_35818:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_35834:
L_35803:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$pp6Cursor~@$bctr$qv
	pop	ecx
L_35883:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$pp6Cursor#allocator$ppn0~~@__destruct_at_begin$qpppn0#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$pp6Cursor~@$bdtr$qv
	pop	ecx
L_35897:
L_35868:
L_35851:
L_35440:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_35915:
	cmp	eax,byte 02h
	ja	short	L_35438
L_35439:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_35931:
	cmp	eax,byte 01h
	je	short	L_35450
	cmp	eax,byte 02h
	je	short	L_35451
	jmp	short	L_35453
; Line 1171:	    { 
L_35450:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0200h
; Line 1174:	        break; 
	jmp	short	L_35447
L_35451:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0400h
; Line 1177:	        break; 
L_35453:
L_35447:
; Line 1179:	} 
L_35428:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bdtr$qv:
L_35937:
L_35938:
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_35943:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_35961:
L_35944:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_35967:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_35985:
L_35968:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_35991:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_36009:
L_35992:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_36015:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_36033:
L_36016:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_36039:
	mov	eax,dword [esp+04h]
L_36040:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_36047:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_36048:
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_36055:
	mov	eax,dword [esp+04h+04h]
L_36073:
L_36056:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_36079:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_36097:
L_36080:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_36103:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_36136:
L_36121:
L_36104:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_36143:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_36176:
L_36161:
L_36144:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_36183:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_36238:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_36252:
L_36223:
L_36206:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_36186
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_36315:
L_36300:
L_36285:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv
	pop	ecx
L_36363:
L_36348:
L_36333:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_36381:
L_36270:
L_36186:
; Line 358:	} 
L_36422:
L_36409:
L_36396:
L_36438:
L_36184:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_36444:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_36445:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_36452:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_36453:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_36460:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_36495:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_36509:
L_36480:
L_36461:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_36516:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_36517:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_36524:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_36525:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_36533:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_36581:
L_36566:
L_36551:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_36534:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_36589:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_36590:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_36597:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_36647:
L_36632:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_36675:
L_36662:
L_36617:
L_36598:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_36683:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_36686:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_36733:
	mov	dword [ebp-03ch+014h],01h
L_36718:
	mov	dword [ebp-03ch+014h],02h
L_36703:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_36775:
L_36762:
L_36749:
L_36684:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~ virtual
@$xt@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$p#unique_ptr$12ResourceData#default_delete$n0~~~ virtual
@$xt@#is_trivially_destructible$p#unique_ptr$12ResourceData#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$p#unique_ptr$12ResourceData#default_delete$n0~~~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_36783:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_36786:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_36784:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_36793:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_36813:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_36827:
L_36794:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_36833:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_36837
L_36836:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_36907:
L_36892:
L_36877:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_36925:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_36956:
L_36941:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_36984:
L_36971:
L_36862:
L_36838:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_36836
L_36837:
; Line 311:	} 
L_36834:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_36992:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_36993:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_37000:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 08h
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	sar	ecx,03h
	cmp	ecx,dword 0200h
	jne	short	L_37003
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_37003:
; Line 304:	        return *this; 
; Line 305:	    } 
L_37001:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bequ$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_37015:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_37016:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bneq$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_37024:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_37025:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_37033:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_37034:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_37041:
	mov	eax,dword [esp+04h]
L_37042:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_37049:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_37050:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_37057:
	mov	eax,dword [esp+04h+04h]
L_37075:
L_37058:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_37081:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_37099:
L_37082:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_37105:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	eax,dword [eax+08h]
L_37123:
	mov	edx,dword [ebp+020h]
	shr	edx,09h
	shl	edx,02h
	add	edx,eax
	lea	eax,[esp-030h+040h]
	mov	edi,edx
	mov	ebx,ebp
	add	ebx,byte 08h
	mov	esi,dword [ebx+0ch]
	mov	ebx,dword [ebx+08h]
L_37171:
	cmp	esi,ebx
	jne	short	L_37156
	xor	edx,edx
	jmp	short	L_37157
L_37156:
	mov	ebx,dword [ebp+020h]
	and	ebx,dword 01ffh
	shl	ebx,03h
	mov	edx,dword [edx]
	add	edx,ebx
L_37157:
	mov	dword [esp-030h+040h],edi
	mov	dword [esp-030h+04h+040h],edx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_37154:
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ecx+04h],eax
L_37139:
	mov	eax,dword [esp+04h+040h]
L_37187:
; Line 1062:	} 
L_37201:
L_37106:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_37207:
	mov	edx,dword [esp+04h+04ch]
	mov	ecx,dword [esp+08h+04ch]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,ecx
	add	eax,byte 024h
L_37255:
L_37240:
L_37225:
	mov	ebx,dword [ecx+020h]
	mov	edi,dword [eax]
	add	edi,ebx
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,ecx
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_37273:
	mov	eax,edi
	shr	eax,09h
	shl	eax,02h
	mov	ebp,ebx
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	lea	eax,[esp-03ch+04ch]
	mov	ebx,ebp
	add	ecx,byte 08h
	mov	esi,dword [ecx+0ch]
	mov	ecx,dword [ecx+08h]
L_37321:
	cmp	esi,ecx
	jne	short	L_37306
	xor	ecx,ecx
	jmp	short	L_37307
L_37306:
	mov	ecx,edi
	and	ecx,dword 01ffh
	mov	esi,ecx
	shl	esi,03h
	mov	ecx,dword [ebp]
	add	ecx,esi
L_37307:
	mov	dword [esp-03ch+04ch],ebx
	mov	dword [esp-03ch+04h+04ch],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_37304:
	mov	ecx,dword [eax]
	mov	eax,edx
	mov	dword [eax],ecx
	mov	eax,dword [esp-03ch+04h+04ch]
	mov	dword [edx+04h],eax
L_37289:
	mov	eax,dword [esp+04h+04ch]
L_37337:
; Line 1079:	} 
L_37351:
L_37208:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_37357:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_37390:
L_37375:
L_37358:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_37397:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_37430:
L_37415:
L_37398:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_37437:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_37461:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_37477:
	cmp	edi,esi
	je	short	L_37442
L_37440:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_37538:
L_37523:
L_37508:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_37556:
L_37493:
L_37443:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_37441:
	cmp	edi,esi
	jne	short	L_37538
L_37442:
; Line 1109:	} 
L_37597:
L_37584:
L_37571:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_37613:
L_37438:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_37619:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_37692:
L_37677:
L_37662:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_37710:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_37726:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_37624
L_37622:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_37774:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_37759:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_37806:
L_37791:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_37834:
L_37821:
L_37744:
L_37625:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 08h
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	sar	eax,03h
	cmp	eax,dword 0200h
	jne	short	L_37859
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_37840:
; Line 304:	        return *this; 
; Line 305:	    } 
L_37859:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_37623:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_37622
L_37624:
L_37873:
L_37887:
L_37901:
L_37915:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_37961:
L_37946:
L_37931:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_37979:
	cmp	eax,byte 02h
	jbe	short	L_37631
L_37630:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_38010:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_38026:
L_37995:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv
	pop	ecx
L_38075:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv
	pop	ecx
L_38089:
L_38060:
L_38043:
L_37632:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_38107:
	cmp	eax,byte 02h
	ja	short	L_37630
L_37631:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_38123:
	cmp	eax,byte 01h
	je	short	L_37642
	cmp	eax,byte 02h
	je	short	L_37643
	jmp	short	L_37645
; Line 1171:	    { 
L_37642:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0100h
; Line 1174:	        break; 
	jmp	short	L_37639
L_37643:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0200h
; Line 1177:	        break; 
L_37645:
L_37639:
; Line 1179:	} 
L_37620:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_38129:
L_38130:
	ret
section code
	section vsc@std@__1@#default_delete$7Control~@$bcall$xqpn0 virtual
@std@__1@#default_delete$7Control~@$bcall$xqpn0:
; Line 2427:	     void operator() (_Tp* __ptr) const noexcept 
; Line 2428:	        { 
	push	ebx
L_38135:
	mov	ebx,dword [esp+08h+04h]
; Line 2431:	            delete __ptr; 
	and	ebx,ebx
	je	short	L_38140
	mov	eax,ebx
	push	eax
	call	@Control@$bdtr$qv
	pop	ecx
	push	ebx
	call	dword [@$bdel$qpv]
	pop	ecx
L_38140:
; Line 2432:	        } 
L_38136:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_38144:
	mov	eax,dword [esp+04h]
L_38145:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_38152:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_38153:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@first$qv virtual
@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_38160:
	mov	eax,dword [esp+04h+04h]
L_38178:
L_38161:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@second$qv virtual
@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_38184:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_38202:
L_38185:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$7Control#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#unique_ptr$7Control#default_delete$n0~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffc4h
L_38208:
	mov	ecx,dword [esp+04h+03ch]
	xor	edx,edx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,ecx
L_38261:
L_38246:
	mov	eax,dword [eax]
; Line 2628:	        __ptr_.first() = __p; 
L_38293:
L_38278:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	and	eax,eax
	je	short	L_38214
; Line 2630:	            __ptr_.second()(__tmp); 
L_38340:
L_38325:
; Line 2431:	            delete __ptr; 
	mov	dword [esp-03ch+03ch],eax
	and	eax,eax
	je	short	L_38344
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	@Control@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_38344:
; Line 2432:	        } 
L_38310:
L_38214:
; Line 2631:	    } 
L_38231:
L_38384:
L_38371:
L_38358:
L_38209:
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#unique_ptr$7Control#default_delete$n0~~@reset$qpn0 virtual
@std@__1@#unique_ptr$7Control#default_delete$n0~~@reset$qpn0:
; Line 2626:	    { 
	add	esp,byte 0ffffffd8h
L_38392:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	edx,eax
L_38430:
L_38415:
	mov	edx,dword [edx]
	mov	dword [esp-04h+028h],edx
; Line 2628:	        __ptr_.first() = __p; 
L_38462:
L_38447:
	mov	dword [eax],ecx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+028h],byte 00h
	je	short	L_38395
; Line 2630:	            __ptr_.second()(__tmp); 
L_38509:
L_38494:
	mov	eax,dword [esp-04h+028h]
; Line 2431:	            delete __ptr; 
	mov	dword [esp-028h+028h],eax
	and	eax,eax
	je	short	L_38513
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	@Control@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_38513:
; Line 2432:	        } 
L_38479:
L_38395:
; Line 2631:	    } 
L_38393:
	add	esp,byte 028h
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_38518:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_38536:
L_38519:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_38542:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_38560:
L_38543:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_38566:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_38584:
L_38567:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_38590:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_38608:
L_38591:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_38614:
	mov	eax,dword [esp+04h]
L_38615:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_38622:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_38623:
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_38630:
	mov	eax,dword [esp+04h+04h]
L_38648:
L_38631:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_38654:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_38672:
L_38655:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_38678:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_38711:
L_38696:
L_38679:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_38718:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_38751:
L_38736:
L_38719:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_38758:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_38813:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_38827:
L_38798:
L_38781:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_38761
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_38890:
L_38875:
L_38860:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv
	pop	ecx
L_38938:
L_38923:
L_38908:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_38956:
L_38845:
L_38761:
; Line 358:	} 
L_38997:
L_38984:
L_38971:
L_39013:
L_38759:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_39019:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_39020:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_39027:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_39028:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_39035:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_39070:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_39084:
L_39055:
L_39036:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_39091:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_39092:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_39099:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_39100:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_39108:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_39156:
L_39141:
L_39126:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_39109:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_39164:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_39165:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_39172:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_39222:
L_39207:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_39250:
L_39237:
L_39192:
L_39173:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_39258:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_39261:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_39308:
	mov	dword [ebp-03ch+014h],01h
L_39293:
	mov	dword [ebp-03ch+014h],02h
L_39278:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_39350:
L_39337:
L_39324:
L_39259:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~ virtual
@$xt@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$p#unique_ptr$7Control#default_delete$n0~~~ virtual
@$xt@#is_trivially_destructible$p#unique_ptr$7Control#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$p#unique_ptr$7Control#default_delete$n0~~~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_39358:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_39361:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_39359:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_39368:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_39388:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_39402:
L_39369:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_39408:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_39412
L_39411:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_39482:
L_39467:
L_39452:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_39500:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_39531:
L_39516:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_39559:
L_39546:
L_39437:
L_39413:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_39411
L_39412:
; Line 311:	} 
L_39409:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_39567:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_39568:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_39575:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 08h
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	sar	ecx,03h
	cmp	ecx,dword 0200h
	jne	short	L_39578
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_39578:
; Line 304:	        return *this; 
; Line 305:	    } 
L_39576:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bequ$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_39590:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_39591:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bneq$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_39599:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_39600:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_39608:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_39609:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_39616:
	mov	eax,dword [esp+04h]
L_39617:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_39624:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_39625:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_39632:
	mov	eax,dword [esp+04h+04h]
L_39650:
L_39633:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_39656:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_39674:
L_39657:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_39680:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	eax,dword [eax+08h]
L_39698:
	mov	edx,dword [ebp+020h]
	shr	edx,09h
	shl	edx,02h
	add	edx,eax
	lea	eax,[esp-030h+040h]
	mov	edi,edx
	mov	ebx,ebp
	add	ebx,byte 08h
	mov	esi,dword [ebx+0ch]
	mov	ebx,dword [ebx+08h]
L_39746:
	cmp	esi,ebx
	jne	short	L_39731
	xor	edx,edx
	jmp	short	L_39732
L_39731:
	mov	ebx,dword [ebp+020h]
	and	ebx,dword 01ffh
	shl	ebx,03h
	mov	edx,dword [edx]
	add	edx,ebx
L_39732:
	mov	dword [esp-030h+040h],edi
	mov	dword [esp-030h+04h+040h],edx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_39729:
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ecx+04h],eax
L_39714:
	mov	eax,dword [esp+04h+040h]
L_39762:
; Line 1062:	} 
L_39776:
L_39681:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_39782:
	mov	edx,dword [esp+04h+04ch]
	mov	ecx,dword [esp+08h+04ch]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,ecx
	add	eax,byte 024h
L_39830:
L_39815:
L_39800:
	mov	ebx,dword [ecx+020h]
	mov	edi,dword [eax]
	add	edi,ebx
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,ecx
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_39848:
	mov	eax,edi
	shr	eax,09h
	shl	eax,02h
	mov	ebp,ebx
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	lea	eax,[esp-03ch+04ch]
	mov	ebx,ebp
	add	ecx,byte 08h
	mov	esi,dword [ecx+0ch]
	mov	ecx,dword [ecx+08h]
L_39896:
	cmp	esi,ecx
	jne	short	L_39881
	xor	ecx,ecx
	jmp	short	L_39882
L_39881:
	mov	ecx,edi
	and	ecx,dword 01ffh
	mov	esi,ecx
	shl	esi,03h
	mov	ecx,dword [ebp]
	add	ecx,esi
L_39882:
	mov	dword [esp-03ch+04ch],ebx
	mov	dword [esp-03ch+04h+04ch],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_39879:
	mov	ecx,dword [eax]
	mov	eax,edx
	mov	dword [eax],ecx
	mov	eax,dword [esp-03ch+04h+04ch]
	mov	dword [edx+04h],eax
L_39864:
	mov	eax,dword [esp+04h+04ch]
L_39912:
; Line 1079:	} 
L_39926:
L_39783:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_39932:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_39965:
L_39950:
L_39933:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_39972:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_40005:
L_39990:
L_39973:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_40012:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_40036:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_40052:
	cmp	edi,esi
	je	short	L_40017
L_40015:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_40113:
L_40098:
L_40083:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_40131:
L_40068:
L_40018:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_40016:
	cmp	edi,esi
	jne	short	L_40113
L_40017:
; Line 1109:	} 
L_40172:
L_40159:
L_40146:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_40188:
L_40013:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_40194:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_40267:
L_40252:
L_40237:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_40285:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_40301:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_40199
L_40197:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_40349:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_40334:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_40381:
L_40366:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_40409:
L_40396:
L_40319:
L_40200:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 08h
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	sar	eax,03h
	cmp	eax,dword 0200h
	jne	short	L_40434
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_40415:
; Line 304:	        return *this; 
; Line 305:	    } 
L_40434:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_40198:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_40197
L_40199:
L_40448:
L_40462:
L_40476:
L_40490:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_40536:
L_40521:
L_40506:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_40554:
	cmp	eax,byte 02h
	jbe	short	L_40206
L_40205:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_40585:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_40601:
L_40570:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv
	pop	ecx
L_40650:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv
	pop	ecx
L_40664:
L_40635:
L_40618:
L_40207:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_40682:
	cmp	eax,byte 02h
	ja	short	L_40205
L_40206:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_40698:
	cmp	eax,byte 01h
	je	short	L_40217
	cmp	eax,byte 02h
	je	short	L_40218
	jmp	short	L_40220
; Line 1171:	    { 
L_40217:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0100h
; Line 1174:	        break; 
	jmp	short	L_40214
L_40218:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0200h
; Line 1177:	        break; 
L_40220:
L_40214:
; Line 1179:	} 
L_40195:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_40704:
L_40705:
	ret
section code
	section vsc@FileHeader@$bdtr$qv virtual
@FileHeader@$bdtr$qv:
; Line 37:	    virtual ~FileHeader() {} 
L_40710:
	mov	eax,dword [esp+04h]
	push	eax
	call	@Resource@$bdtr$qv
	pop	ecx
L_40711:
	ret
section code
	section vsc@FileHeader@ReadRC$qr6RCFile virtual
@FileHeader@ReadRC$qr6RCFile:
; Line 39:	    virtual void ReadRC(RCFile& rcFile) {}   
L_40718:
L_40719:
	ret
section code
	section vsc@std@__1@#default_delete$8MenuItem~@$bcall$xqpn0 virtual
@std@__1@#default_delete$8MenuItem~@$bcall$xqpn0:
; Line 2427:	     void operator() (_Tp* __ptr) const noexcept 
; Line 2428:	        { 
	push	ebx
L_40726:
	mov	ebx,dword [esp+08h+04h]
; Line 2431:	            delete __ptr; 
	and	ebx,ebx
	je	short	L_40731
	mov	eax,ebx
	push	eax
	call	@MenuItem@$bdtr$qv
	pop	ecx
	push	ebx
	call	dword [@$bdel$qpv]
	pop	ecx
L_40731:
; Line 2432:	        } 
L_40727:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_40735:
	mov	eax,dword [esp+04h]
L_40736:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_40743:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_40744:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@first$qv virtual
@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_40751:
	mov	eax,dword [esp+04h+04h]
L_40769:
L_40752:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@second$qv virtual
@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_40775:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_40793:
L_40776:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$8MenuItem#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#unique_ptr$8MenuItem#default_delete$n0~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffc4h
L_40799:
	mov	ecx,dword [esp+04h+03ch]
	xor	edx,edx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,ecx
L_40852:
L_40837:
	mov	eax,dword [eax]
; Line 2628:	        __ptr_.first() = __p; 
L_40884:
L_40869:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	and	eax,eax
	je	short	L_40805
; Line 2630:	            __ptr_.second()(__tmp); 
L_40931:
L_40916:
; Line 2431:	            delete __ptr; 
	mov	dword [esp-03ch+03ch],eax
	and	eax,eax
	je	short	L_40935
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	@MenuItem@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_40935:
; Line 2432:	        } 
L_40901:
L_40805:
; Line 2631:	    } 
L_40822:
L_40975:
L_40962:
L_40949:
L_40800:
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#unique_ptr$8MenuItem#default_delete$n0~~@reset$qpn0 virtual
@std@__1@#unique_ptr$8MenuItem#default_delete$n0~~@reset$qpn0:
; Line 2626:	    { 
	add	esp,byte 0ffffffd8h
L_40983:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	edx,eax
L_41021:
L_41006:
	mov	edx,dword [edx]
	mov	dword [esp-04h+028h],edx
; Line 2628:	        __ptr_.first() = __p; 
L_41053:
L_41038:
	mov	dword [eax],ecx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+028h],byte 00h
	je	short	L_40986
; Line 2630:	            __ptr_.second()(__tmp); 
L_41100:
L_41085:
	mov	eax,dword [esp-04h+028h]
; Line 2431:	            delete __ptr; 
	mov	dword [esp-028h+028h],eax
	and	eax,eax
	je	short	L_41104
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	@MenuItem@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_41104:
; Line 2432:	        } 
L_41070:
L_40986:
; Line 2631:	    } 
L_40984:
	add	esp,byte 028h
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_41109:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_41127:
L_41110:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_41133:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_41151:
L_41134:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_41157:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_41175:
L_41158:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_41181:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_41199:
L_41182:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_41205:
	mov	eax,dword [esp+04h]
L_41206:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_41213:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_41214:
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_41221:
	mov	eax,dword [esp+04h+04h]
L_41239:
L_41222:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_41245:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_41263:
L_41246:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_41269:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_41302:
L_41287:
L_41270:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_41309:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_41342:
L_41327:
L_41310:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_41349:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_41404:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_41418:
L_41389:
L_41372:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_41352
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_41481:
L_41466:
L_41451:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv
	pop	ecx
L_41529:
L_41514:
L_41499:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_41547:
L_41436:
L_41352:
; Line 358:	} 
L_41588:
L_41575:
L_41562:
L_41604:
L_41350:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_41610:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_41611:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_41618:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_41619:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_41626:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_41661:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_41675:
L_41646:
L_41627:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_41682:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_41683:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_41690:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_41691:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_41699:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_41747:
L_41732:
L_41717:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_41700:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_41755:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_41756:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_41763:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_41813:
L_41798:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_41841:
L_41828:
L_41783:
L_41764:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_41849:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_41852:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_41899:
	mov	dword [ebp-03ch+014h],01h
L_41884:
	mov	dword [ebp-03ch+014h],02h
L_41869:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_41941:
L_41928:
L_41915:
L_41850:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~ virtual
@$xt@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$p#unique_ptr$8MenuItem#default_delete$n0~~~ virtual
@$xt@#is_trivially_destructible$p#unique_ptr$8MenuItem#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$p#unique_ptr$8MenuItem#default_delete$n0~~~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_41949:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_41952:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_41950:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_41959:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_41979:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_41993:
L_41960:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_41999:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_42003
L_42002:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_42073:
L_42058:
L_42043:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_42091:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_42122:
L_42107:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_42150:
L_42137:
L_42028:
L_42004:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_42002
L_42003:
; Line 311:	} 
L_42000:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_42158:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_42159:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_42166:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 08h
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	sar	ecx,03h
	cmp	ecx,dword 0200h
	jne	short	L_42169
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_42169:
; Line 304:	        return *this; 
; Line 305:	    } 
L_42167:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bequ$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_42181:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_42182:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bneq$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_42190:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_42191:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_42199:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_42200:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_42207:
	mov	eax,dword [esp+04h]
L_42208:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_42215:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_42216:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_42223:
	mov	eax,dword [esp+04h+04h]
L_42241:
L_42224:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_42247:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_42265:
L_42248:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_42271:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	eax,dword [eax+08h]
L_42289:
	mov	edx,dword [ebp+020h]
	shr	edx,09h
	shl	edx,02h
	add	edx,eax
	lea	eax,[esp-030h+040h]
	mov	edi,edx
	mov	ebx,ebp
	add	ebx,byte 08h
	mov	esi,dword [ebx+0ch]
	mov	ebx,dword [ebx+08h]
L_42337:
	cmp	esi,ebx
	jne	short	L_42322
	xor	edx,edx
	jmp	short	L_42323
L_42322:
	mov	ebx,dword [ebp+020h]
	and	ebx,dword 01ffh
	shl	ebx,03h
	mov	edx,dword [edx]
	add	edx,ebx
L_42323:
	mov	dword [esp-030h+040h],edi
	mov	dword [esp-030h+04h+040h],edx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_42320:
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ecx+04h],eax
L_42305:
	mov	eax,dword [esp+04h+040h]
L_42353:
; Line 1062:	} 
L_42367:
L_42272:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_42373:
	mov	edx,dword [esp+04h+04ch]
	mov	ecx,dword [esp+08h+04ch]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,ecx
	add	eax,byte 024h
L_42421:
L_42406:
L_42391:
	mov	ebx,dword [ecx+020h]
	mov	edi,dword [eax]
	add	edi,ebx
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,ecx
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_42439:
	mov	eax,edi
	shr	eax,09h
	shl	eax,02h
	mov	ebp,ebx
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	lea	eax,[esp-03ch+04ch]
	mov	ebx,ebp
	add	ecx,byte 08h
	mov	esi,dword [ecx+0ch]
	mov	ecx,dword [ecx+08h]
L_42487:
	cmp	esi,ecx
	jne	short	L_42472
	xor	ecx,ecx
	jmp	short	L_42473
L_42472:
	mov	ecx,edi
	and	ecx,dword 01ffh
	mov	esi,ecx
	shl	esi,03h
	mov	ecx,dword [ebp]
	add	ecx,esi
L_42473:
	mov	dword [esp-03ch+04ch],ebx
	mov	dword [esp-03ch+04h+04ch],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_42470:
	mov	ecx,dword [eax]
	mov	eax,edx
	mov	dword [eax],ecx
	mov	eax,dword [esp-03ch+04h+04ch]
	mov	dword [edx+04h],eax
L_42455:
	mov	eax,dword [esp+04h+04ch]
L_42503:
; Line 1079:	} 
L_42517:
L_42374:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_42523:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_42556:
L_42541:
L_42524:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_42563:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_42596:
L_42581:
L_42564:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_42603:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_42627:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_42643:
	cmp	edi,esi
	je	short	L_42608
L_42606:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_42704:
L_42689:
L_42674:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_42722:
L_42659:
L_42609:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_42607:
	cmp	edi,esi
	jne	short	L_42704
L_42608:
; Line 1109:	} 
L_42763:
L_42750:
L_42737:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_42779:
L_42604:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_42785:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_42858:
L_42843:
L_42828:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_42876:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_42892:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_42790
L_42788:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_42940:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_42925:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_42972:
L_42957:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_43000:
L_42987:
L_42910:
L_42791:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 08h
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	sar	eax,03h
	cmp	eax,dword 0200h
	jne	short	L_43025
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_43006:
; Line 304:	        return *this; 
; Line 305:	    } 
L_43025:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_42789:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_42788
L_42790:
L_43039:
L_43053:
L_43067:
L_43081:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_43127:
L_43112:
L_43097:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_43145:
	cmp	eax,byte 02h
	jbe	short	L_42797
L_42796:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_43176:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_43192:
L_43161:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv
	pop	ecx
L_43241:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv
	pop	ecx
L_43255:
L_43226:
L_43209:
L_42798:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_43273:
	cmp	eax,byte 02h
	ja	short	L_42796
L_42797:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_43289:
	cmp	eax,byte 01h
	je	short	L_42808
	cmp	eax,byte 02h
	je	short	L_42809
	jmp	short	L_42811
; Line 1171:	    { 
L_42808:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0100h
; Line 1174:	        break; 
	jmp	short	L_42805
L_42809:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0200h
; Line 1177:	        break; 
L_42811:
L_42805:
; Line 1179:	} 
L_42786:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_43295:
L_43296:
	ret
section code
	section vsc@InternalVerInfo@$bdtr$qv virtual
@InternalVerInfo@$bdtr$qv:
; Line 48:	    virtual ~InternalVerInfo() {} 
L_43301:
L_43302:
	ret
section code
	section vsc@std@__1@#default_delete$15InternalVerInfo~@$bcall$xqpn0 virtual
@std@__1@#default_delete$15InternalVerInfo~@$bcall$xqpn0:
; Line 2427:	     void operator() (_Tp* __ptr) const noexcept 
; Line 2428:	        { 
	push	ebx
L_43309:
	mov	ebx,dword [esp+08h+04h]
; Line 2431:	            delete __ptr; 
	and	ebx,ebx
	je	short	L_43314
	mov	eax,ebx
	push	eax
	call	@InternalVerInfo@$bdtr$qv
	pop	ecx
	push	ebx
	call	dword [@$bdel$qpv]
	pop	ecx
L_43314:
; Line 2432:	        } 
L_43310:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_43318:
	mov	eax,dword [esp+04h]
L_43319:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_43326:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_43327:
	ret
section code
	section vsc@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@first$qv virtual
@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_43334:
	mov	eax,dword [esp+04h+04h]
L_43352:
L_43335:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@second$qv virtual
@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_43358:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_43376:
L_43359:
	pop	ecx
	ret
section code
	section vsc@std@__1@#unique_ptr$15InternalVerInfo#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#unique_ptr$15InternalVerInfo#default_delete$n0~~@$bdtr$qv:
; Line 2598:	     ~unique_ptr() {reset();} 
	add	esp,byte 0ffffffc4h
L_43382:
	mov	ecx,dword [esp+04h+03ch]
	xor	edx,edx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,ecx
L_43435:
L_43420:
	mov	eax,dword [eax]
; Line 2628:	        __ptr_.first() = __p; 
L_43467:
L_43452:
	mov	dword [ecx],edx
; Line 2629:	        if (__tmp) 
	and	eax,eax
	je	short	L_43388
; Line 2630:	            __ptr_.second()(__tmp); 
L_43514:
L_43499:
; Line 2431:	            delete __ptr; 
	mov	dword [esp-03ch+03ch],eax
	and	eax,eax
	je	short	L_43518
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	@InternalVerInfo@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-03ch+03ch]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_43518:
; Line 2432:	        } 
L_43484:
L_43388:
; Line 2631:	    } 
L_43405:
L_43558:
L_43545:
L_43532:
L_43383:
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#unique_ptr$15InternalVerInfo#default_delete$n0~~@reset$qpn0 virtual
@std@__1@#unique_ptr$15InternalVerInfo#default_delete$n0~~@reset$qpn0:
; Line 2626:	    { 
	add	esp,byte 0ffffffd8h
L_43566:
	mov	ecx,dword [esp+08h+028h]
	mov	eax,dword [esp+04h+028h]
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	edx,eax
L_43604:
L_43589:
	mov	edx,dword [edx]
	mov	dword [esp-04h+028h],edx
; Line 2628:	        __ptr_.first() = __p; 
L_43636:
L_43621:
	mov	dword [eax],ecx
; Line 2629:	        if (__tmp) 
	cmp	dword [esp-04h+028h],byte 00h
	je	short	L_43569
; Line 2630:	            __ptr_.second()(__tmp); 
L_43683:
L_43668:
	mov	eax,dword [esp-04h+028h]
; Line 2431:	            delete __ptr; 
	mov	dword [esp-028h+028h],eax
	and	eax,eax
	je	short	L_43687
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	@InternalVerInfo@$bdtr$qv
	pop	ecx
	mov	eax,dword [esp-028h+028h]
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
L_43687:
; Line 2432:	        } 
L_43653:
L_43569:
; Line 2631:	    } 
L_43567:
	add	esp,byte 028h
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@deallocate$qp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_43692:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_43710:
L_43693:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@deallocate$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_43716:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_43734:
L_43717:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@deallocate$qpp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1635:	     void deallocate(pointer __p, size_type) noexcept 
; Line 1636:	        {std::__1::__deallocate((void*)__p);} 
	push	ecx
L_43740:
	mov	eax,dword [esp+08h+04h]
; Line 162:	  ::operator delete(__ptr); 
	push	eax
	call	dword [@$bdel$qpv]
	pop	ecx
; Line 164:	
; Line 166:	} 
L_43758:
L_43741:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@deallocate$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ui:
; Line 1446:	    static void deallocate(allocator_type& __a, pointer __p, size_type __n) noexcept 
; Line 1447:	        {__a.deallocate(__p, __n);} 
	push	ecx
	push	ecx
	push	ecx
L_43764:
	mov	eax,dword [esp+08h+0ch]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_43782:
L_43765:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv:
; Line 2015:	     _T1_const_reference first() const noexcept {return __first_;} 
L_43788:
	mov	eax,dword [esp+04h]
L_43789:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_43796:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_43797:
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@first$xqv:
; Line 2371:	     _T1_const_reference first() const noexcept {return base::first();} 
	push	ecx
L_43804:
	mov	eax,dword [esp+04h+04h]
L_43822:
L_43805:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_43828:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_43846:
L_43829:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 54:	     __alloc_rr&           __alloc() noexcept         {return __end_cap_.second();} 
	push	ecx
	push	ecx
L_43852:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
	add	eax,byte 04h
L_43885:
L_43870:
L_43853:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__end_cap$xqv:
; Line 57:	     const pointer&        __end_cap() const noexcept {return __end_cap_.first();} 
	push	ecx
	push	ecx
L_43892:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 010h
L_43925:
L_43910:
L_43893:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,0ffffff6ch
	push	ebx
	push	esi
	push	edi
L_43932:
	mov	esi,dword [esp+04h+0a0h]
; Line 355:	    clear(); 
	mov	eax,esi
	mov	ebx,eax
	mov	edi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_43987:
	lea	eax,[esp-091h+0a4h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	edi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_44001:
L_43972:
L_43955:
; Line 356:	    if (__first_) 
	cmp	dword [esi+04h],byte 00h
	je	short	L_43935
; Line 357:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 
L_44064:
L_44049:
L_44034:
	mov	ebx,dword [esi+04h]
	mov	eax,esi
	add	eax,byte 010h
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@first$xqv
	pop	ecx
L_44112:
L_44097:
L_44082:
	push	ebx
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_44130:
L_44019:
L_43935:
; Line 358:	} 
L_44171:
L_44158:
L_44145:
L_44187:
L_43933:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,094h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
; Line 76:	           iterator begin() noexcept       {return __begin_;} 
L_44193:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_44194:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@end$qv:
; Line 78:	           iterator end() noexcept         {return __end_;} 
L_44201:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+0ch]
L_44202:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
; Line 82:	    void clear() noexcept 
; Line 83:	        {__destruct_at_end(__begin_);} 
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_44209:
	mov	eax,dword [esp+04h+058h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_44244:
	lea	eax,[esp-04dh+05ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_44258:
L_44229:
L_44210:
	pop	esi
	pop	ebx
	add	esp,byte 050h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@size$xqv:
; Line 84:	     size_type size() const {return static_cast<size_type>(__end_ - __begin_);} 
L_44265:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_44266:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@empty$xqv:
; Line 85:	     bool empty()     const {return __end_ == __begin_;} 
L_44273:
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+0ch]
	mov	eax,dword [eax+08h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_44274:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@capacity$xqv:
; Line 86:	     size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 
	push	ecx
	push	ecx
	push	ecx
L_44282:
	mov	ecx,dword [esp+04h+0ch]
	mov	eax,ecx
	add	eax,byte 010h
L_44330:
L_44315:
L_44300:
	mov	ecx,dword [ecx+04h]
	mov	eax,dword [eax]
	sub	eax,ecx
	sar	eax,02h
L_44283:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@front$qv:
; Line 90:	           reference front()       {return *__begin_;} 
L_44338:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+08h]
L_44339:
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@pop_front$qv:
; Line 108:	     void pop_front() {__destruct_at_begin(__begin_+1);} 
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
	push	edi
L_44346:
	mov	eax,dword [esp+04h+064h]
	mov	ebx,eax
	mov	esi,dword [eax+08h]
	add	esi,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-055h+068h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qv
	pop	ecx
L_44396:
L_44381:
	lea	eax,[esp-055h+068h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-055h+064h]
	push	eax
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv
	pop	ecx
L_44424:
L_44411:
L_44366:
L_44347:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 058h
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 129:	     void __destruct_at_begin(pointer __new_begin) 
; Line 130:	        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa8h
	push	ebx
	push	esi
L_44432:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_44435:
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_44482:
	mov	dword [ebp-03ch+014h],01h
L_44467:
	mov	dword [ebp-03ch+014h],02h
L_44452:
	mov	dword [ebp-03ch+014h],03h
	lea	eax,[ebp-055h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],04h
	push	esi
	push	ebx
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],05h
L_44524:
L_44511:
L_44498:
L_44433:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~ virtual
@$xt@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	06ch
	db	069h
	db	062h
	db	063h
	db	070h
	db	070h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	06fh
	db	072h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$1&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xt@#is_trivially_destructible$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~ virtual
@$xt@#is_trivially_destructible$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	069h
	db	073h
	db	05fh
	db	074h
	db	072h
	db	069h
	db	076h
	db	069h
	db	061h
	db	06ch
	db	06ch
	db	079h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	075h
	db	063h
	db	074h
	db	069h
	db	062h
	db	06ch
	db	065h
	db	00h
	dd	0800h
	dd	@$xt@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#is_trivially_destructible$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~+0
	dd	0ffffffabh
	dd	03h
	dd	05h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
L_44532:
	mov	ebx,dword [ebp+0ch]
	mov	esi,dword [ebp+08h]
	push	dword @$xc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_44535:
; Line 301:	    __begin_ = __new_begin; 
	mov	dword [esi+08h],ebx
; Line 302:	} 
L_44533:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~ virtual
@$xc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 135:	    void __destruct_at_end(pointer __new_last) noexcept 
; Line 136:	        {__destruct_at_end(__new_last, false_type());} 
	push	ecx
	push	ecx
	push	ecx
	push	ebx
	push	esi
L_44542:
	mov	esi,dword [esp+08h+014h]
	mov	ebx,dword [esp+04h+014h]
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_44562:
	lea	eax,[esp-09h+018h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	push	esi
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~
	add	esp,byte 0ch
L_44576:
L_44543:
	pop	esi
	pop	ebx
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~ virtual
@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_end$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$0&~:
	add	esp,0ffffff5ch
	push	ebx
	push	esi
L_44582:
	mov	ebx,dword [esp+08h+0ach]
	mov	esi,dword [esp+04h+0ach]
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	je	short	L_44586
L_44585:
; Line 310:	        __alloc_traits::destroy(__alloc(), __to_raw_pointer(--__end_)); 
	mov	eax,esi
	add	eax,byte 010h
	add	eax,byte 04h
L_44656:
L_44641:
L_44626:
	sub	dword [esi+0ch],byte 04h
	mov	ecx,dword [esi+0ch]
	mov	ecx,dword [esi+0ch]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_44674:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_44705:
L_44690:
	lea	eax,[esp-0a1h+0b8h]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_44733:
L_44720:
L_44611:
L_44587:
; Line 309:	    while (__new_last != __end_) 
	mov	eax,ebx
	cmp	dword [esi+0ch],eax
	jne	short	L_44585
L_44586:
; Line 311:	} 
L_44583:
	pop	esi
	pop	ebx
	add	esp,0a4h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bmul$xqv:
; Line 294:	     reference operator*() const {return *__ptr_;} 
L_44741:
	mov	eax,dword [esp+04h]
	mov	eax,dword [eax+04h]
L_44742:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$binc$qv:
; Line 297:	     __deque_iterator& operator++() 
; Line 298:	    { 
L_44749:
	mov	eax,dword [esp+04h]
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [eax+04h],byte 08h
	mov	ecx,dword [eax+04h]
	mov	ecx,dword [eax]
	mov	edx,dword [ecx]
	mov	ecx,dword [eax+04h]
	sub	ecx,edx
	sar	ecx,03h
	cmp	ecx,dword 0200h
	jne	short	L_44752
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [eax],byte 04h
	mov	ecx,dword [eax]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	ecx,dword [eax]
	mov	ecx,dword [ecx]
	mov	dword [eax+04h],ecx
L_44752:
; Line 304:	        return *this; 
; Line 305:	    } 
L_44750:
	ret
section code
	section vsc@$bequ$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bequ$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 388:	     friend 
; Line 389:	        bool operator==(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 390:	        {return __x.__ptr_ == __y.__ptr_;} 
L_44764:
	mov	edx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	mov	ecx,dword [eax+04h]
	mov	eax,dword [edx+04h]
	cmp	ecx,eax
	sete	al
	and	eax,byte 01h
	setne	al
L_44765:
	ret
section code
	section vsc@$bneq$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@$bneq$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
; Line 392:	     friend 
; Line 393:	        bool operator!=(const __deque_iterator& __x, const __deque_iterator& __y) 
; Line 394:	        {return !(__x == __y);} 
L_44773:
	mov	ecx,dword [esp+08h]
	mov	eax,dword [esp+04h]
	push	ecx
	push	eax
	call	@$bequ$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	sete	al
	and	eax,byte 01h
	setne	al
L_44774:
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qpp#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~:
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
	push	ebx
L_44782:
	mov	ecx,dword [esp+0ch+04h]
	mov	ebx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	edx,eax
	mov	dword [edx],ebx
	mov	dword [eax+04h],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_44783:
	pop	ebx
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@first$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@first$qv:
; Line 2014:	     _T1_reference       first() noexcept       {return __first_;} 
L_44790:
	mov	eax,dword [esp+04h]
L_44791:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@second$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@second$qv:
; Line 2017:	     _T2_reference       second() noexcept       {return __second_;} 
L_44798:
	mov	eax,dword [esp+04h]
	add	eax,byte 04h
L_44799:
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@first$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@first$qv:
; Line 2370:	     _T1_reference       first() noexcept       {return base::first();} 
	push	ecx
L_44806:
	mov	eax,dword [esp+04h+04h]
L_44824:
L_44807:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@second$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@second$qv:
; Line 2373:	     _T2_reference       second() noexcept       {return base::second();} 
	push	ecx
L_44830:
	mov	eax,dword [esp+04h+04h]
	add	eax,byte 04h
L_44848:
L_44831:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv:
	add	esp,byte 0ffffffd0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_44854:
	mov	ecx,dword [esp+04h+040h]
	mov	ebp,dword [esp+08h+040h]
; Line 1060:	    __map_pointer __mp = __map_.begin() + __start_ / __block_size; 
	mov	eax,ebp
	add	eax,byte 08h
	mov	eax,dword [eax+08h]
L_44872:
	mov	edx,dword [ebp+020h]
	shr	edx,09h
	shl	edx,02h
	add	edx,eax
	lea	eax,[esp-030h+040h]
	mov	edi,edx
	mov	ebx,ebp
	add	ebx,byte 08h
	mov	esi,dword [ebx+0ch]
	mov	ebx,dword [ebx+08h]
L_44920:
	cmp	esi,ebx
	jne	short	L_44905
	xor	edx,edx
	jmp	short	L_44906
L_44905:
	mov	ebx,dword [ebp+020h]
	and	ebx,dword 01ffh
	shl	ebx,03h
	mov	edx,dword [edx]
	add	edx,ebx
L_44906:
	mov	dword [esp-030h+040h],edi
	mov	dword [esp-030h+04h+040h],edx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_44903:
	mov	edx,dword [eax]
	mov	eax,ecx
	mov	dword [eax],edx
	mov	eax,dword [esp-030h+04h+040h]
	mov	dword [ecx+04h],eax
L_44888:
	mov	eax,dword [esp+04h+040h]
L_44936:
; Line 1062:	} 
L_44950:
L_44855:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 030h
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_44956:
	mov	edx,dword [esp+04h+04ch]
	mov	ecx,dword [esp+08h+04ch]
; Line 1076:	    size_type __p = size() + __start_; 
	mov	eax,ecx
	add	eax,byte 024h
L_45004:
L_44989:
L_44974:
	mov	ebx,dword [ecx+020h]
	mov	edi,dword [eax]
	add	edi,ebx
; Line 1077:	    __map_pointer __mp = __map_.begin() + __p / __block_size; 
	mov	eax,ecx
	add	eax,byte 08h
	mov	ebx,dword [eax+08h]
L_45022:
	mov	eax,edi
	shr	eax,09h
	shl	eax,02h
	mov	ebp,ebx
	add	ebp,eax
; Line 1078:	    return iterator(__mp, __map_.empty() ? 0 : *__mp + __p % __block_size); 
	lea	eax,[esp-03ch+04ch]
	mov	ebx,ebp
	add	ecx,byte 08h
	mov	esi,dword [ecx+0ch]
	mov	ecx,dword [ecx+08h]
L_45070:
	cmp	esi,ecx
	jne	short	L_45055
	xor	ecx,ecx
	jmp	short	L_45056
L_45055:
	mov	ecx,edi
	and	ecx,dword 01ffh
	mov	esi,ecx
	shl	esi,03h
	mov	ecx,dword [ebp]
	add	ecx,esi
L_45056:
	mov	dword [esp-03ch+04ch],ebx
	mov	dword [esp-03ch+04h+04ch],ecx
; Line 414:	     __deque_iterator(__map_iterator __m, pointer __p) noexcept 
L_45053:
	mov	ecx,dword [eax]
	mov	eax,edx
	mov	dword [eax],ecx
	mov	eax,dword [esp-03ch+04h+04ch]
	mov	dword [edx+04h],eax
L_45038:
	mov	eax,dword [esp+04h+04ch]
L_45086:
; Line 1079:	} 
L_45100:
L_44957:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@size$qv:
; Line 947:	     size_type&            size()          {return __size_.first();} 
	push	ecx
	push	ecx
L_45106:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
L_45139:
L_45124:
L_45107:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@__alloc$qv:
; Line 950:	     allocator_type&       __alloc()       {return __size_.second();} 
	push	ecx
	push	ecx
L_45146:
	mov	eax,dword [esp+04h+08h]
	add	eax,byte 024h
	add	eax,byte 04h
L_45179:
L_45164:
L_45147:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	add	esp,byte 0ffffffc4h
	push	ebx
	push	esi
	push	edi
L_45186:
	mov	ebx,dword [esp+04h+048h]
; Line 1104:	    clear(); 
	mov	eax,ebx
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv
	pop	ecx
; Line 1105:	    typename __map::iterator __i = __map_.begin(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	edi,dword [eax+08h]
L_45210:
; Line 1106:	    typename __map::iterator __e = __map_.end(); 
	mov	eax,ebx
	add	eax,byte 08h
	mov	esi,dword [eax+0ch]
L_45226:
	cmp	edi,esi
	je	short	L_45191
L_45189:
; Line 1108:	        __alloc_traits::deallocate(__alloc(), *__i, __block_size); 
L_45287:
L_45272:
L_45257:
	mov	eax,edi
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_45305:
L_45242:
L_45192:
	add	edi,byte 04h
; Line 1107:	    for (; __i != __e; ++__i) 
L_45190:
	cmp	edi,esi
	jne	short	L_45287
L_45191:
; Line 1109:	} 
L_45346:
L_45333:
L_45320:
	mov	eax,ebx
	add	eax,byte 08h
	push	eax
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_45362:
L_45187:
	pop	edi
	pop	esi
	pop	ebx
	add	esp,byte 03ch
	ret
section code
	section vsc@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv virtual
@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@clear$qv:
	add	esp,0fffffeb0h
	push	ebx
	push	ebp
	push	esi
	push	edi
L_45368:
	mov	eax,dword [esp+04h+0160h]
	mov	dword [esp-0ch+0160h],eax
; Line 1161:	    allocator_type& __a = __alloc(); 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
	mov	ebx,eax
	add	ebx,byte 04h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-08h+0160h],eax
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	dword [esp-04h+0160h],eax
	mov	esi,dword [esp-0ch+0160h]
	add	esi,byte 08h
L_45441:
L_45426:
L_45411:
	lea	edi,[esp-018h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0150h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@begin$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_45459:
	lea	edi,[esp-024h+0160h]
	mov	eax,dword [esp-0ch+0160h]
	push	eax
	lea	eax,[esp-0144h+0164h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@end$qv
	pop	ecx
	pop	ecx
	mov	ecx,eax
	mov	edx,dword [eax]
	mov	eax,edi
	mov	dword [eax],edx
	mov	eax,dword [ecx+04h]
	mov	dword [edi+04h],eax
L_45475:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	je	near	L_45373
L_45371:
; Line 1163:	        __alloc_traits::destroy(__a, std::__1::addressof(*__i)); 
	mov	eax,ebx
	mov	ecx,dword [esp-018h+04h+0160h]
L_45523:
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_45508:
	push	ecx
	push	eax
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_45555:
L_45540:
	lea	eax,[esp-0136h+016ch]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
L_45583:
L_45570:
L_45493:
L_45374:
; Line 299:	        if (++__ptr_ - *__m_iter_ == __block_size) 
	add	dword [esp-018h+04h+0160h],byte 08h
	mov	eax,dword [esp-018h+04h+0160h]
	mov	eax,dword [esp-018h+0160h]
	mov	ecx,dword [eax]
	mov	eax,dword [esp-018h+04h+0160h]
	sub	eax,ecx
	sar	eax,03h
	cmp	eax,dword 0200h
	jne	short	L_45608
; Line 300:	        { 
; Line 301:	            ++__m_iter_; 
	add	dword [esp-018h+0160h],byte 04h
	mov	eax,dword [esp-018h+0160h]
; Line 302:	            __ptr_ = *__m_iter_; 
	mov	eax,dword [esp-018h+0160h]
	mov	eax,dword [eax]
	mov	dword [esp-018h+04h+0160h],eax
L_45589:
; Line 304:	        return *this; 
; Line 305:	    } 
L_45608:
; Line 1162:	    for (iterator __i = begin(), __e = end(); __i != __e; ++__i) 
L_45372:
	lea	eax,[esp-024h+0160h]
	push	eax
	lea	eax,[esp-018h+0164h]
	push	eax
	call	@$bneq$qrx#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~rx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~
	pop	ecx
	pop	ecx
	and	al,al
	jne	near	L_45371
L_45373:
L_45622:
L_45636:
L_45650:
L_45664:
; Line 1164:	    size() = 0; 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 024h
L_45710:
L_45695:
L_45680:
	mov	dword [eax],00h
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_45728:
	cmp	eax,byte 02h
	jbe	short	L_45380
L_45379:
; Line 1166:	    { 
; Line 1167:	        __alloc_traits::deallocate(__a, __map_.front(), __block_size); 
	mov	eax,dword [esp-08h+0160h]
	mov	eax,dword [eax+08h]
L_45759:
	mov	eax,dword [eax]
	push	eax
	call	@std@__1@__deallocate$qpv
	pop	ecx
L_45775:
L_45744:
; Line 1168:	        __map_.pop_front(); 
	mov	eax,dword [esp-04h+0160h]
	mov	ebx,eax
	mov	ebp,dword [eax+08h]
	add	ebp,byte 04h
	add	esp,byte 0fffffffch
	mov	edi,esp
	lea	eax,[esp-0135h+0164h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv
	pop	ecx
L_45824:
	lea	eax,[esp-0135h+0164h]
	push	eax
	push	edi
	call	@std@__1@#integral_constant$4bool3_Tp$1&~@$bctr$qRx#integral_constant$n0n1$1&~
	pop	ecx
	pop	ecx
	push	ebp
	push	ebx
	call	@std@__1@#__split_buffer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@__destruct_at_begin$qpp#unique_ptr$n0#default_delete$n0~~#integral_constant$4bool3_Tp$1&~
	add	esp,byte 0ch
	lea	eax,[esp-0135h+0160h]
	push	eax
	call	@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv
	pop	ecx
L_45838:
L_45809:
L_45792:
L_45381:
; Line 1165:	    while (__map_.size() > 2) 
	mov	eax,esi
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_45856:
	cmp	eax,byte 02h
	ja	short	L_45379
L_45380:
; Line 1170:	    switch (__map_.size()) 
	mov	eax,dword [esp-0ch+0160h]
	add	eax,byte 08h
	mov	ecx,dword [eax+08h]
	mov	eax,dword [eax+0ch]
	sub	eax,ecx
	sar	eax,02h
L_45872:
	cmp	eax,byte 01h
	je	short	L_45391
	cmp	eax,byte 02h
	je	short	L_45392
	jmp	short	L_45394
; Line 1171:	    { 
L_45391:
; Line 1173:	        __start_ = __block_size / 2; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0100h
; Line 1174:	        break; 
	jmp	short	L_45388
L_45392:
; Line 1176:	        __start_ = __block_size; 
	mov	eax,dword [esp-0ch+0160h]
	mov	dword [eax+020h],0200h
; Line 1177:	        break; 
L_45394:
L_45388:
; Line 1179:	} 
L_45369:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp,0150h
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_45878:
L_45879:
	ret
section code
	section vsc@Accelerators@Key@$bdtr$qv virtual
@Accelerators@Key@$bdtr$qv:
L_45884:
L_45885:
	ret
section code
	section vsc@std@__1@#__deque_base_common$4bool$1&~@$bdtr$qv virtual
@std@__1@#__deque_base_common$4bool$1&~@$bdtr$qv:
L_45890:
L_45891:
	ret
section code
	section vsc@std@__1@#allocator$17@Accelerators@Key~@$bdtr$qv virtual
@std@__1@#allocator$17@Accelerators@Key~@$bdtr$qv:
L_45896:
L_45897:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@$bdtr$qv:
L_45902:
L_45903:
	ret
section code
	section vsc@std@__1@#allocator$p17@Accelerators@Key~@$bdtr$qv virtual
@std@__1@#allocator$p17@Accelerators@Key~@$bdtr$qv:
L_45908:
L_45909:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@$bdtr$qv:
L_45914:
L_45915:
	ret
section code
	section vsc@std@__1@#allocator$px17@Accelerators@Key~@$bdtr$qv virtual
@std@__1@#allocator$px17@Accelerators@Key~@$bdtr$qv:
L_45920:
L_45921:
	ret
section code
	section vsc@std@__1@#__split_buffer_common$4bool$1&~@$bdtr$qv virtual
@std@__1@#__split_buffer_common$4bool$1&~@$bdtr$qv:
L_45926:
L_45927:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp17@Accelerators@Key#allocator$pn0~i$0&~@$bdtr$qv:
	push	ecx
L_45932:
L_45946:
L_45933:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$pp17@Accelerators@Key#allocator$pn0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_45952:
L_45979:
L_45966:
L_45953:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$p17@Accelerators@Key~$qppn0 virtual
@std@__1@#__to_raw_pointer$p17@Accelerators@Key~$qppn0:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_45986:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_45987:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p17@Accelerators@Key~ppn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p17@Accelerators@Key~ppn0~@$bctr$qv:
	push	ecx
L_45994:
	mov	eax,dword [esp+04h+04h]
L_46012:
L_45995:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0 virtual
@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_46018:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46021:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_46019:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#destroy$pn0~$qr#allocator$pn0~ppn0 virtual
@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#destroy$pn0~$qr#allocator$pn0~ppn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_46028:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#destroy$pn0~$qr#allocator$pn0~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46031:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_46063:
	mov	dword [ebp-03ch+014h],01h
L_46048:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_46091:
L_46078:
L_46029:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p17@Accelerators@Key~ppn0~ virtual
@$xt@#__has_destroy$#allocator$p17@Accelerators@Key~ppn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#destroy$pn0~$qr#allocator$pn0~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$p17@Accelerators@Key~~@#destroy$pn0~$qr#allocator$pn0~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p17@Accelerators@Key~ppn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypxn0rxn0pxpn0i9_DiffType$341&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypxn0rxn0pxpn0i9_DiffType$341&~@$bdtr$qv:
L_46098:
L_46099:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$17@Accelerators@Key~i$0&~@$bdtr$qv:
	push	ecx
L_46104:
L_46118:
L_46105:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$17@Accelerators@Key~~@$bdtr$qv:
	push	ecx
	push	ecx
L_46124:
L_46151:
L_46138:
L_46125:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bctr$qRx#__deque_iterator$n0pn0rn0ppn0in1$341&~ virtual
@std@__1@#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~@$bctr$qRx#__deque_iterator$n0pn0rn0ppn0in1$341&~:
	push	ebx
L_46158:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_46159:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$17@Accelerators@Key~$qrn0 virtual
@std@__1@#addressof$17@Accelerators@Key~$qrn0:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_46166:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_46167:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$17@Accelerators@Key~pn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$17@Accelerators@Key~pn0~@$bctr$qv:
	push	ecx
L_46174:
	mov	eax,dword [esp+04h+04h]
L_46192:
L_46175:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0 virtual
@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc0h
L_46198:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46201:
; Line 1589:	                __p->~_Tp(); 
	mov	dword [ebp-03ch+014h],01h
L_46216:
; Line 1590:	            } 
L_46199:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@17@Accelerators@Key+0
	dd	00h
	dd	00h
	dd	01h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#destroy$n0~$qr#allocator$n0~pn0 virtual
@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#destroy$n0~$qr#allocator$n0~pn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_46222:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#destroy$n0~$qr#allocator$n0~pn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46225:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_46257:
	mov	dword [ebp-03ch+014h],01h
L_46242:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#__destroy$n0~$q#integral_constant$4bool3_Tp$0&~r#allocator$n0~pn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_46285:
L_46272:
L_46223:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$17@Accelerators@Key~pn0~ virtual
@$xt@#__has_destroy$#allocator$17@Accelerators@Key~pn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#destroy$n0~$qr#allocator$n0~pn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$17@Accelerators@Key~~@#destroy$n0~$qr#allocator$n0~pn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$17@Accelerators@Key~pn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$p17@Accelerators@Key~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$p17@Accelerators@Key~@$bctr$qv:
	push	ecx
	push	ecx
L_46292:
	mov	eax,dword [esp+04h+08h]
L_46325:
L_46310:
L_46293:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p17@Accelerators@Key~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p17@Accelerators@Key~@$bctr$qv:
	push	ecx
L_46332:
	mov	eax,dword [esp+04h+04h]
L_46350:
L_46333:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p17@Accelerators@Key~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p17@Accelerators@Key~@$bdtr$qv:
	push	ecx
L_46356:
L_46370:
L_46357:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$17@Accelerators@Keypn0rn0ppn0i9_DiffType$341&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_46376:
L_46390:
L_46404:
L_46418:
L_46377:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$17@Accelerators@Key#allocator$n0~~@$bdtr$qv virtual
@std@__1@#deque$17@Accelerators@Key#allocator$n0~~@$bdtr$qv:
L_46424:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$17@Accelerators@Key#allocator$n0~~@$bdtr$qv
	pop	ecx
L_46425:
	ret
section code
	section vsc@std@__1@#default_delete$puc~@$bdtr$qv virtual
@std@__1@#default_delete$puc~@$bdtr$qv:
L_46430:
L_46431:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$puc#default_delete$puc~i$0&~@$bdtr$qv:
	push	ecx
L_46436:
L_46450:
L_46437:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$puc#default_delete$puc~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$puc#default_delete$puc~~@$bdtr$qv:
	push	ecx
	push	ecx
L_46456:
L_46483:
L_46470:
L_46457:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#default_delete$puc~@#$bcall$uc~$xqpucpv virtual
@std@__1@#default_delete$puc~@#$bcall$uc~$xqpucpv:
; Line 2451:	        { 
L_46490:
	mov	eax,dword [esp+08h]
; Line 2454:	            delete [] __ptr; 
	and	eax,eax
	je	short	L_46495
	push	eax
	call	dword [@$bdla$qpv]
	pop	ecx
L_46495:
; Line 2455:	        } 
L_46491:
	ret
section code
	section vsc@std@__1@#default_delete$12ResourceData~@$bdtr$qv virtual
@std@__1@#default_delete$12ResourceData~@$bdtr$qv:
L_46499:
L_46500:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@$bdtr$qv:
	push	ecx
L_46505:
L_46519:
L_46506:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p12ResourceData#default_delete$n0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_46525:
L_46552:
L_46539:
L_46526:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$p4Icon~@$bdtr$qv virtual
@std@__1@#allocator$p4Icon~@$bdtr$qv:
L_46559:
L_46560:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p4Icon~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p4Icon~~@$bdtr$qv:
L_46565:
L_46566:
	ret
section code
	section vsc@std@__1@#allocator$pp4Icon~@$bdtr$qv virtual
@std@__1@#allocator$pp4Icon~@$bdtr$qv:
L_46571:
L_46572:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp4Icon~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$pp4Icon~~@$bdtr$qv:
L_46577:
L_46578:
	ret
section code
	section vsc@std@__1@#allocator$pxp4Icon~@$bdtr$qv virtual
@std@__1@#allocator$pxp4Icon~@$bdtr$qv:
L_46583:
L_46584:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp4Icon#allocator$ppn0~i$0&~@$bdtr$qv:
	push	ecx
L_46589:
L_46603:
L_46590:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ppp4Icon#allocator$ppn0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_46609:
L_46636:
L_46623:
L_46610:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$pp4Icon~$qpppn0 virtual
@std@__1@#__to_raw_pointer$pp4Icon~$qpppn0:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_46643:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_46644:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$pp4Icon~pppn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$pp4Icon~pppn0~@$bctr$qv:
	push	ecx
L_46651:
	mov	eax,dword [esp+04h+04h]
L_46669:
L_46652:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0 virtual
@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_46675:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46678:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_46676:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0 virtual
@std@__1@#allocator_traits$#allocator$pp4Icon~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_46685:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46688:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_46720:
	mov	dword [ebp-03ch+014h],01h
L_46705:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$pp4Icon~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_46748:
L_46735:
L_46686:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$pp4Icon~pppn0~ virtual
@$xt@#__has_destroy$#allocator$pp4Icon~pppn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$pp4Icon~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$pp4Icon~pppn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$p4Iconpxpn0rxpn0pxppn0i9_DiffType$1024&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$p4Iconpxpn0rxpn0pxppn0i9_DiffType$1024&~@$bdtr$qv:
L_46755:
L_46756:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p4Icon~i$0&~@$bdtr$qv:
	push	ecx
L_46761:
L_46775:
L_46762:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$p4Icon~~@$bdtr$qv:
	push	ecx
	push	ecx
L_46781:
L_46808:
L_46795:
L_46782:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qRx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~ virtual
@std@__1@#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qRx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~:
	push	ebx
L_46815:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_46816:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$p4Icon~$qrpn0 virtual
@std@__1@#addressof$p4Icon~$qrpn0:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_46823:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_46824:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p4Icon~ppn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p4Icon~ppn0~@$bctr$qv:
	push	ecx
L_46831:
	mov	eax,dword [esp+04h+04h]
L_46849:
L_46832:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0 virtual
@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_46855:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46858:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_46856:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p4Icon~~@#destroy$pn0~$qr#allocator$pn0~ppn0 virtual
@std@__1@#allocator_traits$#allocator$p4Icon~~@#destroy$pn0~$qr#allocator$pn0~ppn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_46865:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p4Icon~~@#destroy$pn0~$qr#allocator$pn0~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_46868:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_46900:
	mov	dword [ebp-03ch+014h],01h
L_46885:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p4Icon~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_46928:
L_46915:
L_46866:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p4Icon~ppn0~ virtual
@$xt@#__has_destroy$#allocator$p4Icon~ppn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p4Icon~~@#destroy$pn0~$qr#allocator$pn0~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$p4Icon~~@#destroy$pn0~$qr#allocator$pn0~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p4Icon~ppn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$pp4Icon~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$pp4Icon~@$bctr$qv:
	push	ecx
	push	ecx
L_46935:
	mov	eax,dword [esp+04h+08h]
L_46968:
L_46953:
L_46936:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$pp4Icon~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$pp4Icon~@$bctr$qv:
	push	ecx
L_46975:
	mov	eax,dword [esp+04h+04h]
L_46993:
L_46976:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$pp4Icon~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$pp4Icon~@$bdtr$qv:
	push	ecx
L_46999:
L_47013:
L_47000:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$p4Iconppn0rpn0pppn0i9_DiffType$1024&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_47019:
L_47033:
L_47047:
L_47061:
L_47020:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$p4Icon#allocator$pn0~~@$bdtr$qv virtual
@std@__1@#deque$p4Icon#allocator$pn0~~@$bdtr$qv:
L_47067:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$p4Icon#allocator$pn0~~@$bdtr$qv
	pop	ecx
L_47068:
	ret
section code
	section vsc@std@__1@#allocator$p6Cursor~@$bdtr$qv virtual
@std@__1@#allocator$p6Cursor~@$bdtr$qv:
L_47073:
L_47074:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p6Cursor~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p6Cursor~~@$bdtr$qv:
L_47079:
L_47080:
	ret
section code
	section vsc@std@__1@#allocator$pp6Cursor~@$bdtr$qv virtual
@std@__1@#allocator$pp6Cursor~@$bdtr$qv:
L_47085:
L_47086:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$pp6Cursor~~@$bdtr$qv:
L_47091:
L_47092:
	ret
section code
	section vsc@std@__1@#allocator$pxp6Cursor~@$bdtr$qv virtual
@std@__1@#allocator$pxp6Cursor~@$bdtr$qv:
L_47097:
L_47098:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ppp6Cursor#allocator$ppn0~i$0&~@$bdtr$qv:
	push	ecx
L_47103:
L_47117:
L_47104:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ppp6Cursor#allocator$ppn0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_47123:
L_47150:
L_47137:
L_47124:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$pp6Cursor~$qpppn0 virtual
@std@__1@#__to_raw_pointer$pp6Cursor~$qpppn0:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_47157:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_47158:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$pp6Cursor~pppn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$pp6Cursor~pppn0~@$bctr$qv:
	push	ecx
L_47165:
	mov	eax,dword [esp+04h+04h]
L_47183:
L_47166:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0 virtual
@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_47189:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47192:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_47190:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0 virtual
@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_47199:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47202:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_47234:
	mov	dword [ebp-03ch+014h],01h
L_47219:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#__destroy$ppn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$ppn0~pppn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_47262:
L_47249:
L_47200:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$pp6Cursor~pppn0~ virtual
@$xt@#__has_destroy$#allocator$pp6Cursor~pppn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$pp6Cursor~~@#destroy$ppn0~$qr#allocator$ppn0~pppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$pp6Cursor~pppn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorpxpn0rxpn0pxppn0i9_DiffType$1024&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$p6Cursorpxpn0rxpn0pxppn0i9_DiffType$1024&~@$bdtr$qv:
L_47269:
L_47270:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$p6Cursor~i$0&~@$bdtr$qv:
	push	ecx
L_47275:
L_47289:
L_47276:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$p6Cursor~~@$bdtr$qv:
	push	ecx
	push	ecx
L_47295:
L_47322:
L_47309:
L_47296:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qRx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~ virtual
@std@__1@#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~@$bctr$qRx#__deque_iterator$pn0ppn0rpn0pppn0in1$1024&~:
	push	ebx
L_47329:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_47330:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$p6Cursor~$qrpn0 virtual
@std@__1@#addressof$p6Cursor~$qrpn0:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_47337:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_47338:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p6Cursor~ppn0~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p6Cursor~ppn0~@$bctr$qv:
	push	ecx
L_47345:
	mov	eax,dword [esp+04h+04h]
L_47363:
L_47346:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0 virtual
@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_47369:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47372:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_47370:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#destroy$pn0~$qr#allocator$pn0~ppn0 virtual
@std@__1@#allocator_traits$#allocator$p6Cursor~~@#destroy$pn0~$qr#allocator$pn0~ppn0:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_47379:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#destroy$pn0~$qr#allocator$pn0~ppn0
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47382:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_47414:
	mov	dword [ebp-03ch+014h],01h
L_47399:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p6Cursor~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp$0&~r#allocator$pn0~ppn0
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_47442:
L_47429:
L_47380:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p6Cursor~ppn0~ virtual
@$xt@#__has_destroy$#allocator$p6Cursor~ppn0~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#destroy$pn0~$qr#allocator$pn0~ppn0 virtual
@$xc@std@__1@#allocator_traits$#allocator$p6Cursor~~@#destroy$pn0~$qr#allocator$pn0~ppn0:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p6Cursor~ppn0~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$pp6Cursor~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$pp6Cursor~@$bctr$qv:
	push	ecx
	push	ecx
L_47449:
	mov	eax,dword [esp+04h+08h]
L_47482:
L_47467:
L_47450:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$pp6Cursor~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$pp6Cursor~@$bctr$qv:
	push	ecx
L_47489:
	mov	eax,dword [esp+04h+04h]
L_47507:
L_47490:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$pp6Cursor~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$pp6Cursor~@$bdtr$qv:
	push	ecx
L_47513:
L_47527:
L_47514:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$p6Cursorppn0rpn0pppn0i9_DiffType$1024&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_47533:
L_47547:
L_47561:
L_47575:
L_47534:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$p6Cursor#allocator$pn0~~@$bdtr$qv virtual
@std@__1@#deque$p6Cursor#allocator$pn0~~@$bdtr$qv:
L_47581:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$p6Cursor#allocator$pn0~~@$bdtr$qv
	pop	ecx
L_47582:
	ret
section code
	section vsc@Point@$bdtr$qv virtual
@Point@$bdtr$qv:
L_47587:
L_47588:
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv:
L_47593:
L_47594:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv:
L_47599:
L_47600:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv:
L_47605:
L_47606:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv:
L_47611:
L_47612:
	ret
section code
	section vsc@std@__1@#allocator$px#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$px#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv:
L_47617:
L_47618:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_47623:
L_47637:
L_47624:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$12ResourceData#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_47643:
L_47670:
L_47657:
L_47644:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$p#unique_ptr$12ResourceData#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__to_raw_pointer$p#unique_ptr$12ResourceData#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_47677:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_47678:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_47685:
	mov	eax,dword [esp+04h+04h]
L_47703:
L_47686:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_47709:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47712:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_47710:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_47719:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47722:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_47754:
	mov	dword [ebp-03ch+014h],01h
L_47739:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_47782:
L_47769:
L_47720:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p#unique_ptr$12ResourceData#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_47789:
L_47790:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_47795:
L_47809:
L_47796:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_47815:
L_47842:
L_47829:
L_47816:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@std@__1@#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
	push	ebx
L_47849:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_47850:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$#unique_ptr$12ResourceData#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#addressof$#unique_ptr$12ResourceData#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_47857:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_47858:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_47865:
	mov	eax,dword [esp+04h+04h]
L_47883:
L_47866:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa0h
	push	ebx
	push	esi
	push	edi
L_47889:
	mov	ebx,dword [ebp+010h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_47892:
; Line 1589:	                __p->~_Tp(); 
	mov	dword [ebp-03ch+014h],01h
	mov	esi,ebx
	mov	edi,esi
	xor	ebx,ebx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_47944:
	mov	eax,dword [eax]
	mov	dword [ebp-054h],eax
; Line 2628:	        __ptr_.first() = __p; 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_47960:
	mov	dword [eax],ebx
; Line 2629:	        if (__tmp) 
	cmp	dword [ebp-054h],byte 00h
	je	short	L_47912
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	eax,dword [ebp-054h]
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p12ResourceData#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_47976:
	push	eax
	call	@std@__1@#default_delete$12ResourceData~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_47912:
; Line 2631:	    } 
L_47929:
	mov	eax,esi
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$12ResourceData~@$bdtr$qv
	pop	ecx
L_48004:
L_47991:
L_47909:
; Line 1590:	            } 
L_47890:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#unique_ptr$12ResourceData#default_delete$n0~~+0
	dd	00h
	dd	00h
	dd	01h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_48012:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_48015:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_48047:
	mov	dword [ebp-03ch+014h],01h
L_48032:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_48075:
L_48062:
L_48013:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#unique_ptr$12ResourceData#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv:
	push	ecx
	push	ecx
L_48082:
	mov	eax,dword [esp+04h+08h]
L_48115:
L_48100:
L_48083:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_48122:
	mov	eax,dword [esp+04h+04h]
L_48140:
L_48123:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$12ResourceData#default_delete$n0~~~@$bdtr$qv:
	push	ecx
L_48146:
L_48160:
L_48147:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$12ResourceData#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_48166:
L_48180:
L_48194:
L_48208:
L_48167:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#deque$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
L_48214:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$12ResourceData#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_48215:
	ret
section code
	section vsc@std@__1@#default_delete$7Control~@$bdtr$qv virtual
@std@__1@#default_delete$7Control~@$bdtr$qv:
L_48220:
L_48221:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@$bdtr$qv:
	push	ecx
L_48226:
L_48240:
L_48227:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p7Control#default_delete$n0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_48246:
L_48273:
L_48260:
L_48247:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv:
L_48280:
L_48281:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv:
L_48286:
L_48287:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$p#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv:
L_48292:
L_48293:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv:
L_48298:
L_48299:
	ret
section code
	section vsc@std@__1@#allocator$px#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$px#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv:
L_48304:
L_48305:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_48310:
L_48324:
L_48311:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$7Control#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_48330:
L_48357:
L_48344:
L_48331:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$p#unique_ptr$7Control#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__to_raw_pointer$p#unique_ptr$7Control#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_48364:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_48365:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p#unique_ptr$7Control#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p#unique_ptr$7Control#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_48372:
	mov	eax,dword [esp+04h+04h]
L_48390:
L_48373:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_48396:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_48399:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_48397:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_48406:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_48409:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_48441:
	mov	dword [ebp-03ch+014h],01h
L_48426:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_48469:
L_48456:
L_48407:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p#unique_ptr$7Control#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$p#unique_ptr$7Control#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$7Control#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p#unique_ptr$7Control#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_48476:
L_48477:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_48482:
L_48496:
L_48483:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$7Control#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_48502:
L_48529:
L_48516:
L_48503:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@std@__1@#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
	push	ebx
L_48536:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_48537:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$#unique_ptr$7Control#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#addressof$#unique_ptr$7Control#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_48544:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_48545:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#unique_ptr$7Control#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#unique_ptr$7Control#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_48552:
	mov	eax,dword [esp+04h+04h]
L_48570:
L_48553:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa0h
	push	ebx
	push	esi
	push	edi
L_48576:
	mov	ebx,dword [ebp+010h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_48579:
; Line 1589:	                __p->~_Tp(); 
	mov	dword [ebp-03ch+014h],01h
	mov	esi,ebx
	mov	edi,esi
	xor	ebx,ebx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_48631:
	mov	eax,dword [eax]
	mov	dword [ebp-054h],eax
; Line 2628:	        __ptr_.first() = __p; 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_48647:
	mov	dword [eax],ebx
; Line 2629:	        if (__tmp) 
	cmp	dword [ebp-054h],byte 00h
	je	short	L_48599
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	eax,dword [ebp-054h]
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p7Control#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_48663:
	push	eax
	call	@std@__1@#default_delete$7Control~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_48599:
; Line 2631:	    } 
L_48616:
	mov	eax,esi
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$7Control~@$bdtr$qv
	pop	ecx
L_48691:
L_48678:
L_48596:
; Line 1590:	            } 
L_48577:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#unique_ptr$7Control#default_delete$n0~~+0
	dd	00h
	dd	00h
	dd	01h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_48699:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_48702:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_48734:
	mov	dword [ebp-03ch+014h],01h
L_48719:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_48762:
L_48749:
L_48700:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#unique_ptr$7Control#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$#unique_ptr$7Control#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$7Control#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#unique_ptr$7Control#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv:
	push	ecx
	push	ecx
L_48769:
	mov	eax,dword [esp+04h+08h]
L_48802:
L_48787:
L_48770:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_48809:
	mov	eax,dword [esp+04h+04h]
L_48827:
L_48810:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$7Control#default_delete$n0~~~@$bdtr$qv:
	push	ecx
L_48833:
L_48847:
L_48834:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$7Control#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_48853:
L_48867:
L_48881:
L_48895:
L_48854:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#deque$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
L_48901:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$7Control#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_48902:
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv:
L_48907:
L_48908:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv:
L_48913:
L_48914:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv:
L_48919:
L_48920:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv:
L_48925:
L_48926:
	ret
section code
	section vsc@std@__1@#allocator$px#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$px#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv:
L_48931:
L_48932:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_48937:
L_48951:
L_48938:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$8MenuItem#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_48957:
L_48984:
L_48971:
L_48958:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$p#unique_ptr$8MenuItem#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__to_raw_pointer$p#unique_ptr$8MenuItem#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_48991:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_48992:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_48999:
	mov	eax,dword [esp+04h+04h]
L_49017:
L_49000:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_49023:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49026:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_49024:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_49033:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49036:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_49068:
	mov	dword [ebp-03ch+014h],01h
L_49053:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_49096:
L_49083:
L_49034:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p#unique_ptr$8MenuItem#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_49103:
L_49104:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_49109:
L_49123:
L_49110:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_49129:
L_49156:
L_49143:
L_49130:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@std@__1@#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
	push	ebx
L_49163:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_49164:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$#unique_ptr$8MenuItem#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#addressof$#unique_ptr$8MenuItem#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_49171:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_49172:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_49179:
	mov	eax,dword [esp+04h+04h]
L_49197:
L_49180:
	pop	ecx
	ret
section code
	section vsc@std@__1@#default_delete$8MenuItem~@$bdtr$qv virtual
@std@__1@#default_delete$8MenuItem~@$bdtr$qv:
L_49203:
L_49204:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@$bdtr$qv:
	push	ecx
L_49209:
L_49223:
L_49210:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p8MenuItem#default_delete$n0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_49229:
L_49256:
L_49243:
L_49230:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa0h
	push	ebx
	push	esi
	push	edi
L_49263:
	mov	ebx,dword [ebp+010h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49266:
; Line 1589:	                __p->~_Tp(); 
	mov	dword [ebp-03ch+014h],01h
	mov	esi,ebx
	mov	edi,esi
	xor	ebx,ebx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_49318:
	mov	eax,dword [eax]
	mov	dword [ebp-054h],eax
; Line 2628:	        __ptr_.first() = __p; 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_49334:
	mov	dword [eax],ebx
; Line 2629:	        if (__tmp) 
	cmp	dword [ebp-054h],byte 00h
	je	short	L_49286
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	eax,dword [ebp-054h]
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p8MenuItem#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_49350:
	push	eax
	call	@std@__1@#default_delete$8MenuItem~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_49286:
; Line 2631:	    } 
L_49303:
	mov	eax,esi
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$8MenuItem~@$bdtr$qv
	pop	ecx
L_49378:
L_49365:
L_49283:
; Line 1590:	            } 
L_49264:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#unique_ptr$8MenuItem#default_delete$n0~~+0
	dd	00h
	dd	00h
	dd	01h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_49386:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49389:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_49421:
	mov	dword [ebp-03ch+014h],01h
L_49406:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_49449:
L_49436:
L_49387:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#unique_ptr$8MenuItem#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv:
	push	ecx
	push	ecx
L_49456:
	mov	eax,dword [esp+04h+08h]
L_49489:
L_49474:
L_49457:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_49496:
	mov	eax,dword [esp+04h+04h]
L_49514:
L_49497:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$8MenuItem#default_delete$n0~~~@$bdtr$qv:
	push	ecx
L_49520:
L_49534:
L_49521:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$8MenuItem#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_49540:
L_49554:
L_49568:
L_49582:
L_49541:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#deque$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
L_49588:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$8MenuItem#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_49589:
	ret
section code
	section vsc@std@__1@#default_delete$15InternalVerInfo~@$bdtr$qv virtual
@std@__1@#default_delete$15InternalVerInfo~@$bdtr$qv:
L_49594:
L_49595:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@$bdtr$qv:
	push	ecx
L_49600:
L_49614:
L_49601:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$p15InternalVerInfo#default_delete$n0~~@$bdtr$qv:
	push	ecx
	push	ecx
L_49620:
L_49647:
L_49634:
L_49621:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv:
L_49654:
L_49655:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv:
L_49660:
L_49661:
	ret
section code
	section vsc@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv:
L_49666:
L_49667:
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv:
L_49672:
L_49673:
	ret
section code
	section vsc@std@__1@#allocator$px#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#allocator$px#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv:
L_49678:
L_49679:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_49684:
L_49698:
L_49685:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$pp#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$p#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_49704:
L_49731:
L_49718:
L_49705:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__to_raw_pointer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#__to_raw_pointer$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~$qpp#unique_ptr$n0#default_delete$n0~~:
; Line 1039:	inline  
; Line 1040:	_Tp* 
; Line 1041:	__to_raw_pointer(_Tp* __p) noexcept 
; Line 1042:	{ 
L_49738:
	mov	eax,dword [esp+04h]
; Line 1043:	    return __p; 
; Line 1044:	} 
L_49739:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_49746:
	mov	eax,dword [esp+04h+04h]
L_49764:
L_49747:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffc4h
L_49770:
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49773:
; Line 1589:	                __p->~_Tp(); 
; Line 1590:	            } 
L_49771:
	call	dword [@_RundownException$qv]
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_49780:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49783:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_49815:
	mov	dword [ebp-03ch+014h],01h
L_49800:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$p#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_49843:
L_49830:
L_49781:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$p#unique_ptr$n0#default_delete$n0~~~$qr#allocator$p#unique_ptr$n0#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~pp#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~px#unique_ptr$n0#default_delete$n0~~rx#unique_ptr$n0#default_delete$n0~~pxp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bdtr$qv:
L_49850:
L_49851:
	ret
section code
	section vsc@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@$bdtr$qv virtual
@std@__1@#__libcpp_compressed_pair_imp$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~i$0&~@$bdtr$qv:
	push	ecx
L_49856:
L_49870:
L_49857:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#__compressed_pair$ui#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@$bdtr$qv:
	push	ecx
	push	ecx
L_49876:
L_49903:
L_49890:
L_49877:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~ virtual
@std@__1@#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~@$bctr$qRx#__deque_iterator$#unique_ptr$n0#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~in1$512&~:
	push	ebx
L_49910:
	mov	edx,dword [esp+08h+04h]
	mov	eax,dword [esp+04h+04h]
	mov	ecx,edx
	mov	ebx,dword [ecx]
	mov	ecx,eax
	mov	dword [ecx],ebx
	mov	ecx,dword [edx+04h]
	mov	dword [eax+04h],ecx
L_49911:
	pop	ebx
	ret
section code
	section vsc@std@__1@#addressof$#unique_ptr$15InternalVerInfo#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#addressof$#unique_ptr$15InternalVerInfo#default_delete$n0~~~$qr#unique_ptr$n0#default_delete$n0~~:
; Line 81:	inline  
; Line 82:	_Tp* 
; Line 83:	addressof(_Tp& __x) noexcept 
; Line 84:	{ 
L_49918:
	mov	eax,dword [esp+04h]
; Line 85:	    return (_Tp*)&reinterpret_cast<const volatile char&>(__x); 
; Line 86:	} 
L_49919:
	ret
section code
	section vsc@std@__1@#__has_destroy$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__has_destroy$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_49926:
	mov	eax,dword [esp+04h+04h]
L_49944:
L_49927:
	pop	ecx
	ret
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1585:	    template <class _Tp> 
; Line 1586:	         
; Line 1587:	        static void __destroy(false_type, allocator_type&, _Tp* __p) 
; Line 1588:	            { 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffa0h
	push	ebx
	push	esi
	push	edi
L_49950:
	mov	ebx,dword [ebp+010h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_49953:
; Line 1589:	                __p->~_Tp(); 
	mov	dword [ebp-03ch+014h],01h
	mov	esi,ebx
	mov	edi,esi
	xor	ebx,ebx
; Line 2627:	        pointer __tmp = __ptr_.first(); 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_50005:
	mov	eax,dword [eax]
	mov	dword [ebp-054h],eax
; Line 2628:	        __ptr_.first() = __p; 
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@first$qv
	pop	ecx
L_50021:
	mov	dword [eax],ebx
; Line 2629:	        if (__tmp) 
	cmp	dword [ebp-054h],byte 00h
	je	short	L_49973
; Line 2630:	            __ptr_.second()(__tmp); 
	mov	eax,dword [ebp-054h]
	push	eax
	mov	eax,edi
	push	eax
	call	@std@__1@#__libcpp_compressed_pair_imp$p15InternalVerInfo#default_delete$n0~i$0&~@second$qv
	pop	ecx
L_50037:
	push	eax
	call	@std@__1@#default_delete$15InternalVerInfo~@$bcall$xqpn0
	pop	ecx
	pop	ecx
L_49973:
; Line 2631:	    } 
L_49990:
	mov	eax,esi
	add	eax,byte 04h
	push	eax
	call	@std@__1@#default_delete$15InternalVerInfo~@$bdtr$qv
	pop	ecx
L_50065:
L_50052:
L_49970:
; Line 1590:	            } 
L_49951:
	call	dword [@_RundownException$qv]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#unique_ptr$15InternalVerInfo#default_delete$n0~~+0
	dd	00h
	dd	00h
	dd	01h
	dd	00h
section code
	section vsc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
; Line 1484:	    template <class _Tp> 
; Line 1485:	         
; Line 1486:	        static void destroy(allocator_type& __a, _Tp* __p) 
; Line 1487:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 
	push	ebp
	mov	ebp,esp
	add	esp,byte 0ffffffb0h
	push	ebx
	push	esi
L_50073:
	mov	esi,dword [ebp+0ch]
	mov	ebx,dword [ebp+08h]
	push	dword @$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	lea	eax,[ebp-03ch]
	push	eax
	call	dword [@_InitializeException$qpvpv]
	pop	ecx
	pop	ecx
L_50076:
	push	esi
	push	ebx
	add	esp,byte 0fffffffch
	mov	ecx,esp
L_50108:
	mov	dword [ebp-03ch+014h],01h
L_50093:
	mov	dword [ebp-03ch+014h],02h
	lea	eax,[ebp-04dh]
	push	eax
	push	ecx
	call	@std@__1@#integral_constant$4bool3_Tp$0&~@$bctr$qRx#integral_constant$n0n1$0&~
	pop	ecx
	pop	ecx
	mov	dword [ebp-03ch+014h],03h
	mov	dword [ebp-03ch+014h],01h
	call	@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#__destroy$#unique_ptr$n0#default_delete$n0~~~$q#integral_constant$4bool3_Tp$0&~r#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~
	add	esp,byte 0ch
	mov	dword [ebp-03ch+014h],04h
L_50136:
L_50123:
L_50074:
	call	dword [@_RundownException$qv]
	pop	esi
	pop	ebx
	mov	esp,ebp
	pop	ebp
	ret
section code
	section vsc@$xt@#__has_destroy$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~ virtual
@$xt@#__has_destroy$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~:
	dd	00h
	dd	01h
	dd	0400h
	db	073h
	db	074h
	db	064h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	031h
	db	03ah
	db	03ah
	db	05fh
	db	05fh
	db	068h
	db	061h
	db	073h
	db	05fh
	db	064h
	db	065h
	db	073h
	db	074h
	db	072h
	db	06fh
	db	079h
	db	00h
	dd	0800h
	dd	@$xt@#integral_constant$4bool3_Tp$0&~+0
	dd	00h
	dd	00h
section code
	section vsc@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~ virtual
@$xc@std@__1@#allocator_traits$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~~@#destroy$#unique_ptr$n0#default_delete$n0~~~$qr#allocator$#unique_ptr$n0#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~:
	dd	00h
	dd	0ffffffc4h
	dd	0400h
	dd	@$xt@#__has_destroy$#allocator$#unique_ptr$15InternalVerInfo#default_delete$n0~~~p#unique_ptr$n0#default_delete$n0~~~+0
	dd	0ffffffb3h
	dd	02h
	dd	04h
	dd	00h
section code
	section vsc@std@__1@#is_trivially_destructible$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#is_trivially_destructible$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv:
	push	ecx
	push	ecx
L_50143:
	mov	eax,dword [esp+04h+08h]
L_50176:
L_50161:
L_50144:
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bctr$qv:
	push	ecx
L_50183:
	mov	eax,dword [esp+04h+04h]
L_50201:
L_50184:
	pop	ecx
	ret
section code
	section vsc@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv virtual
@std@__1@#__libcpp_trivial_destructor$p#unique_ptr$15InternalVerInfo#default_delete$n0~~~@$bdtr$qv:
	push	ecx
L_50207:
L_50221:
L_50208:
	pop	ecx
	ret
section code
	section vsc@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv virtual
@std@__1@#reverse_iterator$#__deque_iterator$#unique_ptr$15InternalVerInfo#default_delete$n0~~p#unique_ptr$n0#default_delete$n0~~r#unique_ptr$n0#default_delete$n0~~pp#unique_ptr$n0#default_delete$n0~~i9_DiffType$512&~~@$bdtr$qv:
	push	ecx
	push	ecx
	push	ecx
L_50227:
L_50241:
L_50255:
L_50269:
L_50228:
	pop	ecx
	pop	ecx
	pop	ecx
	ret
section code
	section vsc@std@__1@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv virtual
@std@__1@#deque$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv:
L_50275:
	mov	eax,dword [esp+04h]
	push	eax
	call	@std@__1@#__deque_base$#unique_ptr$15InternalVerInfo#default_delete$n0~~#allocator$#unique_ptr$n0#default_delete$n0~~~~@$bdtr$qv
	pop	ecx
L_50276:
	ret
section code
	section vsc@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv virtual
@std@__1@#integral_constant$4bool3_Tp$1&~@$bdtr$qv:
L_50281:
L_50282:
	ret
section code
section data

@std@__1@piecewise_construct	resb	04h

@std@__1@allocator_arg	resb	04h

[global	@std@__1@__RCFile_cpp__319443263@ignore]

@std@__1@__RCFile_cpp__319443263@ignore	resb	04h

@Token@GetId$xqv_aa_0	resb	018h

section bss

_$anontemp226	resb	04h

section code
@__DYNAMIC_STARTUP___1487256139$q:
	add	esp,byte 0ffffffe8h
L_50287:
	lea	eax,[esp-0ch+018h]
L_50303:
	mov	ecx,dword [eax]
	mov	dword [@std@__1@piecewise_construct],ecx
	lea	eax,[esp-08h+018h]
L_50319:
	mov	ecx,dword [eax]
	mov	dword [@std@__1@allocator_arg],ecx
	lea	eax,[esp-04h+018h]
L_50335:
	mov	ecx,dword [eax]
	mov	dword [@std@__1@__RCFile_cpp__319443263@ignore],ecx
L_50288:
	add	esp,byte 018h
	ret
section cstartup
	db	0,32
	dd	@__DYNAMIC_STARTUP___1487256139$q
section code
@__DYNAMIC_RUNDOWN___1487256139$q:
L_50341:
	cmp	dword [_$anontemp226],byte 00h
	je	short	L_50344
	push	dword @Token@GetId$xqv_aa_0
	call	dword [@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	pop	ecx
L_50344:
L_50342:
	ret
section crundown
	db	0,32
	dd	@__DYNAMIC_RUNDOWN___1487256139$q
section code
	section vsc@$@std@runtime_error@$bdtr$qv virtual
@$@std@runtime_error@$bdtr$qv:
	jmp	[@std@runtime_error@$bdtr$qv]
section code
	section vsc@$@std@out_of_range@$bdtr$qv virtual
@$@std@out_of_range@$bdtr$qv:
	jmp	[@std@out_of_range@$bdtr$qv]
section code
	section vsc@$@std@length_error@$bdtr$qv virtual
@$@std@length_error@$bdtr$qv:
	jmp	[@std@length_error@$bdtr$qv]
section code
	section vsc@$@std@logic_error@$bdtr$qv virtual
@$@std@logic_error@$bdtr$qv:
	jmp	[@std@logic_error@$bdtr$qv]
section code
	section vsc@$@std@exception@$bdtr$qv virtual
@$@std@exception@$bdtr$qv:
	jmp	[@std@exception@$bdtr$qv]
section code
section data
section string
L_1987:
	db	"Invalid resource type"
	db	00h
L_1986:
	db	"Expected resource identifier"
	db	00h
L_1985:
	db	"Expected resource type"
	db	00h
L_1792:
	db	"Expected valid file name"
	db	00h
L_1791:
	db	" "
	db	09h
	db	0bh
	db	00h
L_1630:
	db	"End expected"
	db	00h
L_1467:
	db	"Begin expected"
	db	00h
L_1326:
	db	"End of line expected"
	db	00h
L_1215:
	db	"identifier expected"
	db	00h
L_995:
	db	"String expected"
	db	00h
L_994:
	dw	00h
L_2:
	db	"vector"
	db	00h
L_1:
	db	"basic_string"
	db	00h
section const

	times $$-$ & 7 nop
L_29612:
	dd	080601807h

section code
[extern	@std@out_of_range@_$vt]
	import @std@out_of_range@_$vt 
[extern	@std@length_error@_$vt]
	import @std@length_error@_$vt 
[extern	@$bdel$qpv]
	import @$bdel$qpv 
[extern	@$bdla$qpv]
	import @$bdla$qpv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qpxc]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qpxc 
[extern	@std@runtime_error@what$xqv]
	import @std@runtime_error@what$xqv 
[extern	@std@runtime_error@$bdtr$qv]
	import @std@runtime_error@$bdtr$qv 
[extern	@std@runtime_error@$bctr$qpxc]
	import @std@runtime_error@$bctr$qpxc 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qR#basic_string$c#char_traits$c~#allocator$c~~ 
[extern	@__arrCall$qpvpvpvii]
	import @__arrCall$qpvpvpvii 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bdtr$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qrx#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qrx#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__init$qpxCui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__init$qpxCui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_size$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_size$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_pointer$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_pointer$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__is_long$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__is_long$xqv 
[extern	@std@__1@#__basic_string_common$4bool$1&~@$bctr$qv]
	import @std@__1@#__basic_string_common$4bool$1&~@$bctr$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__alloc$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__alloc$xqv 
[extern	_toupper]
	import _toupper 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$barray$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$barray$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@size$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@size$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basn$qR#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@assign$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@assign$qrx#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@assign$qpxCui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@assign$qpxCui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__grow_by_and_replace$quiuiuiuiuiuipxC]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__grow_by_and_replace$quiuiuiuiuiuipxC 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__invalidate_iterators_past$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__invalidate_iterators_past$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_size$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_size$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_pointer$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_pointer$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@capacity$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@capacity$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@data$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@data$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__copy_assign_alloc$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__copy_assign_alloc$qrx#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__copy_assign_alloc$qrx#basic_string$C#char_traits$C~#allocator$C~~#integral_constant$4bool3_Tp$0&~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__copy_assign_alloc$qrx#basic_string$C#char_traits$C~#allocator$C~~#integral_constant$4bool3_Tp$0&~ 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$basn$qR#basic_string$c#char_traits$c~#allocator$c~~]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$basn$qR#basic_string$c#char_traits$c~#allocator$c~~ 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@erase$quiui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@erase$quiui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__invalidate_iterators_past$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__invalidate_iterators_past$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_size$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_size$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_short_size$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_short_size$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_long_size$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_long_size$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__is_long$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__is_long$xqv 
[extern	_memmove]
	import _memmove 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_pointer$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_pointer$qv 
[extern	@std@__1@#__basic_string_common$4bool$1&~@__throw_out_of_range$xqv]
	import @std@__1@#__basic_string_common$4bool$1&~@__throw_out_of_range$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@size$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@size$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@substr$xquiui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@substr$xquiui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qrx#basic_string$c#char_traits$c~#allocator$c~~uiuirx#allocator$c~]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qrx#basic_string$c#char_traits$c~#allocator$c~~uiuirx#allocator$c~ 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__init$qpxcui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__init$qpxcui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@data$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@data$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__alloc$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__alloc$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@find_first_of$xqpxcui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@find_first_of$xqpxcui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@find_first_not_of$xqpxcui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@find_first_not_of$xqpxcui 
[extern	_memchr]
	import _memchr 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__move_assign$qr#basic_string$c#char_traits$c~#allocator$c~~#integral_constant$4bool3_Tp$1&~]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__move_assign$qr#basic_string$c#char_traits$c~#allocator$c~~#integral_constant$4bool3_Tp$1&~ 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__zero$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__zero$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__move_assign_alloc$qr#basic_string$c#char_traits$c~#allocator$c~~]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__move_assign_alloc$qr#basic_string$c#char_traits$c~#allocator$c~~ 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__move_assign_alloc$qr#basic_string$c#char_traits$c~#allocator$c~~#integral_constant$4bool3_Tp$1&~]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__move_assign_alloc$qr#basic_string$c#char_traits$c~#allocator$c~~#integral_constant$4bool3_Tp$1&~ 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__alloc$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__alloc$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@shrink_to_fit$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@shrink_to_fit$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@reserve$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@reserve$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__invalidate_all_iterators$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__invalidate_all_iterators$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_long_pointer$qpc]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_long_pointer$qpc 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_long_cap$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__set_long_cap$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_short_pointer$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_short_pointer$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_pointer$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_pointer$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__recommend$qui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__recommend$qui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@capacity$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@capacity$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_cap$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_cap$xqv 
[extern	@std@__1@#__basic_string_common$4bool$1&~@__throw_length_error$xqv]
	import @std@__1@#__basic_string_common$4bool$1&~@__throw_length_error$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@max_size$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@max_size$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@clear$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@clear$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxC]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxC 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qR#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qR#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__move_assign$qr#basic_string$C#char_traits$C~#allocator$C~~#integral_constant$4bool3_Tp$1&~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__move_assign$qr#basic_string$C#char_traits$C~#allocator$C~~#integral_constant$4bool3_Tp$1&~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__zero$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__zero$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__move_assign_alloc$qr#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__move_assign_alloc$qr#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__move_assign_alloc$qr#basic_string$C#char_traits$C~#allocator$C~~#integral_constant$4bool3_Tp$1&~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__move_assign_alloc$qr#basic_string$C#char_traits$C~#allocator$C~~#integral_constant$4bool3_Tp$1&~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__alloc$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__alloc$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@shrink_to_fit$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@shrink_to_fit$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@reserve$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@reserve$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__invalidate_all_iterators$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__invalidate_all_iterators$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_short_size$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_short_size$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_long_pointer$qpC]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_long_pointer$qpC 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_long_size$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_long_size$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_long_cap$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__set_long_cap$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_pointer$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_pointer$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_short_pointer$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_short_pointer$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__recommend$qui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__recommend$qui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@max_size$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@max_size$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@clear$qv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@clear$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basadd$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$basadd$qrx#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@append$qrx#basic_string$C#char_traits$C~#allocator$C~~]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@append$qrx#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@append$qpxCui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@append$qpxCui 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_cap$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_long_cap$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_short_size$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_short_size$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@c_str$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@c_str$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@c_str$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@c_str$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_pointer$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_pointer$xqv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_short_pointer$xqv]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@__get_short_pointer$xqv 
[extern	_localeconv]
	import _localeconv 
[extern	_strftime]
	import _strftime 
[extern	_mbtowc]
	import _mbtowc 
[extern	_strxfrm]
	import _strxfrm 
[extern	_strcoll]
	import _strcoll 
[extern	_vsscanf]
	import _vsscanf 
[extern	_strtold]
	import _strtold 
[extern	_strtoull]
	import _strtoull 
[extern	_strtoll]
	import _strtoll 
[extern	_strcpy]
	import _strcpy 
[extern	_malloc]
	import _malloc 
[extern	_strlen]
	import _strlen 
[extern	_vsnprintf]
	import _vsnprintf 
[extern	_lldiv]
	import _lldiv 
[extern	_ldiv]
	import _ldiv 
[extern	_llabs]
	import _llabs 
[extern	_labs]
	import _labs 
[extern	_srand]
	import _srand 
[extern	_rand]
	import _rand 
[extern	@std@__1@ios_base@clear$qui]
	import @std@__1@ios_base@clear$qui 
[extern	@std@__1@error_code@$basn$qRx10error_code]
	import @std@__1@error_code@$basn$qRx10error_code 
[extern	@std@__1@error_condition@$bctr$qRx15error_condition]
	import @std@__1@error_condition@$bctr$qRx15error_condition 
[extern	@std@__1@iostream_category$qv]
	import @std@__1@iostream_category$qv 
[extern	@std@__1@error_code@$bctr$qRx10error_code]
	import @std@__1@error_code@$bctr$qRx10error_code 
[extern	@std@__1@error_category@equivalent$xqrx10error_codei]
	import @std@__1@error_category@equivalent$xqrx10error_codei 
[extern	@std@__1@error_category@equivalent$xqirx15error_condition]
	import @std@__1@error_category@equivalent$xqirx15error_condition 
[extern	@std@__1@generic_category$qv]
	import @std@__1@generic_category$qv 
[extern	@std@__1@error_code@#$bctr$3_Ep~$qn0p45#enable_if$v$ts#is_error_code_enum$n0~t~@type]
	import @std@__1@error_code@#$bctr$3_Ep~$qn0p45#enable_if$v$ts#is_error_code_enum$n0~t~@type 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@compare$xqpxc]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@compare$xqpxc 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@compare$xquiuipxcui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@compare$xquiuipxcui 
[extern	_memcmp]
	import _memcmp 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_pointer$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_pointer$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_short_pointer$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_short_pointer$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_pointer$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_pointer$xqv 
[extern	@std@out_of_range@$bdtr$qv]
	import @std@out_of_range@$bdtr$qv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_short_size$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_short_size$xqv 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_size$xqv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@__get_long_size$xqv 
[extern	_strlen]
	import _strlen 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qv]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qv 
[extern	_rand]
	import _rand 
[extern	_srand]
	import _srand 
[extern	_time]
	import _time 
[extern	@std@__1@#__vector_base_common$4bool$1&~@__throw_out_of_range$xqv]
	import @std@__1@#__vector_base_common$4bool$1&~@__throw_out_of_range$xqv 
[extern	@std@out_of_range@$bctr$qrx12out_of_range]
	import @std@out_of_range@$bctr$qrx12out_of_range 
[extern	@std@logic_error@$bctr$qrx11logic_error]
	import @std@logic_error@$bctr$qrx11logic_error 
[extern	@std@logic_error@$bctr$qpxc]
	import @std@logic_error@$bctr$qpxc 
[extern	@std@__1@#__vector_base_common$4bool$1&~@$bctr$qv]
[extern	@std@__1@#__vector_base_common$4bool$1&~@__throw_length_error$xqv]
	import @std@__1@#__vector_base_common$4bool$1&~@__throw_length_error$xqv 
[extern	@std@length_error@$bdtr$qv]
	import @std@length_error@$bdtr$qv 
[extern	@std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxCui]
	import @std@__1@#basic_string$C#char_traits$C~#allocator$C~~@$bctr$qpxCui 
[extern	@std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qpxcui]
	import @std@__1@#basic_string$c#char_traits$c~#allocator$c~~@$bctr$qpxcui 
[extern	_memcpy]
	import _memcpy 
[extern	@std@length_error@$bctr$qrx12length_error]
	import @std@length_error@$bctr$qrx12length_error 
[extern	@std@logic_error@$bdtr$qv]
	import @std@logic_error@$bdtr$qv 
[extern	@std@exception@$bdtr$qv]
	import @std@exception@$bdtr$qv 
[extern	___builtin_popcountll]
	import ___builtin_popcountll 
[extern	___builtin_popcountl]
	import ___builtin_popcountl 
[extern	___builtin_popcount]
	import ___builtin_popcount 
[extern	___builtin_clzll]
	import ___builtin_clzll 
[extern	___builtin_ctzll]
	import ___builtin_ctzll 
[extern	@__is_constructible$qe]
	import @__is_constructible$qe 
[extern	@__is_convertible_to$qe]
	import @__is_convertible_to$qe 
[extern	_fputc]
	import _fputc 
[extern	_fgetc]
	import _fgetc 
[extern	_fputc]
	import _fputc 
[extern	_fgetc]
	import _fgetc 
[extern	@VersionInfo@ReadRC$qr6RCFile]
[extern	@VersionInfo@WriteRes$qr7ResFile]
[extern	@VersionInfo@$bdtr$qv]
[extern	@RCData@ReadRC$qr6RCFile]
[extern	@RCData@WriteRes$qr7ResFile]
[extern	@RCData@$bdtr$qv]
[extern	@MessageTable@ReadRC$qr6RCFile]
[extern	@MessageTable@WriteRes$qr7ResFile]
[extern	@MessageTable@$bdtr$qv]
[extern	@Menu@ReadRC$qr6RCFile]
[extern	@Menu@WriteRes$qr7ResFile]
[extern	@Menu@$bdtr$qv]
[extern	@GenericResource@ReadRC$qr6RCFile]
[extern	@GenericResource@WriteRes$qr7ResFile]
[extern	@GenericResource@$bdtr$qv]
[extern	@FileHeader@WriteRes$qr7ResFile]
[extern	@DlgInclude@ReadRC$qr6RCFile]
[extern	@DlgInclude@WriteRes$qr7ResFile]
[extern	@DlgInclude@$bdtr$qv]
[extern	@Dialog@ReadRC$qr6RCFile]
[extern	@Dialog@WriteRes$qr7ResFile]
[extern	@Dialog@$bdtr$qv]
[extern	@GroupCursor@ReadRC$qr6RCFile]
[extern	@GroupCursor@WriteRes$qr7ResFile]
[extern	@GroupIcon@ReadRC$qr6RCFile]
[extern	@GroupIcon@WriteRes$qr7ResFile]
[extern	@Bitmap@ReadRC$qr6RCFile]
[extern	@Bitmap@WriteRes$qr7ResFile]
[extern	@Bitmap@$bdtr$qv]
[extern	@Accelerators@ReadRC$qr6RCFile]
[extern	@Accelerators@WriteRes$qr7ResFile]
[extern	@Resource@WriteRes$qr7ResFile]
[extern	@$xt@#basic_string$c#char_traits$c~#allocator$c~~]
	import @$xt@#basic_string$c#char_traits$c~#allocator$c~~ 
[extern	@std@__1@#declval$#allocator$c~~$qv]
[extern	@std@__1@#declval$#allocator$c~~$qv]
[extern	@std@__1@#declval$#allocator$C~~$qv]
[extern	@std@__1@#declval$#allocator$C~~$qv]
[extern	@$xt@#basic_string$C#char_traits$C~#allocator$C~~]
	import @$xt@#basic_string$C#char_traits$C~#allocator$C~~ 
[extern	@StringTable@ReadRC$qr6RCFile]
[extern	@StringTable@$bctr$qrx12ResourceInfo]
[extern	@MenuItem@$bdtr$qv]
[extern	@Font@$bctr$qrx10ResourceIdrx12ResourceInfo]
[extern	@Control@$bdtr$qv]
[extern	@ResFile@Add$qp8Resource]
[extern	@ResFile@Reset$qv]
[extern	@ResourceId@ReadRC$qr6RCFile4bool]
[extern	@Expression@conditional$qv]
[extern	@Lexer@NextToken$qv]
[extern	@Lexer@GetRestOfLine$qv]
[extern	@ppInclude@pushFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~]
[extern	@Tokenizer@Reset$qrx#basic_string$c#char_traits$c~#allocator$c~~]
[extern	@Errors@Error$qrx#basic_string$c#char_traits$c~#allocator$c~~]
[extern	@Utils@SearchForFile$qrx#basic_string$c#char_traits$c~#allocator$c~~rx#basic_string$c#char_traits$c~#allocator$c~~]
[extern	_lldiv]
	import _lldiv 
[extern	_ldiv]
	import _ldiv 
[extern	_llabs]
	import _llabs 
[extern	_labs]
	import _labs 
[extern	@std@__1@#declval$R#allocator$H~~$qv]
[extern	@std@__1@#declval$R#allocator$H~~$qv]
[extern	@std@__1@#declval$R#allocator$h~~$qv]
[extern	@std@__1@#declval$R#allocator$h~~$qv]
[extern	@std@__1@#declval$R#allocator$C~~$qv]
[extern	@std@__1@#declval$R#allocator$C~~$qv]
[extern	@std@__1@#declval$R#allocator$c~~$qv]
[extern	@std@__1@#declval$R#allocator$c~~$qv]
[extern	@std@runtime_error@$bctr$qrx13runtime_error]
	import @std@runtime_error@$bctr$qrx13runtime_error 
[extern	_wmemmove]
[extern	_wmemcpy]
[extern	_wcslen]
[extern	_towctrans]
[extern	_iswctype]
[extern	___ctype_u_toupper]
[extern	___ctype_u_tolower]
[extern	_towctrans]
[extern	_iswctype]
[extern	_memchr]
	import _memchr 
[extern	_memmove]
	import _memmove 
[extern	_memcpy]
	import _memcpy 
[extern	_memcmp]
	import _memcmp 
[extern	_wcsnrtombs]
[extern	_mbsnrtowcs]
[extern	_wcsrtombs]
[extern	_mbsrtowcs]
[extern	_mbrlen]
[extern	_wcrtomb]
[extern	_mbrtowc]
[extern	_wctob]
[extern	_btowc]
[extern	_wmemmove]
[extern	_wmemcpy]
[extern	_wcslen]
[extern	_wcsxfrm]
[extern	_wcscoll]
[extern	@__builtin_ctzl$qul]
[extern	@__builtin_ctz$qui]
[extern	@__builtin_clzl$qul]
[extern	@__builtin_clz$qui]
[extern	@_RundownException$qv]
	import @_RundownException$qv 
[extern	@_InitializeException$qpvpv]
	import @_InitializeException$qpvpv 
[extern	@_CatchCleanup$qpv]
	import @_CatchCleanup$qpv 
[extern	@_ThrowException$qpvpvipvpv]
	import @_ThrowException$qpvpvipvpv 
[extern	@$bnew$qui]
